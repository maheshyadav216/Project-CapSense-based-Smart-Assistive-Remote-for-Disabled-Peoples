ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_Sensing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	__aeabi_uidivmod
  20              		.section	.text.CapSense_SsCalcLfsrSize,"ax",%progbits
  21              		.align	2
  22              		.code	16
  23              		.thumb_func
  24              		.type	CapSense_SsCalcLfsrSize, %function
  25              	CapSense_SsCalcLfsrSize:
  26              	.LFB21:
  27              		.file 1 "Generated_Source\\PSoC4\\CapSense_Sensing.c"
   1:Generated_Source\PSoC4/CapSense_Sensing.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_Sensing.c **** * \file CapSense_Sensing.c
   3:Generated_Source\PSoC4/CapSense_Sensing.c **** * \version 7.0
   4:Generated_Source\PSoC4/CapSense_Sensing.c **** *
   5:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_Sensing.c **** *   This file contains the source of functions common for
   7:Generated_Source\PSoC4/CapSense_Sensing.c **** *   different sensing methods.
   8:Generated_Source\PSoC4/CapSense_Sensing.c **** *
   9:Generated_Source\PSoC4/CapSense_Sensing.c **** * \see CapSense v7.0 Datasheet
  10:Generated_Source\PSoC4/CapSense_Sensing.c **** *
  11:Generated_Source\PSoC4/CapSense_Sensing.c **** *//*****************************************************************************
  12:Generated_Source\PSoC4/CapSense_Sensing.c **** * Copyright (2016-2019), Cypress Semiconductor Corporation.
  13:Generated_Source\PSoC4/CapSense_Sensing.c **** ********************************************************************************
  14:Generated_Source\PSoC4/CapSense_Sensing.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:Generated_Source\PSoC4/CapSense_Sensing.c **** * protected by and subject to worldwide patent protection (United States and
  16:Generated_Source\PSoC4/CapSense_Sensing.c **** * foreign), United States copyright laws and international treaty provisions.
  17:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:Generated_Source\PSoC4/CapSense_Sensing.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:Generated_Source\PSoC4/CapSense_Sensing.c **** * custom software in support of licensee product to be used only in conjunction
  21:Generated_Source\PSoC4/CapSense_Sensing.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:Generated_Source\PSoC4/CapSense_Sensing.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:Generated_Source\PSoC4/CapSense_Sensing.c **** * this software except as specified above is prohibited without the express
  24:Generated_Source\PSoC4/CapSense_Sensing.c **** * written permission of Cypress.
  25:Generated_Source\PSoC4/CapSense_Sensing.c **** *
  26:Generated_Source\PSoC4/CapSense_Sensing.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:Generated_Source\PSoC4/CapSense_Sensing.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:Generated_Source\PSoC4/CapSense_Sensing.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress reserves the right to make changes without further notice to the
  30:Generated_Source\PSoC4/CapSense_Sensing.c **** * materials described herein. Cypress does not assume any liability arising out
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 2


  31:Generated_Source\PSoC4/CapSense_Sensing.c **** * of the application or use of any product or circuit described herein. Cypress
  32:Generated_Source\PSoC4/CapSense_Sensing.c **** * does not authorize its products for use as critical components in life-support
  33:Generated_Source\PSoC4/CapSense_Sensing.c **** * systems where a malfunction or failure may reasonably be expected to result in
  34:Generated_Source\PSoC4/CapSense_Sensing.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:Generated_Source\PSoC4/CapSense_Sensing.c **** * support systems application implies that the manufacturer assumes all risk of
  36:Generated_Source\PSoC4/CapSense_Sensing.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:Generated_Source\PSoC4/CapSense_Sensing.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  40:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "cyfitter.h"
  41:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Configuration.h"
  42:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Structure.h"
  43:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Sensing.h"
  44:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
  45:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingCSX_LL.h"
  46:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  47:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
  48:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingISX_LL.h"
  49:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  50:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
  51:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingCSD_LL.h"
  52:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  53:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)
  54:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SmartSense_LL.h"
  55:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  56:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ADC_EN)
  57:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_Adc.h"
  58:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  59:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
  60:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SelfTest.h"
  61:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  62:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  63:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (0u != CapSense_ISX_EN)
  64:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_DigPrt2.h"
  65:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_USES_PORT_3)
  66:Generated_Source\PSoC4/CapSense_Sensing.c ****         #include "CapSense_DigPrt3.h"
  67:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
  68:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  69:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  70:Generated_Source\PSoC4/CapSense_Sensing.c **** /***************************************
  71:Generated_Source\PSoC4/CapSense_Sensing.c **** * API Constants
  72:Generated_Source\PSoC4/CapSense_Sensing.c **** ***************************************/
  73:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  74:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_IMO_FREQUENCY_OFFSET_MIN               (0u)
  75:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_IMO_FREQUENCY_OFFSET_MAX               (255u)
  76:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CALIBRATION_RESOLUTION        (12u)
  77:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CALIBRATION_FREQ_KHZ          (1500u)
  78:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CAL_LEVEL                     (CapSense_CSD_RAWCOUNT_CAL_LEVEL)
  79:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CAL_UNITS                     (1000u)
  80:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CP_MAX                        (69000Lu)
  81:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CLK_SOURCE_LFSR_SCALE_OFFSET           (4u)
  82:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  83:Generated_Source\PSoC4/CapSense_Sensing.c **** /* HW IP Block limitation */
  84:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
  85:Generated_Source\PSoC4/CapSense_Sensing.c ****     #define CapSense_CSD_SNS_FREQ_KHZ_MAX               (6000u)
  86:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
  87:Generated_Source\PSoC4/CapSense_Sensing.c ****     #define CapSense_CSD_SNS_FREQ_KHZ_MAX               (12600u)
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 3


  88:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
  89:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  90:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_FLIP_FLOP_DIV                          (1u)
  91:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  92:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_12000KHZ                   (12000uL)
  93:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_24000KHZ                   (24000uL)
  94:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_48000KHZ                   (48000uL)
  95:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  96:Generated_Source\PSoC4/CapSense_Sensing.c **** /*****************************************************************************/
  97:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Enumeration types definition                                              */
  98:Generated_Source\PSoC4/CapSense_Sensing.c **** /*****************************************************************************/
  99:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 100:Generated_Source\PSoC4/CapSense_Sensing.c **** typedef enum
 101:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 102:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RES_PULLUP_E   = 0x02u,
 103:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RES_PULLDOWN_E = 0x03u
 104:Generated_Source\PSoC4/CapSense_Sensing.c **** } CapSense_PORT_TEST_DM;
 105:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 106:Generated_Source\PSoC4/CapSense_Sensing.c **** typedef enum
 107:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 108:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_STS_RESET      = 0x01u,
 109:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_STS_NO_RESET   = 0x02u
 110:Generated_Source\PSoC4/CapSense_Sensing.c **** } CapSense_TEST_TYPE;
 111:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 112:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 113:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 114:Generated_Source\PSoC4/CapSense_Sensing.c **** * Static Function Prototypes
 115:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 116:Generated_Source\PSoC4/CapSense_Sensing.c **** /**
 117:Generated_Source\PSoC4/CapSense_Sensing.c **** * \cond SECTION_C_INTERNAL
 118:Generated_Source\PSoC4/CapSense_Sensing.c **** * \addtogroup group_c_internal
 119:Generated_Source\PSoC4/CapSense_Sensing.c **** * \{
 120:Generated_Source\PSoC4/CapSense_Sensing.c **** */
 121:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 122:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_DISABLE == CapSense_CSDV2)
 123:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsTrimIdacs(void);
 124:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 125:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_ISX_EN) || \
 126:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG))
 127:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSinking(void);
 128:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
 129:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)) */
 130:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 131:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_ISX_EN) || \
 132:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG))
 133:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSourcing(void);
 134:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
 135:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)) */
 136:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 137:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 138:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 139:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsCSDDisableMode(void);
 140:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 141:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
 142:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableCSXMode(void);
 143:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 144:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 4


 145:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableISXMode(void);
 146:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
 147:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 148:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(((CapSense_ENABLE == CapSense_CSX_EN) && \
 149:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
 150:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) && \
 151:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)) ||\
 152:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSD_EN) && \
 153:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
 154:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)))
 155:Generated_Source\PSoC4/CapSense_Sensing.c ****     static uint8 CapSense_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum);
 156:Generated_Source\PSoC4/CapSense_Sensing.c ****     static uint8 CapSense_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize);
 157:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 158:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 159:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 160:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptr
 161:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 162:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 163:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
 164:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptrWdg
 165:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 166:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 167:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 168:Generated_Source\PSoC4/CapSense_Sensing.c **** /** \}
 169:Generated_Source\PSoC4/CapSense_Sensing.c **** * \endcond */
 170:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 171:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 172:Generated_Source\PSoC4/CapSense_Sensing.c **** * Defines module variables
 173:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 174:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 175:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_SENSE_METHOD_ENUM CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
 176:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 177:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 178:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Module variable keep track of multi-frequency scan channel index */
 179:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 CapSense_scanFreqIndex = 0u;
 180:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Variable keep frequency offsets */
 181:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 CapSense_immunity[CapSense_NUM_SCAN_FREQS] = {0u, 0u, 0u};
 182:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
 183:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* const allows C-compiler to do optimization */
 184:Generated_Source\PSoC4/CapSense_Sensing.c ****     const uint8 CapSense_scanFreqIndex = 0u;
 185:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 186:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 187:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Global software variables */
 188:Generated_Source\PSoC4/CapSense_Sensing.c **** volatile uint8 CapSense_widgetIndex = 0u;    /* Index of the scanning widget */
 189:Generated_Source\PSoC4/CapSense_Sensing.c **** volatile uint8 CapSense_sensorIndex = 0u;    /* Index of the scanning sensor */
 190:Generated_Source\PSoC4/CapSense_Sensing.c **** uint8 CapSense_requestScanAllWidget = 0u;
 191:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 192:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Pointer to RAM_SNS_STRUCT structure */
 193:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_RAM_SNS_STRUCT *CapSense_curRamSnsPtr;
 194:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 195:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) || \
 196:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSX_EN) || \
 197:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_ISX_EN))
 198:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Pointer to Flash structure holding configuration of widget to be scanned */
 199:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_WD_STRUCT const *CapSense_curFlashWdgtPtr = 0u;
 200:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 201:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 5


 202:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 203:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Pointer to Flash structure holding info of sensor to be scanned */
 204:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_SNS_STRUCT const *CapSense_curFlashSnsPtr = 0u;
 205:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 206:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 207:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Pointer to Flash structure to hold Sns electrode that was connected previously */
 208:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_FLASH_IO_STRUCT const *CapSense_curSnsIOPtr;
 209:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 210:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_IDAC_GAIN_TABLE_STRUCT const CapSense_idacGainTable[CapSense_IDAC_GAIN_NUMBER] = CapSense_
 211:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 212:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 213:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 214:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_IsBusy
 215:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 216:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 217:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 218:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the current status of the Component (Scan is completed or Scan is in
 219:Generated_Source\PSoC4/CapSense_Sensing.c **** *  progress).
 220:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 221:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 222:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function returns a status of the hardware block whether a scan is
 223:Generated_Source\PSoC4/CapSense_Sensing.c **** *  currently in progress or not. If the Component is busy, no new scan or Widget
 224:Generated_Source\PSoC4/CapSense_Sensing.c **** *  setup is made. The critical section (i.e. disable global interrupt)
 225:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is recommended for the application when the device transitions from
 226:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the active mode to sleep or deep sleep modes.
 227:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 228:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 229:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the current status of the Component:
 230:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CapSense_NOT_BUSY - No scan is in progress and a next scan
 231:Generated_Source\PSoC4/CapSense_Sensing.c **** *      can be initiated.
 232:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CapSense_SW_STS_BUSY - The previous scanning is not completed
 233:Generated_Source\PSoC4/CapSense_Sensing.c **** *      and the hardware block is busy.
 234:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 235:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 236:Generated_Source\PSoC4/CapSense_Sensing.c **** uint32 CapSense_IsBusy(void)
 237:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 238:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (CapSense_dsRam.status & CapSense_SW_STS_BUSY);
 239:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 240:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 241:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 242:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetupWidget
 243:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 244:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 245:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 246:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs the initialization required to scan the specified widget.
 247:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 248:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 249:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function prepares the Component to scan all the sensors in the specified
 250:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget by executing the following tasks:
 251:Generated_Source\PSoC4/CapSense_Sensing.c **** *    1. Re-initialize the hardware if it is not configured to perform the
 252:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensing method used by the specified widget, this happens only if multiple
 253:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensing methods are used in the Component.
 254:Generated_Source\PSoC4/CapSense_Sensing.c **** *    2. Initialize the hardware with specific sensing configuration (e.g.
 255:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensor clock, scan resolution) used by the widget.
 256:Generated_Source\PSoC4/CapSense_Sensing.c **** *    3. Disconnect all previously connected electrodes, if the electrodes
 257:Generated_Source\PSoC4/CapSense_Sensing.c **** *       connected by the lower level SetupWidgetExt() or ConnectSns() functions
 258:Generated_Source\PSoC4/CapSense_Sensing.c ****         and not disconnected.
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 6


 259:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 260:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function does not start sensor scanning, the CapSense_Scan()
 261:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function must be called to start the scan sensors in the widget. If this
 262:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function is called more than once, it does not break the Component operation,
 263:Generated_Source\PSoC4/CapSense_Sensing.c **** *  but only the last initialized widget is in effect.
 264:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 265:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 266:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID number of the widget to be initialized for scanning.
 267:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the
 268:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 269:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_<WidgetName>_WDGT_ID.
 270:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 271:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 272:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the widget setting up operation:
 273:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_SUCCESS - The operation is successfully completed.
 274:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_BAD_PARAM - The widget is invalid or if the specified widget is
 275:Generated_Source\PSoC4/CapSense_Sensing.c **** *      disabled
 276:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_INVALID_STATE - The previous scanning is not completed and the
 277:Generated_Source\PSoC4/CapSense_Sensing.c **** *      hardware block is busy.
 278:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_UNKNOWN - An unknown sensing method is used by the widget or any
 279:Generated_Source\PSoC4/CapSense_Sensing.c **** *      other spurious error occurred.
 280:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 281:Generated_Source\PSoC4/CapSense_Sensing.c **** **********************************************************************************/
 282:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SetupWidget(uint32 widgetId)
 283:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 284:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 285:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 286:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 287:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 288:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 289:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_INVALID_STATE;
 290:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 291:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 292:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  Check if widget id is valid, specified widget is enabled and widget did not
 293:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  detect any fault conditions if BIST is enabled. If all conditions are met,
 294:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  set widgetStatus as good, if not, set widgetStatus as bad.
 295:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 296:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if ((CapSense_TOTAL_WIDGETS > widgetId) &&
 297:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 298:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 299:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 300:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_SUCCESS;
 301:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 302:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 303:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 304:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_BAD_PARAM;
 305:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 306:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 307:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 308:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Check widgetStatus flag that is set earlier, if flag is good, then set up only
 309:Generated_Source\PSoC4/CapSense_Sensing.c ****      * widget
 310:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 311:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CYRET_SUCCESS == widgetStatus)
 312:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 313:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
 314:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 315:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 7


 316:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 317:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSX scan */
 318:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXSetupWidget(widgetId);
 319:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 320:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 321:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 322:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 323:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSD scan */
 324:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDSetupWidget(widgetId);
 325:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 326:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 327:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 328:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 329:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for ISX scan */
 330:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXSetupWidget(widgetId);
 331:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 332:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 333:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 334:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Sensing method is invalid, return error to caller */
 335:Generated_Source\PSoC4/CapSense_Sensing.c ****             widgetStatus = CYRET_UNKNOWN;
 336:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 337:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 338:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 339:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (widgetStatus);
 340:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 341:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 342:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 343:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 344:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_Scan
 345:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 346:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 347:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 348:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Initiates scanning of all the sensors in the widget initialized by
 349:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SetupWidget(), if no scan is in progress.
 350:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 351:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 352:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function is called only after the CapSense_SetupWidget()
 353:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function is called to start the scanning of the sensors in the widget. The
 354:Generated_Source\PSoC4/CapSense_Sensing.c **** *  status of a sensor scan must be checked using the CapSense_IsBusy()
 355:Generated_Source\PSoC4/CapSense_Sensing.c **** *  API prior to starting a next scan or setting up another widget.
 356:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 357:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 358:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the scan initiation operation:
 359:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 360:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 361:Generated_Source\PSoC4/CapSense_Sensing.c **** *    hardware block is busy.
 362:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget.
 363:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 364:Generated_Source\PSoC4/CapSense_Sensing.c **** ********************************************************************************/
 365:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_Scan(void)
 366:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 367:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 368:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 369:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 370:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 371:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 372:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 8


 373:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 374:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 375:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 376:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_currentSenseMethod)
 377:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 378:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 379:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 380:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXScan();
 381:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 382:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 383:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 384:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 385:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDScan();
 386:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 387:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 388:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 389:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 390:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXScan();
 391:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 392:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 393:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 394:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CYRET_UNKNOWN;
 395:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 396:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 397:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 398:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 399:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 400:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 401:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 402:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_ScanAllWidgets
 404:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 405:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 406:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 407:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Initializes the first enabled widget and scanning of all the sensors in the
 408:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget, then the same process is repeated for all the widgets in the Component,
 409:Generated_Source\PSoC4/CapSense_Sensing.c **** *  i.e. scanning of all the widgets in the Component.
 410:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 411:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 412:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function initializes a widget and scans all the sensors in the widget,
 413:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and then repeats the same for all the widgets in the Component. The tasks of
 414:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_SetupWidget() and CapSense_Scan() functions are
 415:Generated_Source\PSoC4/CapSense_Sensing.c **** *  executed by these functions. The status of a sensor scan must be checked
 416:Generated_Source\PSoC4/CapSense_Sensing.c **** *  using the CapSense_IsBusy() API prior to starting a next scan
 417:Generated_Source\PSoC4/CapSense_Sensing.c **** *  or setting up another widget.
 418:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 419:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 420:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
 421:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 422:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_BAD_PARAM - All the widgets are disabled.
 423:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the HW block is busy.
 424:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - There are unknown errors.
 425:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 426:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 427:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_ScanAllWidgets(void)
 428:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 429:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 9


 430:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 431:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
 432:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 433:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_SW_STS_BUSY))
 434:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 435:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 436:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 437:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 438:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 439:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 440:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
 441:Generated_Source\PSoC4/CapSense_Sensing.c ****          *  Set up widget first widget.
 442:Generated_Source\PSoC4/CapSense_Sensing.c ****          *  If widget returned error, set up next, continue same until widget does not return error
 443:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
 444:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u;
 445:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex < CapSense_TOTAL_WIDGETS;
 446:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex++)
 447:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 448:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 449:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CapSense_SetupWidget(wdgtIndex);
 450:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 451:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS == scanStatus)
 452:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 453:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (0u != (CapSense_TOTAL_WIDGETS - 1u))
 454:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* If there are more than one widget to be scanned, request callback to scan ne
 455:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_TOTAL_WIDGETS - 1u) > wdgtIndex)
 456:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 457:Generated_Source\PSoC4/CapSense_Sensing.c ****                          /* Request callback to scan next widget in ISR */
 458:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_ENABLE;
 459:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 460:Generated_Source\PSoC4/CapSense_Sensing.c ****                     else
 461:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 462:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Request to exit in ISR (Do not scan the next widgets) */
 463:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_DISABLE;
 464:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 465:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else
 466:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 467:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Request to exit in ISR (We have only one widget) */
 468:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_DISABLE;
 469:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 470:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (0u != (CapSense_TOTAL_WIDGETS - 1u)) */
 471:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 472:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initiate scan and quit loop */
 473:Generated_Source\PSoC4/CapSense_Sensing.c ****                 scanStatus = CapSense_Scan();
 474:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 475:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 476:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 477:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 478:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 479:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 480:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 481:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 482:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 483:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 484:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 485:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetupWidgetExt
 486:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 10


 487:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 488:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 489:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs extended initialization for the specified widget and also performs
 490:Generated_Source\PSoC4/CapSense_Sensing.c **** *  initialization required for a specific sensor in the widget. This function
 491:Generated_Source\PSoC4/CapSense_Sensing.c **** *  requires using the CapSense_ScanExt() function to initiate a scan.
 492:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 493:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 494:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function does the same as CapSense_SetupWidget() and also
 495:Generated_Source\PSoC4/CapSense_Sensing.c **** *  does the following tasks:
 496:Generated_Source\PSoC4/CapSense_Sensing.c **** *    1. Connects the first sensor of the widget.
 497:Generated_Source\PSoC4/CapSense_Sensing.c **** *    2. Configures the CSD HW block to perform a scan of the specified sensor.
 498:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 499:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Once this function is called to initialize a widget and a sensor, the
 500:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_ScanExt() function is called to scan the sensor.
 501:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 502:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function is called when no scanning is in progress. I.e.
 503:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_IsBusy() returns a non-busy status.
 504:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 505:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling this function directly from the application layer is not
 506:Generated_Source\PSoC4/CapSense_Sensing.c **** *  recommended. This function is used to implement only the user's specific
 507:Generated_Source\PSoC4/CapSense_Sensing.c **** *  use cases (for faster execution time or pipeline scanning for example).
 508:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 509:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 510:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID number of the widget to perform hardware and firmware
 511:Generated_Source\PSoC4/CapSense_Sensing.c **** *  initialization required for scanning the specific sensor in the specific
 512:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget.
 513:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the CapSense
 514:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Configuration header file defined as CapSense_<WidgetName>_WDGT_ID.
 515:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 516:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param sensorId
 517:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID number of the sensor within the widget to perform hardware
 518:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and firmware initialization required for scanning a specific sensor in a
 519:Generated_Source\PSoC4/CapSense_Sensing.c **** *  specific widget.
 520:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the sensor ID within a specified widget can be found in the
 521:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 522:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_<WidgetName>_SNS<SensorNumber>_ID
 523:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 524:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 525:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
 526:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - The operation is successfully completed.
 527:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_BAD_PARAM - The widget is invalid or if the specified widget is
 528:Generated_Source\PSoC4/CapSense_Sensing.c **** *    disabled
 529:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 530:Generated_Source\PSoC4/CapSense_Sensing.c **** *    hardware block is busy.
 531:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget or any
 532:Generated_Source\PSoC4/CapSense_Sensing.c **** *    other spurious error occurred.
 533:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 534:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 535:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SetupWidgetExt(uint32 widgetId, uint32 sensorId)
 536:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 537:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 538:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 539:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 540:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 541:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 542:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_INVALID_STATE;
 543:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 11


 544:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 545:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  Check if widget id is valid, specified widget is enabled and widget did not
 546:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  detect any fault conditions if BIST is enabled. If all conditions are met,
 547:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  set widgetStatus as good, if not, set widgetStatus as bad.
 548:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 549:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if ((CapSense_TOTAL_WIDGETS > widgetId) &&
 550:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)) &&
 551:Generated_Source\PSoC4/CapSense_Sensing.c ****         (sensorId < CapSense_GET_SENSOR_COUNT(widgetId)))
 552:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 553:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 554:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_SUCCESS;
 555:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 556:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 557:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 558:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_BAD_PARAM;
 559:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 560:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 561:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 562:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Check widgetStatus flag that is set earlier, if flag is good, then set up only
 563:Generated_Source\PSoC4/CapSense_Sensing.c ****      * widget
 564:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 565:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CYRET_SUCCESS == widgetStatus)
 566:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 567:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
 568:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 569:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 570:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 571:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSX scan */
 572:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXSetupWidgetExt(widgetId, sensorId);
 573:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 574:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 575:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 576:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 577:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSD scan */
 578:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDSetupWidgetExt(widgetId, sensorId);
 579:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 580:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 581:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 582:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 583:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for ISX scan */
 584:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXSetupWidgetExt(widgetId, sensorId);
 585:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 586:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 587:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 588:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Sensing method is invalid, return error to caller */
 589:Generated_Source\PSoC4/CapSense_Sensing.c ****             widgetStatus = CYRET_UNKNOWN;
 590:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 591:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 592:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 593:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (widgetStatus);
 594:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 595:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 596:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 597:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 598:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_ScanExt
 599:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 600:Generated_Source\PSoC4/CapSense_Sensing.c **** *
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 12


 601:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 602:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Starts a conversion on the pre-configured sensor. This function requires
 603:Generated_Source\PSoC4/CapSense_Sensing.c **** *  using the CapSense_SetupWidgetExt() function to set up the a
 604:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget.
 605:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 606:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 607:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function performs single scanning of one sensor in the widget configured
 608:Generated_Source\PSoC4/CapSense_Sensing.c **** *  by the CapSense_SetupWidgetExt() function.
 609:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 610:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling this function directly from the application layer is not
 611:Generated_Source\PSoC4/CapSense_Sensing.c **** *  recommended. This function is used to implement only the user's specific
 612:Generated_Source\PSoC4/CapSense_Sensing.c **** *  use cases (for faster execution time or pipeline scanning for example).
 613:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function is called when no scanning is in progress. I.e.
 614:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_IsBusy() returns a non-busy status.
 615:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 616:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The sensor must be preconfigured by using the
 617:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SetupWidgetExt() API prior to calling this function.
 618:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The sensor remains ready for a next scan if a previous scan was triggered
 619:Generated_Source\PSoC4/CapSense_Sensing.c **** *  by using the CapSense_ScanExt() function. In this case, calling
 620:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SetupWidgetExt() is not required every time before the
 621:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_ScanExt() function. If a previous scan was triggered in
 622:Generated_Source\PSoC4/CapSense_Sensing.c **** *  any other way - CapSense_Scan(), CapSense_ScanAllWidgets() or
 623:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_RunTuner() - (see the CapSense_RunTuner() function
 624:Generated_Source\PSoC4/CapSense_Sensing.c **** *  description for more details), the sensor must be preconfigured again by
 625:Generated_Source\PSoC4/CapSense_Sensing.c **** *  using the CapSense_SetupWidgetExt() API prior to calling the
 626:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_ScanExt() function.
 627:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 628:Generated_Source\PSoC4/CapSense_Sensing.c **** *  If disconnection of the sensors is required after calling
 629:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_ScanExt(), the CapSense_CSDDisconnectSns() or
 630:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_CSXDisconnectTx() or CapSense_CSXDisconnectRx()
 631:Generated_Source\PSoC4/CapSense_Sensing.c **** *  functions can be used.
 632:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 633:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 634:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the scan initiation operation:
 635:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 636:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 637:Generated_Source\PSoC4/CapSense_Sensing.c **** *    hardware block is busy.
 638:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget.
 639:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 640:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 641:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_ScanExt(void)
 642:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 643:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 644:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 645:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 646:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 647:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 648:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 649:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 650:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 651:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 652:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_currentSenseMethod)
 653:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 654:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 655:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 656:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXScanExt();
 657:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 13


 658:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 659:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 660:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 661:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDScanExt();
 662:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 663:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 664:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 665:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 666:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXScanExt();
 667:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 668:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 669:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 670:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CYRET_UNKNOWN;
 671:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 672:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 673:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 674:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 675:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 676:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 677:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 678:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 679:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsInitialize
 680:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 681:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 682:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 683:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 684:Generated_Source\PSoC4/CapSense_Sensing.c **** *  of the CapSense Component. This function is called from
 685:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_Start() API prior to calling any other APIs of the Component.
 686:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 687:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 688:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 689:Generated_Source\PSoC4/CapSense_Sensing.c **** *  of the CapSense Component. This function is called from
 690:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_Start() API prior to calling any other APIs of the Component.
 691:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Depending on the configuration, the function initializes the CSD block
 692:Generated_Source\PSoC4/CapSense_Sensing.c **** *     for the corresponding sensing mode.
 693:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. The function updates the dsRam.wdgtWorking variable with 1 when Self-test
 694:Generated_Source\PSoC4/CapSense_Sensing.c **** *     is enabled.
 695:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 696:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling the CapSense_Start API is the recommended method to initialize
 697:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense Component at power-up. The CapSense_SsInitialize()
 698:Generated_Source\PSoC4/CapSense_Sensing.c **** *  API should not be used for initialization, resume, or wake-up operations.
 699:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The dsRam.wdgtWorking variable is updated.
 700:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 701:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return status
 702:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns status of operation:
 703:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Zero        - Indicates successful initialization.
 704:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Non-zero    - One or more errors occurred in the initialization process.
 705:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 706:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 707:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SsInitialize(void)
 708:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 709:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus initStatus;
 710:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 711:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) &&\
 712:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_MFS_IMO == CapSense_MFS_METHOD))
 713:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 centerFreqTrim;
 714:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 14


 715:Generated_Source\PSoC4/CapSense_Sensing.c ****         centerFreqTrim = (uint8)CY_GET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR);
 716:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_immunity[CapSense_FREQ_CHANNEL_0] = centerFreqTrim;
 717:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 718:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (centerFreqTrim < CapSense_IMO_FREQUENCY_OFFSET_F1)
 719:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 720:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim + CapSense_IMO_FREQUENCY_OF
 721:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim + (CapSense_IMO_FREQUENCY_O
 722:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                            CapSense
 723:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 724:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (centerFreqTrim > (CapSense_IMO_FREQUENCY_OFFSET_MAX - CapSense_IMO_FREQUENCY_OFFSE
 725:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 726:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_IMO_FREQUENCY_OF
 727:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim - (CapSense_IMO_FREQUENCY_O
 728:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                            CapSense
 729:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 730:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 731:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 732:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_IMO_FREQUENCY_OF
 733:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim + CapSense_IMO_FREQUENCY_OF
 734:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 735:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 736:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) &&\
 737:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_MFS_IMO == CapSense_MFS_METHOD)) */
 738:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 739:Generated_Source\PSoC4/CapSense_Sensing.c ****     initStatus = CYRET_SUCCESS;
 740:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 741:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_DISABLE == CapSense_CSDV2)
 742:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsTrimIdacs();
 743:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 744:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 745:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if((CapSense_ENABLE == CapSense_CSD_EN) ||\
 746:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2)))
 747:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsInitializeSourceSenseClk();
 748:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
 749:Generated_Source\PSoC4/CapSense_Sensing.c ****               ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))) */
 750:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 751:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Set all IO states to the default state */
 752:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetAllIOsState((uint32)CapSense_SNS_CONNECTION_GROUND);
 753:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_dsRam.scanCurrentISC = CapSense_SNS_CONNECTION_GROUND;
 754:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 755:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSwitchSensingMode(CapSense_UNDEFINED_E);
 756:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_MANY_SENSE_MODES_EN)
 757:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSD_EN)
 758:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSD_E);
 759:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSX_EN)
 760:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSX_E);
 761:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_ISX_EN)
 762:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_ISX_E);
 763:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
 764:Generated_Source\PSoC4/CapSense_Sensing.c ****         #error "No sensing method enabled, Component cannot work in this mode"
 765:Generated_Source\PSoC4/CapSense_Sensing.c ****         initStatus = CYRET_UNKNOWN;
 766:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 767:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 768:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (initStatus);
 769:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 770:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 771:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 15


 772:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 773:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetPinState
 774:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 775:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 776:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 777:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the state (drive mode and output state) of the port pin used by a sensor.
 778:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The possible states are GND, Shield, High-Z, Tx or Rx, Sensor. If the sensor
 779:Generated_Source\PSoC4/CapSense_Sensing.c **** *  specified in the input parameter is a ganged sensor, then the state of all pins
 780:Generated_Source\PSoC4/CapSense_Sensing.c **** *  associated with the ganged sensor is updated.
 781:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 782:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 783:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function sets a specified state for a specified sensor element. For the
 784:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CSD widgets, sensor element is a sensor ID, for the CSX widgets, it is either
 785:Generated_Source\PSoC4/CapSense_Sensing.c **** *  an Rx or Tx electrode ID. If the specified sensor is a ganged sensor, then
 786:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the specified state is set for all the electrodes belong to the sensor.
 787:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function must not be called while the Component is in the busy state.
 788:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 789:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function accepts the CapSense_SHIELD and
 790:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SENSOR states as an input only if there is at least
 791:Generated_Source\PSoC4/CapSense_Sensing.c **** *  one CSD widget. Similarly, this function accepts the CapSense_TX_PIN
 792:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and CapSense_RX_PIN states as an input only if there is at least
 793:Generated_Source\PSoC4/CapSense_Sensing.c **** *  one CSX widget in the project.
 794:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 795:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling this function directly from the application layer is not
 796:Generated_Source\PSoC4/CapSense_Sensing.c **** *  recommended. This function is used to implement only the custom-specific
 797:Generated_Source\PSoC4/CapSense_Sensing.c **** *  use cases. Functions that perform a setup and scan of a sensor/widget
 798:Generated_Source\PSoC4/CapSense_Sensing.c **** *  automatically set the required pin states. They ignore changes
 799:Generated_Source\PSoC4/CapSense_Sensing.c **** *  in the design made by the CapSense_SetPinState() function.
 800:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function neither check wdgtIndex nor sensorElement for the correctness.
 801:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 802:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 803:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID of the widget to change the pin state of the specified
 804:Generated_Source\PSoC4/CapSense_Sensing.c **** *  sensor.
 805:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the CapSense Configuration
 806:Generated_Source\PSoC4/CapSense_Sensing.c **** *  header file defined as CapSense_<WidgetName>_WDGT_ID.
 807:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 808:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param sensorElement
 809:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID of the sensor element within the widget to change
 810:Generated_Source\PSoC4/CapSense_Sensing.c **** *  its pin state.
 811:Generated_Source\PSoC4/CapSense_Sensing.c **** *  \if SECTION_C_LOW_LEVEL
 812:Generated_Source\PSoC4/CapSense_Sensing.c **** *  For the CSD widgets, sensorElement is the sensor ID and can be found in the
 813:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 814:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_SNS<SensorNumber>_ID.
 815:Generated_Source\PSoC4/CapSense_Sensing.c **** *  For the CSX widgets, sensorElement is defined either as Rx ID or Tx ID.
 816:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The first Rx in a widget corresponds to sensorElement = 0, the second
 817:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Rx in a widget corresponds to sensorElement = 1, and so on.
 818:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The last Tx in a widget corresponds to sensorElement = (RxNum + TxNum).
 819:Generated_Source\PSoC4/CapSense_Sensing.c **** *  \endif
 820:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Macros for Rx and Tx IDs can be found in the
 821:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as:
 822:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_RX<RXNumber>_ID
 823:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_TX<TXNumber>_ID.
 824:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 825:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param state
 826:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the state of the sensor to be set:
 827:Generated_Source\PSoC4/CapSense_Sensing.c **** *     1. CapSense_GROUND - The pin is connected to the ground.
 828:Generated_Source\PSoC4/CapSense_Sensing.c **** *     2. CapSense_HIGHZ - The drive mode of the pin is set to High-Z
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 16


 829:Generated_Source\PSoC4/CapSense_Sensing.c **** *        Analog.
 830:Generated_Source\PSoC4/CapSense_Sensing.c **** *     3. CapSense_SHIELD - The shield signal is routed to the pin
 831:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSD sensing method with shield electrode is enabled).
 832:Generated_Source\PSoC4/CapSense_Sensing.c **** *     4. CapSense_SENSOR - The pin is connected to the scanning bus
 833:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSD sensing method is enabled).
 834:Generated_Source\PSoC4/CapSense_Sensing.c **** *     5. CapSense_TX_PIN - The Tx or Lx signal is routed to the sensor
 835:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSX or ISX sensing method is enabled).
 836:Generated_Source\PSoC4/CapSense_Sensing.c **** *     6. CapSense_RX_PIN - The pin is connected to the scanning bus
 837:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSX or ISX sensing method is enabled).
 838:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 839:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 840:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SetPinState(uint32 widgetId, uint32 sensorElement, uint32 state)
 841:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 842:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdNum;
 843:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdIndex;
 844:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8  interruptState;
 845:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *ioPtr;
 846:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_GANGED_SNS_EN)
 847:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_FLASH_SNS_STRUCT const *curFlashSnsPtr;
 848:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 849:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 850:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Getting sensor element pointer and number of electrodes */
 851:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_GANGED_SNS_EN)
 852:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check the ganged sns flag */
 853:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_GANGED_SNS_MASK == (CapSense_dsFlash.wdgtArray[widgetId].staticConfig & CapSen
 854:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 855:Generated_Source\PSoC4/CapSense_Sensing.c ****             curFlashSnsPtr = CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash;
 856:Generated_Source\PSoC4/CapSense_Sensing.c ****             curFlashSnsPtr += sensorElement;
 857:Generated_Source\PSoC4/CapSense_Sensing.c ****             ioPtr = &CapSense_ioList[curFlashSnsPtr->firstPinId];
 858:Generated_Source\PSoC4/CapSense_Sensing.c ****             eltdNum = curFlashSnsPtr->numPins;
 859:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 860:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 861:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 862:Generated_Source\PSoC4/CapSense_Sensing.c ****             ioPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsF
 863:Generated_Source\PSoC4/CapSense_Sensing.c ****             eltdNum = 1u;
 864:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 865:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
 866:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash
 867:Generated_Source\PSoC4/CapSense_Sensing.c ****         eltdNum = 1u;
 868:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 869:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 870:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Loop through all electrodes of the specified sensor element */
 871:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (eltdIndex = 0u; eltdIndex < eltdNum; eltdIndex++)
 872:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 873:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Reset HSIOM and PC registers */
 874:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 875:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_HSIOM_SEL_MASK << 
 876:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << ioPtr->s
 877:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 878:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 879:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (state)
 880:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 881:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_GROUND:
 882:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 883:Generated_Source\PSoC4/CapSense_Sensing.c ****             interruptState = CyEnterCriticalSection();
 884:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_SNS_GROUND_CONNECT <<
 885:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 17


 886:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 887:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 888:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 889:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_HIGHZ:
 890:Generated_Source\PSoC4/CapSense_Sensing.c ****             interruptState = CyEnterCriticalSection();
 891:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 892:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 893:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 894:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 895:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 896:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSOR:
 897:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Enable sensor */
 898:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDConnectSns(ioPtr);
 899:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 900:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 901:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 902:Generated_Source\PSoC4/CapSense_Sensing.c ****                 case CapSense_SHIELD:
 903:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Set appropriate bit in HSIOM register to configure pin to shield mode */
 904:Generated_Source\PSoC4/CapSense_Sensing.c ****                     interruptState = CyEnterCriticalSection();
 905:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_S
 906:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CyExitCriticalSection(interruptState);
 907:Generated_Source\PSoC4/CapSense_Sensing.c ****                     break;
 908:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 909:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 910:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 911:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 912:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_ISX_EN))
 913:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_TX_PIN:
 914:Generated_Source\PSoC4/CapSense_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 915:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_SEL_C
 916:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_GPIO_STRGDRV << i
 917:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 918:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 919:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 920:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_RX_PIN:
 921:Generated_Source\PSoC4/CapSense_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 922:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_SEL_A
 923:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << 
 924:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 925:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 926:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 927:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 928:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 929:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Wrong state */
 930:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 931:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 932:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 933:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr++;
 934:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 935:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 936:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 937:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 938:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 939:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsCSDDisableMode
 940:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 941:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 942:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 18


 943:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables CSD mode.
 944:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 945:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 946:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable CSD mode the following tasks are performed:
 947:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect Cmod from AMUXBUS-A.
 948:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 949:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  3. Disconnect Csh from AMUXBUS-B.
 950:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  4. Disable Shield Electrodes.
 951:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 952:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
 953:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsCSDDisableMode(void)
 954:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 955:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSDV2) && \
 956:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN))
 957:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 958:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 newRegValue;
 959:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 960:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect IDACA and IDACB */
 961:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_SW_REFGEN_SEL_PTR);
 962:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue &= (uint32)(~CapSense_SW_REFGEN_SEL_SW_IAIB_MASK);
 963:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 964:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSDV2) && \
 965:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)) */
 966:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 967:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Cmod from AMUXBUS-A using HSIOM registers */
 968:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CMOD_HSIOM_PTR, CapSense_CMOD_HSIOM_MASK, 0u);
 969:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 970:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous CSD electrode if it has been connected */
 971:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsCSDElectrodeCheck();
 972:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 973:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Csh from AMUXBUS-B */
 974:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 975:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
 976:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CSH_HSIOM_PTR, CapSense_CSH_HSIOM_MASK, 0u);
 977:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 978:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 979:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 980:Generated_Source\PSoC4/CapSense_Sensing.c ****              (0u != CapSense_CSD_TOTAL_SHIELD_COUNT))
 981:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDDisableShieldElectrodes();
 982:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 983:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 984:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 985:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 986:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 987:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
 988:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 989:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsDisableCSXMode
 990:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 991:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 992:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
 993:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables CSX mode.
 994:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 995:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 996:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable CSX mode the following tasks are performed:
 997:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A.
 998:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 999:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 19


1000:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1001:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableCSXMode(void)
1002:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1003:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers */
1004:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CintA_HSIOM_PTR, CapSense_CintA_HSIOM_MASK, 0u);
1005:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers */
1006:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CintB_HSIOM_PTR, CapSense_CintB_HSIOM_MASK, 0u);
1007:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous CSX electrode if it has been connected */
1008:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_CSXElectrodeCheck();
1009:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1010:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1011:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1012:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1013:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
1014:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1015:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsDisableISXMode
1016:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1017:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1018:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1019:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables ISX mode.
1020:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1021:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1022:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable ISX mode the following tasks are performed:
1023:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A
1024:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous ISX electrode if it has been connected
1025:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1026:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1027:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableISXMode(void)
1028:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1029:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers */
1030:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CintA_HSIOM_PTR, CapSense_CintA_HSIOM_MASK, 0u);
1031:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers */
1032:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CintB_HSIOM_PTR, CapSense_CintB_HSIOM_MASK, 0u);
1033:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous ISX electrode if it has been connected */
1034:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ISXElectrodeCheck();
1035:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_DigPrt2_Stop();
1036:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_USES_PORT_3)
1037:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DigPrt3_Stop();
1038:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
1039:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1040:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1041:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1042:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1043:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1044:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSwitchSensingMode
1045:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1046:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1047:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1048:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function changes the Сomponent settings for operation in a specified
1049:Generated_Source\PSoC4/CapSense_Sensing.c **** *  sensing mode.
1050:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1051:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1052:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function performs following tasks:
1053:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Releasing the CSD HW block.
1054:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnecting external capacitors.
1055:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Setting new mode.
1056:Generated_Source\PSoC4/CapSense_Sensing.c **** *  4. Configuring HW to the new sensing mode.
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 20


1057:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1058:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param mode
1059:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the scan mode:
1060:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_CSD_E
1061:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_CSX_E
1062:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_ISX_E
1063:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_BIST_E
1064:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_UNDEFINED_E
1065:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1066:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1067:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_ENUM mode)
1068:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1069:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_currentSenseMethod != mode)
1070:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1071:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* The requested mode differs to the current one. Disable the current mode */
1072:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_SENSE_METHOD_CSD_E == CapSense_currentSenseMethod)
1073:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1074:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_EN)
1075:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsCSDDisableMode();
1076:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
1077:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1078:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_CSX_E == CapSense_currentSenseMethod)
1079:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1080:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSX_EN)
1081:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsDisableCSXMode();
1082:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1083:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1084:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_ISX_E == CapSense_currentSenseMethod)
1085:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1086:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ISX_EN)
1087:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsDisableISXMode();
1088:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1089:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1090:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_BIST_E == CapSense_currentSenseMethod)
1091:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1092:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1093:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_BistDisableMode();
1094:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1095:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1096:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
1097:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1098:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ADC_EN)
1099:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Release ADC resources */
1100:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_AdcReleaseResources();
1101:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
1102:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1103:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1104:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Enable the specified mode */
1105:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_SENSE_METHOD_CSD_E == mode)
1106:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1107:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_EN)
1108:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize CSD mode to guarantee configured CSD mode */
1109:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsCSDInitialize();
1110:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSD_E;
1111:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
1112:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1113:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_CSX_E == mode)
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 21


1114:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1115:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSX_EN)
1116:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize CSX mode to guarantee configured CSX mode */
1117:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXInitialize();
1118:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSX_E;
1119:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1120:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1121:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_ISX_E == mode)
1122:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1123:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ISX_EN)
1124:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize ISX mode to guarantee configured ISX mode */
1125:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXInitialize();
1126:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_ISX_E;
1127:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1128:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1129:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_BIST_E == mode)
1130:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1131:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1132:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_BistInitialize();
1133:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_BIST_E;
1134:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1135:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1136:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
1137:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1138:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
1139:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1140:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1141:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1142:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1143:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1144:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1145:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetAllIOsState
1146:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1147:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1148:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1149:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all electrodes into a default state.
1150:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1151:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1152:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all the CSD/CSX IOs into a default state:
1153:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
1154:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - DM      - Strong drive.
1155:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - State   - Zero.
1156:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1157:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all the ADC channels into a default state:
1158:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
1159:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - DM      - HiZ-Analog.
1160:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - State   - Zero.
1161:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1162:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly from the application
1163:Generated_Source\PSoC4/CapSense_Sensing.c **** *  layer.
1164:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1165:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1166:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetAllIOsState(uint32 state)
1167:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1168:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8  interruptState;
1169:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1170:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 loopIndex;
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 22


1171:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1172:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newPinPcVal;
1173:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newPinHsiomVal;
1174:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1175:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 tmpPcDrRegValue;
1176:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 tmpHsiomRegValue;
1177:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1178:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *snsIoPtr;
1179:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1180:Generated_Source\PSoC4/CapSense_Sensing.c ****     switch(state)
1181:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1182:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_SNS_CONNECTION_GROUND:
1183:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_STRONG;
1184:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
1185:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
1186:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_SNS_CONNECTION_HIGHZ:
1187:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_ALG_HIZ;
1188:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
1189:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
1190:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_SNS_CONNECTION_SHIELD:
1191:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_ALG_HIZ;
1192:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_CSD_SHIELD;
1193:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
1194:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
1195:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_STRONG;
1196:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
1197:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
1198:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1199:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1200:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Loop through all electrodes */
1201:Generated_Source\PSoC4/CapSense_Sensing.c ****     snsIoPtr = &CapSense_ioList[0u];
1202:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (loopIndex = 0u; loopIndex < CapSense_TOTAL_ELECTRODES; loopIndex++)
1203:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1204:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
1205:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1206:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpHsiomRegValue = CY_GET_REG32 (snsIoPtr->hsiomPtr);
1207:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpHsiomRegValue &= ~(snsIoPtr->hsiomMask);
1208:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
1209:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1210:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue = CY_GET_REG32 (snsIoPtr->pcPtr);
1211:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue &= ~(CapSense_GPIO_PC_MASK << snsIoPtr->shift);
1212:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue |=  (newPinPcVal << snsIoPtr->shift);
1213:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->pcPtr, tmpPcDrRegValue);
1214:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1215:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpHsiomRegValue |=  (newPinHsiomVal << snsIoPtr->hsiomShift);
1216:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
1217:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1218:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue = CY_GET_REG32 (snsIoPtr->drPtr);
1219:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue &= ~(snsIoPtr->mask);
1220:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->drPtr, tmpPcDrRegValue);
1221:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1222:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
1223:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1224:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Get next electrode */
1225:Generated_Source\PSoC4/CapSense_Sensing.c ****         snsIoPtr++;
1226:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1227:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 23


1228:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSD_EN) &&\
1229:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&\
1230:Generated_Source\PSoC4/CapSense_Sensing.c ****          (0u != CapSense_CSD_TOTAL_SHIELD_COUNT))
1231:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsCSDSetShieldElectrodesState(state);
1232:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
1233:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1234:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if(CapSense_ENABLE == CapSense_ADC_EN)
1235:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ClearAdcChannels();
1236:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
1237:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1238:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1239:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1240:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ADC_EN)
1241:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1242:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsReleaseResources()
1243:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1244:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1245:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1246:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function sets the resources that do not belong to the sensing HW block to
1247:Generated_Source\PSoC4/CapSense_Sensing.c **** *  default state.
1248:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1249:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1250:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The function performs following tasks:
1251:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Checks if CSD block busy and returns error if it is busy
1252:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnects integration capacitors (CintA, CintB for CSX mode and
1253:Generated_Source\PSoC4/CapSense_Sensing.c **** *     Cmod for CSD mode)
1254:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Disconnect electroded if they have been connected.
1255:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1256:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
1257:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
1258:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Zero        - Resources released successfully.
1259:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Non-zero    - One or more errors occurred in releasing process.
1260:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1261:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1262:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SsReleaseResources(void)
1263:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1264:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus busyStatus = CYRET_SUCCESS;
1265:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1266:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_SW_STS_BUSY))
1267:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1268:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
1269:Generated_Source\PSoC4/CapSense_Sensing.c ****         busyStatus = CYRET_INVALID_STATE;
1270:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1271:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
1272:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1273:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
1274:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsDisableCSXMode();
1275:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1276:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1277:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
1278:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsDisableISXMode();
1279:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1280:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1281:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
1282:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDDisableMode();
1283:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
1284:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 24


1285:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1286:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_BistDisableMode();
1287:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1288:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1289:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSetAllIOsState((uint32)CapSense_SNS_CONNECTION_GROUND);
1290:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1291:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1292:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Reset of the currentSenseMethod variable to make sure that the next
1293:Generated_Source\PSoC4/CapSense_Sensing.c ****          * call of SetupWidget() API setups the correct widget mode
1294:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1295:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
1296:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1297:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1298:Generated_Source\PSoC4/CapSense_Sensing.c ****     return busyStatus;
1299:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1300:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
1301:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1302:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1303:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1304:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsPostAllWidgetsScan
1305:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1306:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1307:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1308:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The ISR function for multiple widget scanning implementation.
1309:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1310:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1311:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is the function used by the CapSense ISR to implement multiple widget
1312:Generated_Source\PSoC4/CapSense_Sensing.c **** *  scanning.
1313:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Should not be used by the application layer.
1314:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1315:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1316:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsPostAllWidgetsScan(void)
1317:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1318:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1319:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Increment widget index
1320:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Check if all the widgets are scanned
1321:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  3. If all the widgets are not scanned, set up and scan next widget
1322:Generated_Source\PSoC4/CapSense_Sensing.c ****     */
1323:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (1u != CapSense_TOTAL_WIDGETS)
1324:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus postScanStatus;
1325:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1326:Generated_Source\PSoC4/CapSense_Sensing.c ****         do
1327:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1328:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_widgetIndex++;
1329:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1330:Generated_Source\PSoC4/CapSense_Sensing.c ****             postScanStatus = CapSense_SetupWidget((uint32)CapSense_widgetIndex);
1331:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1332:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS == postScanStatus)
1333:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1334:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if((CapSense_TOTAL_WIDGETS - 1u) == CapSense_widgetIndex)
1335:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1336:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* The last widget will be scanned. Reset flag to skip configuring the next wid
1337:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_requestScanAllWidget = CapSense_DISABLE;
1338:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1339:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_Scan();
1340:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1341:Generated_Source\PSoC4/CapSense_Sensing.c ****             else if((CapSense_TOTAL_WIDGETS - 1u) == CapSense_widgetIndex)
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 25


1342:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1343:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if ((CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) && \
1344:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (CapSense_ENABLE == CapSense_CSD_EN))
1345:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSD_E ==
1346:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[CapSense_widgetIndex]
1347:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1348:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Disable the CSD block */
1349:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd);
1350:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1351:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* ((CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) && \
1352:Generated_Source\PSoC4/CapSense_Sensing.c ****                            (CapSense_ENABLE == CapSense_CSD_EN)) */
1353:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1354:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update scan Counter */
1355:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.scanCounter++;
1356:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
1357:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
1358:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1359:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update status with with the failure */
1360:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_STATUS_ERR_MASK;
1361:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
1362:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1363:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set postScanStatus to exit the while loop */
1364:Generated_Source\PSoC4/CapSense_Sensing.c ****                 postScanStatus = CYRET_SUCCESS;
1365:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1366:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
1367:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1368:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update status with with the failure. Configure the next widget in while() loop *
1369:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_STATUS_ERR_MASK;
1370:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
1371:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1372:Generated_Source\PSoC4/CapSense_Sensing.c ****         } while (CYRET_SUCCESS != postScanStatus);
1373:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (1u != CapSense_TOTAL_WIDGETS) */
1374:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1375:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1376:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1377:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1378:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsIsrInitialize
1379:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1380:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1381:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1382:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Enables and initializes for the function pointer for a callback for the ISR.
1383:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1384:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1385:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The "address" is a special type cyisraddress defined by Cylib. This function
1386:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is used by Component APIs and should not be used by an application program for
1387:Generated_Source\PSoC4/CapSense_Sensing.c **** *  proper working of the Component.
1388:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1389:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param address
1390:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The address of the function to be called when interrupt is fired.
1391:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1392:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1393:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsIsrInitialize(cyisraddress address)
1394:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1395:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_ISR_StartEx(address);
1396:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1397:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1398:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 26


1399:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1400:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetModClkClockDivider
1401:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1402:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1403:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1404:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for the modulator clock and then starts
1405:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the modulator clock.
1406:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1407:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1408:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1409:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1410:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1411:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1412:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param modClk
1413:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The divider value for the modulator clock.
1414:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1415:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1416:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetModClkClockDivider(uint32 modClk)
1417:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1418:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1419:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Stop modulator clock */
1420:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1421:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_ModClk__DIV_ID <<
1422:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CapSense_MODCLK_CMD_DIV_SHIFT)|
1423:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_MODCLK_CMD_DISABLE_MASK));
1424:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1425:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1426:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Set divider value for sense modClk.
1427:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from modClk because Divider register value 0 corresponds
1428:Generated_Source\PSoC4/CapSense_Sensing.c ****      * to dividing by 1.
1429:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1430:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_DIV_PTR, ((modClk - 1u) << 8u));
1431:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1432:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Check whether previous modulator clock start command has finished. */
1433:Generated_Source\PSoC4/CapSense_Sensing.c ****     while(0u != (CY_GET_REG32(CapSense_MODCLK_CMD_PTR) & CapSense_MODCLK_CMD_ENABLE_MASK))
1434:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1435:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Wait until previous modulator clock start command has finished */
1436:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1437:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1438:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Start modulator clock, aligned to HFCLK */
1439:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1440:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(((uint32)CapSense_ModClk__DIV_ID << CapSense_MODCLK_CMD_DIV_SHIFT) |
1441:Generated_Source\PSoC4/CapSense_Sensing.c ****                   ((uint32)CapSense_ModClk__PA_DIV_ID << CapSense_MODCLK_CMD_PA_DIV_SHIFT) |
1442:Generated_Source\PSoC4/CapSense_Sensing.c ****                   CapSense_MODCLK_CMD_ENABLE_MASK));
1443:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
1444:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newRegValue;
1445:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1446:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Clear bit to disable ModClk clock. */
1447:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1448:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CY_GET_REG32(CapSense_MODCLK_CMD_PTR) &
1449:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(~CapSense_ModClk__ENABLE_MASK));
1450:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1451:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1452:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Update ModClk clock divider.
1453:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from modClk because Divider register value has range (0-65535).
1454:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1455:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_MODCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_ModClk__DIVIDE
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 27


1456:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= (modClk - 1u);
1457:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_DIV_PTR, newRegValue);
1458:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1459:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Set bit to enable ModClk clock. */
1460:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1461:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CY_GET_REG32(CapSense_MODCLK_CMD_PTR) |
1462:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ModClk__ENABLE_MASK);
1463:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1464:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1465:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1466:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1467:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1468:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetSnsClockDivider
1469:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1470:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1471:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1472:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for the sense clock and then starts
1473:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the sense clock.
1474:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1475:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1476:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1477:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1478:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1479:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1480:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
1481:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClk The divider value for the sense clock.
1482:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1483:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1484:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetSnsClockDivider(uint32 snsClk)
1485:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1486:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
1487:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newRegValue;
1488:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1489:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1490:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Set divider value for sense clock.
1491:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from snsClk because SENSE_DIV value 0 corresponds
1492:Generated_Source\PSoC4/CapSense_Sensing.c ****      * to dividing by 1.
1493:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1494:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_SENSE_PERIOD_PTR);
1495:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue &= (uint32)(~CapSense_SENSE_PERIOD_SENSE_DIV_MASK);
1496:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= snsClk - 1u;
1497:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, newRegValue);
1498:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
1499:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1500:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Stop sense clock clock   */
1501:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1502:Generated_Source\PSoC4/CapSense_Sensing.c ****                      ((uint32)CapSense_SnsClk__DIV_ID <<
1503:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CapSense_SNSCLK_CMD_DIV_SHIFT)|
1504:Generated_Source\PSoC4/CapSense_Sensing.c ****                      ((uint32)CapSense_SNSCLK_CMD_DISABLE_MASK));
1505:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1506:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1507:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Set divider value for sense clock.
1508:Generated_Source\PSoC4/CapSense_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value 0 corresponds
1509:Generated_Source\PSoC4/CapSense_Sensing.c ****          * to dividing by 1.
1510:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1511:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_DIV_PTR, ((snsClk - 1u) << 8u));
1512:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 28


1513:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check whether previous sense clock start command has finished. */
1514:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(0u != (CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) & CapSense_SNSCLK_CMD_ENABLE_MASK))
1515:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1516:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Wait until previous sense clock start command has finished. */
1517:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1518:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1519:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Start sense clock aligned to previously started modulator clock. */
1520:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1521:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (uint32)(((uint32)CapSense_SnsClk__DIV_ID << CapSense_SNSCLK_CMD_DIV_SHIFT) |
1522:Generated_Source\PSoC4/CapSense_Sensing.c ****                       ((uint32)CapSense_ModClk__PA_DIV_ID << CapSense_SNSCLK_CMD_PA_DIV_SHIFT) |
1523:Generated_Source\PSoC4/CapSense_Sensing.c ****                       CapSense_SNSCLK_CMD_ENABLE_MASK));
1524:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
1525:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
1526:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1527:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Clear bit to disable SnsClk clock. */
1528:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1529:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) &
1530:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (uint32)(~(uint32)CapSense_SnsClk__ENABLE_MASK));
1531:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1532:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1533:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Update snsClk clock divider.
1534:Generated_Source\PSoC4/CapSense_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value has range (0-65535).
1535:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1536:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_SNSCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_SnsClk__DI
1537:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= (snsClk - 1u);
1538:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_DIV_PTR, newRegValue);
1539:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1540:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set bit to enable SnsClk clock. */
1541:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1542:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) |
1543:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_SnsClk__ENABLE_MASK);
1544:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1545:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1546:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1547:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1548:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1549:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1550:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetClockDividers
1551:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1552:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1553:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1554:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for sense and modulator clocks and then starts
1555:Generated_Source\PSoC4/CapSense_Sensing.c **** *  a modulator clock-phase aligned to HFCLK and sense clock-phase aligned to
1556:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the modulator clock.
1557:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1558:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1559:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1560:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1561:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1562:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1563:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
1564:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClk The divider value for the sense clock.
1565:Generated_Source\PSoC4/CapSense_Sensing.c **** *  modClk The divider value for the modulator clock.
1566:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1567:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1568:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetClockDividers(uint32 snsClk, uint32 modClk)
1569:Generated_Source\PSoC4/CapSense_Sensing.c **** {
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 29


1570:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Mod clock */
1571:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetModClkClockDivider(modClk);
1572:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1573:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Sns clock */
1574:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetSnsClockDivider(snsClk);
1575:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1576:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1577:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1578:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ANYMODE_AUTOCAL)
1579:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1580:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_CalibrateWidget
1581:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1582:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1583:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1584:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the sensors in the specified widget to the default
1585:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target, this function detects the sensing method used by the
1586:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  widget prior to calibration.
1587:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1588:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1589:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function performs exactly the same tasks as
1590:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_CalibrateAllWidgets, but only for a specified widget.
1591:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function detects the sensing method used by the widgets and uses
1592:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the Enable compensation IDAC parameter.
1593:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1594:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1595:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1596:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1597:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_C_LOW_LEVEL
1598:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1599:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  auto-calibration parameter is enabled.
1600:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1601:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1602:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the ISX Enable auto-calibration parameter
1603:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  is enabled.
1604:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1605:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1606:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
1607:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID number of the widget to calibrate its raw count.
1608:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  A macro for the widget ID can be found in the
1609:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense Configuration header file defined as
1610:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_<WidgetName>_WDGT_ID.
1611:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1612:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1613:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the specified widget calibration:
1614:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1615:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_PARAM - The input parameter is invalid.
1616:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1617:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    operate as expected.
1618:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1619:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1620:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_CalibrateWidget(uint32 widgetId)
1621:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1622:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1623:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1624:Generated_Source\PSoC4/CapSense_Sensing.c ****         do
1625:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1626:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_TOTAL_WIDGETS <= widgetId)
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 30


1627:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1628:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CYRET_BAD_PARAM;
1629:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1630:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1631:Generated_Source\PSoC4/CapSense_Sensing.c ****             /*
1632:Generated_Source\PSoC4/CapSense_Sensing.c ****              *  Check if widget id is valid, specified widget did not
1633:Generated_Source\PSoC4/CapSense_Sensing.c ****              *  detect any faults conditions if BIST is enabled.
1634:Generated_Source\PSoC4/CapSense_Sensing.c ****              */
1635:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1636:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (0u != CapSense_GET_WIDGET_EN_STATUS(widgetId))
1637:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1638:Generated_Source\PSoC4/CapSense_Sensing.c ****                     calibrateStatus = CYRET_SUCCESS;
1639:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1640:Generated_Source\PSoC4/CapSense_Sensing.c ****                 else
1641:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1642:Generated_Source\PSoC4/CapSense_Sensing.c ****                     calibrateStatus = CYRET_INVALID_STATE;
1643:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1644:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif  /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1645:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1646:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS != calibrateStatus)
1647:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1648:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Exit from the loop because of a fail */
1649:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
1650:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1651:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1652:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1653:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_MANY_WIDGET_METHODS_EN)
1654:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Check widget sensing method and call appropriate APIs */
1655:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_ISX_IDAC_AUTOCAL_EN)
1656:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_ISX_E ==
1657:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1658:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1659:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSX widget */
1660:Generated_Source\PSoC4/CapSense_Sensing.c ****                        CapSense_ISXCalibrateWidget(widgetId, CapSense_ISX_RAWCOUNT_CAL_LEVEL);
1661:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1662:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_ISX_IDAC_AUTOCAL_EN) */
1663:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1664:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Check widget sensing method and call appropriate APIs */
1665:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_IDAC_AUTOCAL_EN)
1666:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSX_E ==
1667:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1668:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1669:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSX widget */
1670:Generated_Source\PSoC4/CapSense_Sensing.c ****                        calibrateStatus = CapSense_CSXCalibrateWidget(widgetId, CapSense_CSX_RAWCOUN
1671:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1672:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_CSX_IDAC_AUTOCAL_EN) */
1673:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1674:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN)
1675:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSD_E ==
1676:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1677:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1678:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSD widget */
1679:Generated_Source\PSoC4/CapSense_Sensing.c ****                         calibrateStatus = CapSense_CSDCalibrateWidget(widgetId, CapSense_CSD_RAWCOU
1680:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1681:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN) */
1682:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1683:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only CSD is enabled, calibrate CSD sensor */
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 31


1684:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_CSD_EN)
1685:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CapSense_CSDCalibrateWidget(widgetId, CapSense_CSD_RAWCOUNT_CAL_L
1686:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1687:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only CSX is enabled, call CSX scan */
1688:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_CSX_EN)
1689:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CapSense_CSXCalibrateWidget(widgetId, CapSense_CSX_RAWCOUNT_CAL_L
1690:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1691:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only ISX is enabled, call ISX scan */
1692:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_ISX_EN)
1693:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXCalibrateWidget(widgetId, CapSense_ISX_RAWCOUNT_CAL_LEVEL);
1694:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1695:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
1696:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CYRET_UNKNOWN;
1697:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
1698:Generated_Source\PSoC4/CapSense_Sensing.c ****         } while (0u);
1699:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1700:Generated_Source\PSoC4/CapSense_Sensing.c ****         return calibrateStatus;
1701:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1702:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1703:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1704:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1705:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_CalibrateAllWidgets
1706:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1707:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1708:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1709:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1710:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target, this function detects the sensing method used by the widgets
1711:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  prior to calibration.
1712:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1713:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1714:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1715:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target value. This function detects the sensing method used by the widgets
1716:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and regards the Enable compensation IDAC parameter.
1717:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1718:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1719:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1720:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1721:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \cond SECTION_C_LOW_LEVEL
1722:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1723:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  auto-calibration parameter is enabled.
1724:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endcond
1725:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1726:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the ISX Enable Auto-calibration parameter
1727:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  is enabled.
1728:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1729:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1730:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1731:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the calibration process:
1732:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1733:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1734:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    operate as expected.
1735:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1736:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1737:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_CalibrateAllWidgets(void)
1738:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1739:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1740:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 32


1741:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
1743:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1744:Generated_Source\PSoC4/CapSense_Sensing.c ****             calibrateStatus |= CapSense_CalibrateWidget(wdgtIndex);
1745:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1746:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1747:Generated_Source\PSoC4/CapSense_Sensing.c ****         return calibrateStatus;
1748:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1749:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ANYMODE_AUTOCAL) */
1750:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1751:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1752:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)
1753:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1754:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsAutoTuneWidget
1755:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1756:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1757:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1758:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the parameters auto-tuning for the optimal CapSense
1759:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  operation for a desired widget.
1760:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1761:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1762:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the following:
1763:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calibrates Modulator and Compensation IDACs.
1764:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Tunes the Sense Clock optimal value to get a Sense Clock period greater than
1765:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    2*5*R*Cp.
1766:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calculates the resolution for the optimal finger capacitance.
1767:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1768:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
1769:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID number of a desired widget.
1770:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  A macro for the widget ID can be found in the
1771:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense Configuration header file defined as
1772:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_<WidgetName>_WDGT_ID.
1773:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1774:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1775:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the operation:
1776:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Zero     - All the widgets are auto-tuned successfully.
1777:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Non-zero - Auto-tuning failed for any widget.
1778:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1779:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1780:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_SsAutoTuneWidget(uint32 widgetId)
1781:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1782:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
1783:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1784:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 snsIndex;
1785:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 inputSnsClk;
1786:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 minSnsClkDiv;
1787:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 minSnsClkDivTmp;
1788:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1789:Generated_Source\PSoC4/CapSense_Sensing.c ****         AUTO_TUNE_CONFIG_TYPE autoTuneConfig;
1790:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1791:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 maxRaw = 0u;
1792:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 maxCp = 0u;
1793:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 maxIdacComp = 0u;
1794:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1795:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1796:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 maxCpSnsId = 0u;
1797:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 maxCpRowSnsId = 0u;
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 33


1798:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
1799:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1800:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_FLASH_WD_STRUCT const *ptrFlashWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1801:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_RAM_WD_BASE_STRUCT *ptrRamWidget = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWidget->
1802:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_RAM_SNS_STRUCT *ptrRamSensor = ptrFlashWidget->ptr2SnsRam;
1803:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1804:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Find input of sensor clock frequency */
1805:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSDV2)
1806:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are chained (Fourth-generation HW block). Flip flop is not available */
1807:Generated_Source\PSoC4/CapSense_Sensing.c ****             inputSnsClk = ((uint32)CYDEV_BCLK__HFCLK__KHZ / (uint32)CapSense_dsRam.modCsdClk);
1808:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1809:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Minimum value of SnaClk divider that is allowed for all Fourth-generation
1810:Generated_Source\PSoC4/CapSense_Sensing.c ****              * CSD HW block based devices.
1811:Generated_Source\PSoC4/CapSense_Sensing.c ****             */
1812:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv = CapSense_MIN_SNS_CLK_DIVIDER;
1813:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1814:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are not chained */
1815:Generated_Source\PSoC4/CapSense_Sensing.c ****             inputSnsClk = CYDEV_BCLK__HFCLK__KHZ >> CapSense_FLIP_FLOP_DIV;
1816:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1817:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Minimum value of SnaClk divider that is allowed for PSoC 4100 and PSoC 4200
1818:Generated_Source\PSoC4/CapSense_Sensing.c ****                device families.
1819:Generated_Source\PSoC4/CapSense_Sensing.c ****             */
1820:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv = CapSense_dsRam.modCsdClk;
1821:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
1822:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are chained (PSoC 4100, PSoC 4200) */
1823:Generated_Source\PSoC4/CapSense_Sensing.c ****             inputSnsClk = (CYDEV_BCLK__HFCLK__KHZ / CapSense_dsRam.modCsdClk) >> CapSense_FLIP_FLOP
1824:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1825:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Minimum value of SnaClk divider that is allowed for all Fourth-generation
1826:Generated_Source\PSoC4/CapSense_Sensing.c ****              * CSD HW block based device except PSoC 4100 and PSoC 4200 device families.
1827:Generated_Source\PSoC4/CapSense_Sensing.c ****             */
1828:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv = CapSense_MIN_SNS_CLK_DIVIDER;
1829:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1830:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1831:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Minimum value of SnsClk divider required to ensure the CSD HW block
1832:Generated_Source\PSoC4/CapSense_Sensing.c ****          * operation in allowed frequency range.
1833:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1834:Generated_Source\PSoC4/CapSense_Sensing.c ****         minSnsClkDivTmp = inputSnsClk * CapSense_AUTOTUNE_CAL_UNITS;
1835:Generated_Source\PSoC4/CapSense_Sensing.c ****         minSnsClkDivTmp /= CapSense_CSD_SNS_FREQ_KHZ_MAX;
1836:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1837:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (minSnsClkDiv < minSnsClkDivTmp)
1838:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1839:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv = minSnsClkDivTmp;
1840:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1841:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1842:Generated_Source\PSoC4/CapSense_Sensing.c ****         minSnsClkDiv = (minSnsClkDiv + (CapSense_AUTOTUNE_CAL_UNITS - 1u)) / CapSense_AUTOTUNE_CAL_
1843:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1844:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Make divider even */
1845:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (0u != (minSnsClkDiv & 0x01u))
1846:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1847:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv++;
1848:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1849:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1850:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Initialize auto-tuning configuration structure */
1851:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.snsClkInputClock = (uint16)inputSnsClk;
1852:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.snsClkConstantR = CapSense_CSD_SNSCLK_R_CONST;
1853:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.vRef = CapSense_CSD_VREF_MV;
1854:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.fingerCap = ptrRamWidget->fingerCap;
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 34


1855:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.sigPFC = &ptrRamWidget->sigPFC;
1856:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1857:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1858:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #1:
1859:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - performing the first calibration at fixed settings
1860:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting maximum sensor Cp
1861:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting sense clock frequency based on Cp
1862:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1863:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1864:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrRamWidget->resolution = CapSense_AUTOTUNE_CALIBRATION_RESOLUTION;
1865:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1866:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrRamWidget->snsClk = (uint16)(inputSnsClk / CapSense_AUTOTUNE_CALIBRATION_FREQ_KHZ);
1867:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrRamWidget->snsClkSource = (uint8)CapSense_CLK_SOURCE_DIRECT;
1868:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1869:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1870:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrRamWidget->rowSnsClk = (uint16)(inputSnsClk / CapSense_AUTOTUNE_CALIBRATION_FREQ_KHZ
1871:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrRamWidget->rowSnsClkSource = (uint8)CapSense_CLK_SOURCE_DIRECT;
1872:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
1873:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1874:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calibrate CSD widget to the default calibration target */
1875:Generated_Source\PSoC4/CapSense_Sensing.c ****         (void)CapSense_CSDCalibrateWidget(widgetId, CapSense_AUTOTUNE_CAL_LEVEL);
1876:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1877:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Find raw count and IDAC of a sensor with maximum Cp */
1878:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (snsIndex = 0u; snsIndex < ptrFlashWidget->numCols; snsIndex++)
1879:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1880:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1881:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (maxIdacComp < ptrRamSensor->idacComp[0u])
1882:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1883:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1884:Generated_Source\PSoC4/CapSense_Sensing.c ****                         maxCpSnsId = snsIndex;
1885:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif
1886:Generated_Source\PSoC4/CapSense_Sensing.c ****                     maxIdacComp = ptrRamSensor->idacComp[0u];
1887:Generated_Source\PSoC4/CapSense_Sensing.c ****                     maxRaw = ptrRamSensor->raw[0u];
1888:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1889:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
1890:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (maxRaw < ptrRamSensor->raw[0u])
1891:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1892:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1893:Generated_Source\PSoC4/CapSense_Sensing.c ****                         maxCpSnsId = snsIndex;
1894:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif
1895:Generated_Source\PSoC4/CapSense_Sensing.c ****                     maxRaw = ptrRamSensor->raw[0u];
1896:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1897:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
1898:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrRamSensor++;
1899:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1900:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1901:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Update auto-tuning configuration structure */
1902:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacMod = ptrRamWidget->idacMod[0u];
1903:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacComp = (uint8)maxIdacComp;
1904:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_idacGainTable[ptrRamWidget->idacGainIndex].gainValue;
1905:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.ptrSenseClk = &ptrRamWidget->snsClk;
1906:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.calTarget = (uint16)((maxRaw * CapSense_AUTOTUNE_CAL_UNITS) /
1907:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ((uint32)(0x01uL << CapSense_AUTOTUNE_CALIBRATION_RESOLUTION) - 1u));
1908:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1909:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Find sensor Cp and optimum sense clock value */
1910:Generated_Source\PSoC4/CapSense_Sensing.c ****         maxCp = SmartSense_TunePrescalers(&autoTuneConfig);
1911:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.sensorCap = maxCp;
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 35


1912:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1913:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Increase sensor clock divider to valid value */
1914:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(ptrRamWidget->snsClk < minSnsClkDiv)
1915:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1916:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrRamWidget->snsClk <<= 1u;
1917:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1918:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1919:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Do the same for row for touchpad or matrix buttons widgets */
1920:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1921:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((CapSense_WD_TOUCHPAD_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)) ||
1922:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_WD_MATRIX_BUTTON_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)))
1923:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1924:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Find a sensor with maximum Cp */
1925:Generated_Source\PSoC4/CapSense_Sensing.c ****                 maxRaw = 0u;
1926:Generated_Source\PSoC4/CapSense_Sensing.c ****                 maxIdacComp = 0u;
1927:Generated_Source\PSoC4/CapSense_Sensing.c ****                 for (snsIndex = ptrFlashWidget->numCols; snsIndex < ptrFlashWidget->totalNumSns; sn
1928:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1929:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1930:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (maxIdacComp < ptrRamSensor->idacComp[0u])
1931:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1932:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxCpRowSnsId = snsIndex;
1933:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxIdacComp = ptrRamSensor->idacComp[0u];
1934:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxRaw = ptrRamSensor->raw[0u];
1935:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1936:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
1937:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (maxRaw < ptrRamSensor->raw[0u])
1938:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1939:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxCpRowSnsId = snsIndex;
1940:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxRaw = ptrRamSensor->raw[0u];
1941:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1942:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif
1943:Generated_Source\PSoC4/CapSense_Sensing.c ****                     ptrRamSensor++;
1944:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1945:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1946:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure auto-tuning configuration structure */
1947:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.iDacMod = ptrRamWidget->rowIdacMod[0u];
1948:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.iDacComp = (uint8)maxIdacComp;
1949:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrRamWidget->rowSnsClk;
1950:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.calTarget = (uint16)((maxRaw * CapSense_AUTOTUNE_CAL_UNITS) /
1951:Generated_Source\PSoC4/CapSense_Sensing.c ****                         ((uint32)(0x01uL << CapSense_AUTOTUNE_CALIBRATION_RESOLUTION) - 1u));
1952:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1953:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Find correct sense clock value */
1954:Generated_Source\PSoC4/CapSense_Sensing.c ****                 maxCp = SmartSense_TunePrescalers(&autoTuneConfig);
1955:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1956:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Save maximum sensor Cp and corresponding sensor Id */
1957:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (autoTuneConfig.sensorCap < maxCp)
1958:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1959:Generated_Source\PSoC4/CapSense_Sensing.c ****                     autoTuneConfig.sensorCap = maxCp;
1960:Generated_Source\PSoC4/CapSense_Sensing.c ****                     maxCpSnsId = maxCpRowSnsId;
1961:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1962:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1963:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Increase sensor clock divider to valid value */
1964:Generated_Source\PSoC4/CapSense_Sensing.c ****                 while(ptrRamWidget->rowSnsClk < minSnsClkDiv)
1965:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1966:Generated_Source\PSoC4/CapSense_Sensing.c ****                     ptrRamWidget->rowSnsClk <<= 1u;
1967:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1968:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 36


1969:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1970:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1971:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check tuning results */
1972:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_AUTOTUNE_CP_MAX < maxCp)
1973:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1974:Generated_Source\PSoC4/CapSense_Sensing.c ****             autoTuneStatus = CYRET_BAD_DATA;
1975:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1976:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1977:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1978:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #2:
1979:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - repeating calibration with new sense clock frequency
1980:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting resolution
1981:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1982:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1983:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calibrate CSD widget to the default calibration target with newly defined sense frequenc
1984:Generated_Source\PSoC4/CapSense_Sensing.c ****         (void)CapSense_CSDCalibrateWidget(widgetId, CapSense_AUTOTUNE_CAL_LEVEL);
1985:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1986:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_idacGainTable[ptrRamWidget->idacGainIndex].gainValue;
1987:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacMod = ptrRamWidget->idacMod[0u];
1988:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.ptrSenseClk = &ptrRamWidget->snsClk;
1989:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1990:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1991:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((CapSense_WD_TOUCHPAD_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)) ||
1992:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_WD_MATRIX_BUTTON_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)))
1993:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1994:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (maxCpSnsId >= ptrFlashWidget->numCols)
1995:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1996:Generated_Source\PSoC4/CapSense_Sensing.c ****                     autoTuneConfig.iDacMod = ptrRamWidget->rowIdacMod[0u];
1997:Generated_Source\PSoC4/CapSense_Sensing.c ****                     autoTuneConfig.ptrSenseClk = &ptrRamWidget->rowSnsClk;
1998:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1999:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2000:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2001:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2002:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Find resolution */
2003:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrRamWidget->resolution = SmartSense_TuneSensitivity(&autoTuneConfig);
2004:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2005:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
2006:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #3:
2007:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - selecting a widget clock source if AUTO
2008:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - repeating calibration with found clock frequency, resolution and clock source
2009:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - updating sensitivity
2010:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
2011:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2012:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune widget sensitivity */
2013:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSetWidgetSenseClkSrc(widgetId, ptrRamWidget);
2014:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2015:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calibrate CSD widget to the default calibration target with newly defined resolution */
2016:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneStatus |= CapSense_CSDCalibrateWidget(widgetId, CapSense_AUTOTUNE_CAL_LEVEL);
2017:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2018:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN)
2019:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DsUpdateWidgetCrc(widgetId);
2020:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN) */
2021:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2022:Generated_Source\PSoC4/CapSense_Sensing.c ****         return autoTuneStatus;
2023:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2024:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2025:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 37


2026:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2027:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsAutoTune
2028:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2029:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2030:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2031:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the parameters auto-tuning for the optimal CapSense
2032:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  operation.
2033:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2034:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2035:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the following:
2036:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calibrates Modulator and Compensation IDACs.
2037:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Tunes the Sense Clock optimal value to get a Sense Clock period greater than
2038:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    2*5*R*Cp.
2039:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calculates the resolution for the optimal finger capacitance.
2040:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2041:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
2042:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the operation:
2043:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Zero     - All the widgets are auto-tuned successfully.
2044:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Non-zero - Auto-tuning failed for any widget.
2045:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2046:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2047:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_SsAutoTune(void)
2048:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2049:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
2050:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
2051:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2052:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune each CSD widget */
2053:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
2054:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2055:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
2056:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
2057:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2058:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneStatus |= CapSense_SsAutoTuneWidget(wdgtIndex);
2059:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2060:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2061:Generated_Source\PSoC4/CapSense_Sensing.c ****         return autoTuneStatus;
2062:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2063:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)) */
2064:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2065:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2066:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_DISABLE == CapSense_CSDV2)
2067:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ( ((CapSense_ENABLE == CapSense_CSX_EN) \
2068:Generated_Source\PSoC4/CapSense_Sensing.c ****         || (CapSense_ENABLE == CapSense_ISX_EN)) ||\
2069:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG))
2070:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2071:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsTrimIdacsSinking
2072:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2073:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2074:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2075:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
2076:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  IDAC1 and IDAC2 for Sinking CSD Mode
2077:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2078:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2079:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
2080:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
2081:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2082:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 38


2083:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSinking(void)
2084:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2085:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 trimValue;
2086:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2087:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Mod iDAC Sinking Mode */
2088:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_TRIM2_PTR) & ~CapSense_IDAC_TRIM2_MOD_SNK_MASK;
2089:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM2_PTR) &
2090:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                       CapSense_SFLASH_TRIM_IDAC_MOD_MASK) ;
2091:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2092:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
2093:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Comp iDAC Sinking Mode */
2094:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue &= ~CapSense_IDAC_TRIM2_COMP_SNK_MASK;
2095:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM2_PTR) &
2096:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                           CapSense_SFLASH_TRIM_IDAC_COMP_MASK);
2097:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
2098:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2099:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Update IDAC trim bits for gain control in current sink mode */
2100:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_TRIM2_PTR, trimValue);
2101:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2102:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
2103:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)) */
2104:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2105:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2106:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ( ((CapSense_ENABLE == CapSense_CSX_EN) \
2107:Generated_Source\PSoC4/CapSense_Sensing.c ****         || (CapSense_ENABLE == CapSense_ISX_EN)) || \
2108:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG))
2109:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2110:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsTrimIdacsSourcing
2111:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2112:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2113:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2114:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
2115:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  IDAC1 and IDAC2 for Sourcing CSD Mode
2116:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2117:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2118:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
2119:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
2120:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2121:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2122:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSourcing(void)
2123:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2124:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 trimValue;
2125:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2126:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Mod iDAC Sourcing Mode */
2127:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_TRIM1_PTR) & ~CapSense_IDAC_TRIM1_MOD_SRC_MASK;
2128:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM1_PTR) &
2129:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                       CapSense_SFLASH_TRIM_IDAC_MOD_MASK);
2130:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2131:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
2132:Generated_Source\PSoC4/CapSense_Sensing.c ****                  /* Comp iDAC Sourcing Mode */
2133:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue &= ~CapSense_IDAC_TRIM1_COMP_SRC_MASK;
2134:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM1_PTR) &
2135:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                           CapSense_SFLASH_TRIM_IDAC_COMP_MASK);
2136:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
2137:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2138:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Update IDAC trim bits for gain control in current source mode */
2139:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_TRIM1_PTR, trimValue);
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 39


2140:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2141:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
2142:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)) */
2143:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2144:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2145:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2146:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsTrimIdacs
2147:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2148:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2149:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2150:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function loads trim values from SFLASH rows to calibrate
2151:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  IDAC1 and IDAC2 for CSD Mode
2152:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2153:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2154:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  If CSX mode is enabled the function loads trim values for both sink and source
2155:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  mode. If CSX mode is disabled the function loads trim values for sink or
2156:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  source mode based on sink/source mode configuration.
2157:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
2158:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2159:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2160:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsTrimIdacs(void)
2161:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2162:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN)
2163:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSinking();
2164:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSourcing();
2165:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)
2166:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSinking();
2167:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)
2168:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSourcing();
2169:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2170:Generated_Source\PSoC4/CapSense_Sensing.c ****             #error "Not supported Mode, Component cannot work in this mode"
2171:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN) */
2172:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2173:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_DISABLE == CapSense_CSDV2) */
2174:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2175:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2176:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
2177:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2178:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsChangeImoFreq
2179:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2180:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2181:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2182:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the IMO frequency.
2183:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2184:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2185:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The IMO frequency can have three offsets: 0%, -5% and +5%. The frequency
2186:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  trims are contained in the CapSense_immunity[value] array for each
2187:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  frequency channel.
2188:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2189:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param value The frequency channel ID.
2190:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2191:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2192:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsChangeImoFreq(uint32 value)
2193:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2194:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR, CapSense_immunity[value]);
2195:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2196:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 40


2197:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2198:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsChangeClkFreq
2199:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2200:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2201:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2202:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
2203:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the corresponding divider.
2204:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2205:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2206:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
2207:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the corresponding divider.
2208:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2209:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param chId
2210:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The frequency channel ID.
2211:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2212:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2213:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsChangeClkFreq(uint32 chId)
2214:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2215:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 snsClkDivider;
2216:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 freqOffset1 = 0u;
2217:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 freqOffset2 = 0u;
2218:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2219:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSD_WIDGETS)
2220:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSDV2)
2221:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 conversionsNum;
2222:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2223:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2224:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2225:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2226:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2227:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 snsClkSrc;
2228:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
2229:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2230:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2231:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((0u != CapSense_TOTAL_CSD_WIDGETS) || \
2232:Generated_Source\PSoC4/CapSense_Sensing.c ****              ((CapSense_DISABLE == CapSense_CSX_COMMON_TX_CLK_EN) && (0u != CapSense_TOTAL_CSX_WIDG
2233:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt = &CapSense_dsFlash.wdgtArray[CapSense_wid
2234:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdg
2235:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2236:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2237:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch(CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[CapSense_widgetIndex]))
2238:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2239:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSD_WIDGETS)
2240:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
2241:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get sensor clock divider value */
2242:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN)
2243:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_dsRam.snsCsdClk;
2244:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2245:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2246:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get SnsClck divider for rows or columns */
2247:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_se
2248:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2249:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = ptrWdgt->rowSnsClk;
2250:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2251:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
2252:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2253:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = ptrWdgt->snsClk;
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 41


2254:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2255:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2256:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider = ptrWdgt->snsClk;
2257:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2258:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2259:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2260:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset1 = CapSense_CSD_MFS_DIVIDER_OFFSET_F1;
2261:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset2 = CapSense_CSD_MFS_DIVIDER_OFFSET_F2;
2262:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2263:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2264:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2265:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2266:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Get sense clk source */
2267:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2268:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get SnsClc Source for rows or columns */
2269:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_se
2270:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2271:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->rowSnsClkSource;
2272:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2273:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
2274:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2275:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2276:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2277:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2278:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2279:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2280:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2281:Generated_Source\PSoC4/CapSense_Sensing.c ****                     switch (snsClkSrc)
2282:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2283:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS8:
2284:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS12:
2285:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Multiply by 2 for PRS8/PRS12 mode */
2286:Generated_Source\PSoC4/CapSense_Sensing.c ****                         freqOffset1 <<= 1u;
2287:Generated_Source\PSoC4/CapSense_Sensing.c ****                         freqOffset2 <<= 1u;
2288:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2289:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2290:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2291:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2292:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2293:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
2294:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2295:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Change the divider based on the chId */
2296:Generated_Source\PSoC4/CapSense_Sensing.c ****                 switch (chId)
2297:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2298:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_1:
2299:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2300:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset1;
2301:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2302:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2303:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_2:
2304:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2305:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset2;
2306:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2307:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2308:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2309:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2310:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 42


2311:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2312:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2313:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2314:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSDV2)
2315:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Set Number Of Conversions based on scanning resolution */
2316:Generated_Source\PSoC4/CapSense_Sensing.c ****                     conversionsNum = CapSense_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)pt
2317:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CY_SET_REG32(CapSense_SEQ_NORM_CNT_PTR, (conversionsNum & CapSense_SEQ_NORM_CNT
2318:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2319:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2320:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2321:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2322:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2323:Generated_Source\PSoC4/CapSense_Sensing.c ****                     switch (snsClkSrc)
2324:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2325:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS8:
2326:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS12:
2327:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Divide by 2 for PRS8/PRS12 mode */
2328:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider >>= 1;
2329:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (snsClkDivider == 0u)
2330:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2331:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = 1u;
2332:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2333:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2334:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2335:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2336:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2337:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2338:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
2339:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2340:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure the new divider */
2341:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetSnsClockDivider(snsClkDivider);
2342:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2343:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2344:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* #if (0u != CapSense_TOTAL_CSD_WIDGETS) */
2345:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2346:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSX_WIDGETS)
2347:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
2348:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN)
2349:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_dsRam.snsCsxClk;
2350:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else /* (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
2351:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = ptrWdgt->snsClk;
2352:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
2353:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset1 = CapSense_CSX_MFS_DIVIDER_OFFSET_F1;
2354:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset2 = CapSense_CSX_MFS_DIVIDER_OFFSET_F2;
2355:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2356:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Change the divider based on the chId */
2357:Generated_Source\PSoC4/CapSense_Sensing.c ****                 switch (chId)
2358:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2359:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_1:
2360:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2361:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset1;
2362:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2363:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2364:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_2:
2365:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2366:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset2;
2367:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 43


2368:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2369:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2370:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2371:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2372:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2373:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2374:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2375:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure the new divider */
2376:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetSnsClockDivider(snsClkDivider);
2377:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2378:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2379:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* #if (0u != CapSense_TOTAL_CSX_WIDGETS) */
2380:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2381:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2382:Generated_Source\PSoC4/CapSense_Sensing.c ****             CYASSERT(0);
2383:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2384:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2385:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2386:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
2387:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2388:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2389:Generated_Source\PSoC4/CapSense_Sensing.c **** #if((CapSense_ENABLE == CapSense_CSD_EN) || \
2390:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSX_EN) && \
2391:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2)))
2392:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2393:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsInitializeSourceSenseClk
2394:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2395:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2396:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2397:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets a source for Sense Clk for all CSD widgets.
2398:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2399:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2400:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk.
2401:Generated_Source\PSoC4/CapSense_Sensing.c **** *  for all CSD widgets.
2402:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2403:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2404:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsInitializeSourceSenseClk(void)
2405:Generated_Source\PSoC4/CapSense_Sensing.c **** {
2406:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
2407:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2408:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
2410:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2411:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
2412:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2413:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
2414:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2415:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
2416:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
2417:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
2418:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2419:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2420:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
2421:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
2422:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetTxClkSrc(wdgtIndex, ptrWdgt);
2423:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2424:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (((CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN)) &
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 44


2425:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2426:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2427:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2428:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN)
2429:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DsUpdateWidgetCrc(wdgtIndex);
2430:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN) */
2431:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2432:Generated_Source\PSoC4/CapSense_Sensing.c **** }
2433:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || \
2434:Generated_Source\PSoC4/CapSense_Sensing.c ****            (((CapSense_ENABLE == CapSense_CSX_EN) || \
2435:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_ISX_EN)) && \
2436:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2))) */
2437:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2438:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2439:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
2440:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2441:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsSetWidgetSenseClkSrc
2442:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2443:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2444:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2445:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Sets a source for the sense clock for a widget.
2446:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2447:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param wdgtIndex
2448:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2449:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param ptrWdgt
2450:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2451:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2452:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2453:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk for a
2454:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  widget.
2455:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2456:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2457:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptr
2458:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2459:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
2460:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrScale;
2461:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2462:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2463:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if(CapSense_ENABLE == CapSense_CSDV2)
2464:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 conversionsNum;
2465:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2466:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 snsClkDivider;
2467:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2468:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2469:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2470:Generated_Source\PSoC4/CapSense_Sensing.c ****             snsClkDivider = CapSense_SsCSDGetColSnsClkDivider(wdgtIndex);
2471:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2472:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if(CapSense_ENABLE == CapSense_CSDV2)
2473:Generated_Source\PSoC4/CapSense_Sensing.c ****                 conversionsNum = CapSense_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)ptrWdg
2474:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                              CapSen
2475:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2476:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
2477:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2478:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /*
2479:Generated_Source\PSoC4/CapSense_Sensing.c ****                     * Multiplying of the snsClkDivider by 2 is needed to pass the
2480:Generated_Source\PSoC4/CapSense_Sensing.c ****                     * average PRS frequency through the argument.
2481:Generated_Source\PSoC4/CapSense_Sensing.c ****                     */
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 45


2482:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->res
2483:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2484:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2485:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2486:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /*
2487:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * Multiplying of the snsClkDivider by 2 is needed to pass the
2488:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * average PRS frequency through the argument.
2489:Generated_Source\PSoC4/CapSense_Sensing.c ****                 */
2490:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->resolut
2491:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = 0u;
2492:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2493:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2494:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrSize = (uint8)CapSense_DEFAULT_MODULATION_MODE;
2495:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale = 0u;
2496:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)wdgtIndex; /* This parameter is unused in such configurations */
2497:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2498:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2499:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR_SCALE_OFFS
2500:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2501:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2502:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArray[wdgtIn
2503:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArray[w
2504:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2505:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2506:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_SsCSDGetRowSnsClkDivider(wdgtIndex);
2507:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2508:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if(CapSense_ENABLE == CapSense_CSDV2)
2509:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2510:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
2511:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2512:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /*
2513:Generated_Source\PSoC4/CapSense_Sensing.c ****                             * Multiplying of the snsClkDivider by 2 is needed to pass the
2514:Generated_Source\PSoC4/CapSense_Sensing.c ****                             * average PRS frequency through the argument.
2515:Generated_Source\PSoC4/CapSense_Sensing.c ****                             */
2516:Generated_Source\PSoC4/CapSense_Sensing.c ****                             lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrW
2517:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2518:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2519:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2520:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /*
2521:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * Multiplying of the snsClkDivider by 2 is needed to pass the
2522:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * average PRS frequency through the argument.
2523:Generated_Source\PSoC4/CapSense_Sensing.c ****                         */
2524:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt-
2525:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrScale = 0u;
2526:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2527:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else
2528:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrSize = (uint8)CapSense_DEFAULT_MODULATION_MODE;
2529:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrScale = 0u;
2530:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2531:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->rowSnsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR
2532:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2533:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2534:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2535:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2536:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2537:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2538:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 46


2539:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2540:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsSetWidgetTxClkSrc
2541:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2542:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2543:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2544:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Sets a source for the Tx clock for a widget.
2545:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2546:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param wdgtIndex
2547:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2548:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param ptrWdgt
2549:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2550:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2551:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2552:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Updates snsClkSource with a source for Tx Clk for a widget.
2553:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2554:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2555:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptrWdg
2556:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2557:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
2558:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrScale;
2559:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2560:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) && \
2561:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES))
2562:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 conversionsNum;
2563:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 snsClkDivider;
2564:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2565:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2566:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)
2567:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
2568:Generated_Source\PSoC4/CapSense_Sensing.c ****                 conversionsNum = (uint32)ptrWdgt->resolution;
2569:Generated_Source\PSoC4/CapSense_Sensing.c ****                 snsClkDivider = CapSense_SsCSXGetTxClkDivider(wdgtIndex);
2570:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2571:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2572:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2573:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = (uint8)CapSense_CLK_SOURCE_DIRECT;
2574:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = 0u;
2575:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Unused function argument */
2576:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)wdgtIndex;
2577:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
2578:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2579:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrSize = (uint8)CapSense_CSX_TX_CLK_SOURCE;
2580:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale = 0u;
2581:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Unused function argument */
2582:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)wdgtIndex;
2583:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) */
2584:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2585:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR_SCALE_OFFS
2586:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2587:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2)) */
2588:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2589:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2590:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(((CapSense_ENABLE == CapSense_CSX_EN) && \
2591:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2592:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
2593:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)) ||\
2594:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSD_EN) && \
2595:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 47


2596:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)))
2597:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2598:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsCalcLfsrSize
2599:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2600:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2601:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2602:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is an internal function that finds a SSC polynomial size in the Auto mode.
2603:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2604:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2605:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The SSC polynomial size in the auto mode is found based on the following
2606:Generated_Source\PSoC4/CapSense_Sensing.c **** *  requirements:
2607:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - an LFSR value should be selected so that the max clock dither is limited with +/-10%.
2608:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - at least one full spread spectrum polynomial should pass during the scan time.
2609:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - the value of the number of conversions should be an integer multiple of the
2610:Generated_Source\PSoC4/CapSense_Sensing.c **** *    repeat period of the programmed LFSR_SIZE.
2611:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2612:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
2613:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2614:Generated_Source\PSoC4/CapSense_Sensing.c **** *  resolution The widget resolution.
2615:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2616:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return lfsrSize The LFSRSIZE value for the SENSE_PERIOD register.
2617:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2618:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2619:Generated_Source\PSoC4/CapSense_Sensing.c **** static uint8 CapSense_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum)
2620:Generated_Source\PSoC4/CapSense_Sensing.c **** {
  28              		.loc 1 2620 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 70B5     		push	{r4, r5, r6, lr}
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 4, -16
  36              		.cfi_offset 5, -12
  37              		.cfi_offset 6, -8
  38              		.cfi_offset 14, -4
  39 0002 0400     		movs	r4, r0
  40 0004 0D00     		movs	r5, r1
  41              	.LVL1:
2621:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 lfsrSize = 0u;
2622:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2623:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Find LFSR value */
2624:Generated_Source\PSoC4/CapSense_Sensing.c ****     if((CapSense_SNSCLK_SSC4_THRESHOLD <= snsClkDivider) &&
  42              		.loc 1 2624 0
  43 0006 9F28     		cmp	r0, #159
  44 0008 08D9     		bls	.L2
  45              		.loc 1 2624 0 is_stmt 0 discriminator 1
  46 000a 1B4B     		ldr	r3, .L12
  47 000c 9942     		cmp	r1, r3
  48 000e 05D9     		bls	.L2
2625:Generated_Source\PSoC4/CapSense_Sensing.c ****        (CapSense_SNSCLK_SSC4_PERIOD <= conversionsNum) &&
2626:Generated_Source\PSoC4/CapSense_Sensing.c ****        (0uL == (conversionsNum % CapSense_SNSCLK_SSC4_PERIOD)))
  49              		.loc 1 2626 0 is_stmt 1
  50 0010 1A49     		ldr	r1, .L12+4
  51              	.LVL2:
  52 0012 2800     		movs	r0, r5
  53              	.LVL3:
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 48


  54 0014 FFF7FEFF 		bl	__aeabi_uidivmod
  55              	.LVL4:
2625:Generated_Source\PSoC4/CapSense_Sensing.c ****        (CapSense_SNSCLK_SSC4_PERIOD <= conversionsNum) &&
  56              		.loc 1 2625 0
  57 0018 0029     		cmp	r1, #0
  58 001a 21D0     		beq	.L6
  59              	.L2:
2627:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2628:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC4;
2629:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2630:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC3_THRESHOLD <= snsClkDivider) &&
  60              		.loc 1 2630 0
  61 001c 9F2C     		cmp	r4, #159
  62 001e 09D9     		bls	.L4
  63              		.loc 1 2630 0 is_stmt 0 discriminator 1
  64 0020 FF23     		movs	r3, #255
  65 0022 5B00     		lsls	r3, r3, #1
  66 0024 9D42     		cmp	r5, r3
  67 0026 05D9     		bls	.L4
2631:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC3_PERIOD <= conversionsNum) &&
2632:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC3_PERIOD)))
  68              		.loc 1 2632 0 is_stmt 1
  69 0028 1549     		ldr	r1, .L12+8
  70 002a 2800     		movs	r0, r5
  71 002c FFF7FEFF 		bl	__aeabi_uidivmod
  72              	.LVL5:
2631:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC3_PERIOD <= conversionsNum) &&
  73              		.loc 1 2631 0
  74 0030 0029     		cmp	r1, #0
  75 0032 17D0     		beq	.L7
  76              	.L4:
2633:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2634:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC3;
2635:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2636:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC2_THRESHOLD <= snsClkDivider) &&
  77              		.loc 1 2636 0
  78 0034 9F2C     		cmp	r4, #159
  79 0036 07D9     		bls	.L5
  80              		.loc 1 2636 0 is_stmt 0 discriminator 1
  81 0038 7E2D     		cmp	r5, #126
  82 003a 05D9     		bls	.L5
2637:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC2_PERIOD <= conversionsNum) &&
2638:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC2_PERIOD)))
  83              		.loc 1 2638 0 is_stmt 1
  84 003c 7F21     		movs	r1, #127
  85 003e 2800     		movs	r0, r5
  86 0040 FFF7FEFF 		bl	__aeabi_uidivmod
  87              	.LVL6:
2637:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC2_PERIOD <= conversionsNum) &&
  88              		.loc 1 2637 0
  89 0044 0029     		cmp	r1, #0
  90 0046 0FD0     		beq	.L8
  91              	.L5:
2639:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2640:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC2;
2641:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2642:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC1_THRESHOLD <= snsClkDivider) &&
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 49


  92              		.loc 1 2642 0
  93 0048 9F2C     		cmp	r4, #159
  94 004a 0FD9     		bls	.L9
  95              		.loc 1 2642 0 is_stmt 0 discriminator 1
  96 004c 3E2D     		cmp	r5, #62
  97 004e 0FD9     		bls	.L10
2643:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC1_PERIOD <= conversionsNum) &&
2644:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC1_PERIOD)))
  98              		.loc 1 2644 0 is_stmt 1
  99 0050 3F21     		movs	r1, #63
 100 0052 2800     		movs	r0, r5
 101 0054 FFF7FEFF 		bl	__aeabi_uidivmod
 102              	.LVL7:
2643:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC1_PERIOD <= conversionsNum) &&
 103              		.loc 1 2643 0
 104 0058 0029     		cmp	r1, #0
 105 005a 0BD0     		beq	.L11
2645:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2646:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC1;
2647:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2648:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
2649:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2650:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = (uint8)CapSense_CLK_SOURCE_DIRECT;
 106              		.loc 1 2650 0
 107 005c 0020     		movs	r0, #0
 108 005e 0AE0     		b	.L3
 109              	.L6:
2628:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 110              		.loc 1 2628 0
 111 0060 0420     		movs	r0, #4
 112 0062 08E0     		b	.L3
 113              	.L7:
2634:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 114              		.loc 1 2634 0
 115 0064 0320     		movs	r0, #3
 116 0066 06E0     		b	.L3
 117              	.L8:
2640:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 118              		.loc 1 2640 0
 119 0068 0220     		movs	r0, #2
 120 006a 04E0     		b	.L3
 121              	.L9:
 122              		.loc 1 2650 0
 123 006c 0020     		movs	r0, #0
 124 006e 02E0     		b	.L3
 125              	.L10:
 126 0070 0020     		movs	r0, #0
 127 0072 00E0     		b	.L3
 128              	.L11:
2646:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 129              		.loc 1 2646 0
 130 0074 0120     		movs	r0, #1
 131              	.L3:
 132              	.LVL8:
2651:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2652:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2653:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (lfsrSize);
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 50


2654:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 133              		.loc 1 2654 0
 134              		@ sp needed
 135              	.LVL9:
 136              	.LVL10:
 137 0076 70BD     		pop	{r4, r5, r6, pc}
 138              	.L13:
 139              		.align	2
 140              	.L12:
 141 0078 FE030000 		.word	1022
 142 007c FF030000 		.word	1023
 143 0080 FF010000 		.word	511
 144              		.cfi_endproc
 145              	.LFE21:
 146              		.size	CapSense_SsCalcLfsrSize, .-CapSense_SsCalcLfsrSize
 147              		.global	__aeabi_uidiv
 148              		.section	.text.CapSense_SsCalcLfsrScale,"ax",%progbits
 149              		.align	2
 150              		.code	16
 151              		.thumb_func
 152              		.type	CapSense_SsCalcLfsrScale, %function
 153              	CapSense_SsCalcLfsrScale:
 154              	.LFB22:
2655:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2656:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2657:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2658:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsCalcLfsrScale
2659:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2660:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2661:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2662:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is an internal function that calculates the LFSR scale value.
2663:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2664:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2665:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The LFSR scale value is used to increase the clock dither if the desired dither
2666:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is wider than can be achieved with the current Sense Clock Divider and current LFSR
2667:Generated_Source\PSoC4/CapSense_Sensing.c **** *  period.
2668:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2669:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This returns the LFSR scale value needed to keep the clock dither in
2670:Generated_Source\PSoC4/CapSense_Sensing.c **** *  range +/-10%.
2671:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2672:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
2673:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2674:Generated_Source\PSoC4/CapSense_Sensing.c **** *  lfsrSize The period of the LFSR sequence.
2675:Generated_Source\PSoC4/CapSense_Sensing.c **** *          For devices with CapSense_CSDV2_REF9P6UA_EN = TRUE, the
2676:Generated_Source\PSoC4/CapSense_Sensing.c **** *          mode parameters can take the following values:
2677:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2678:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC1   The length of LFSR sequence is 63 cycles.
2679:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC2   The length of LFSR sequence is 127 cycles.
2680:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC3   The length of LFSR sequence is 255 cycles.
2681:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC4   The length of LFSR sequence is 511 cycles.
2682:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2683:Generated_Source\PSoC4/CapSense_Sensing.c **** *          For devices with CapSense_CSDV2_REF9P6UA_EN = TRUE, the
2684:Generated_Source\PSoC4/CapSense_Sensing.c **** *          mode parameters can take the following values:
2685:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2686:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC1   The length of LFSR sequence is 3 cycles.
2687:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC2   The length of LFSR sequence is 7 cycles.
2688:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC3   The length of LFSR sequence is 15 cycles.
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 51


2689:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC4   The length of LFSR sequence is 31 cycles.
2690:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2691:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
2692:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the LFSR scale value needed to keep the clock dither in range +/-10%.
2693:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2694:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2695:Generated_Source\PSoC4/CapSense_Sensing.c **** static uint8 CapSense_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize)
2696:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 155              		.loc 1 2696 0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159              	.LVL11:
 160 0000 10B5     		push	{r4, lr}
 161              		.cfi_def_cfa_offset 8
 162              		.cfi_offset 4, -8
 163              		.cfi_offset 14, -4
2697:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrScale;
2698:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrRange;
2699:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrDither;
2700:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2701:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Initialize the lfsrSize variable with the LFSR Range for given Lfsr Size. */
2702:Generated_Source\PSoC4/CapSense_Sensing.c ****     switch(lfsrSize)
 164              		.loc 1 2702 0
 165 0002 4B1E     		subs	r3, r1, #1
 166 0004 DBB2     		uxtb	r3, r3
 167 0006 032B     		cmp	r3, #3
 168 0008 01D8     		bhi	.L20
2703:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2704:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC1:
2705:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2706:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC1_RANGE;
 169              		.loc 1 2706 0
 170 000a 1023     		movs	r3, #16
 171 000c 00E0     		b	.L15
 172              	.L20:
2707:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2708:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2709:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC2:
2710:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2711:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC2_RANGE;
2712:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2713:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2714:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC3:
2715:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2716:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC3_RANGE;
2717:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2718:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2719:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC4:
2720:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2721:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC4_RANGE;
2722:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2723:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2724:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2725:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2726:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = 0u;
 173              		.loc 1 2726 0
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 52


 174 000e 0023     		movs	r3, #0
 175              	.L15:
 176              	.LVL12:
2727:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2728:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2729:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2730:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2731:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Calculate the LFSR Scale value that is required to keep the Clock dither
2732:Generated_Source\PSoC4/CapSense_Sensing.c ****      * as close as possible to the +/-10% limit of the used frequency.
2733:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
2734:Generated_Source\PSoC4/CapSense_Sensing.c ****     if((lfsrSize != CapSense_CLK_SOURCE_DIRECT) && (0u != lfsrRange))
 177              		.loc 1 2734 0
 178 0010 0029     		cmp	r1, #0
 179 0012 11D0     		beq	.L21
 180              		.loc 1 2734 0 is_stmt 0 discriminator 1
 181 0014 002B     		cmp	r3, #0
 182 0016 11D0     		beq	.L22
2735:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2736:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calculate the LFSR Dither in percents. */
2737:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrDither  = ((lfsrRange * 100uL) / snsClkDivider);
 183              		.loc 1 2737 0 is_stmt 1
 184 0018 6422     		movs	r2, #100
 185 001a 5343     		muls	r3, r2
 186              	.LVL13:
 187 001c 0100     		movs	r1, r0
 188              	.LVL14:
 189 001e 1800     		movs	r0, r3
 190              	.LVL15:
 191 0020 FFF7FEFF 		bl	__aeabi_uidiv
 192              	.LVL16:
2738:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrScale = 0uL;
 193              		.loc 1 2738 0
 194 0024 0023     		movs	r3, #0
2739:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2740:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(lfsrDither < CapSense_LFSR_DITHER_PERCENTAGE)
 195              		.loc 1 2740 0
 196 0026 01E0     		b	.L18
 197              	.LVL17:
 198              	.L19:
2741:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2742:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale++;
 199              		.loc 1 2742 0
 200 0028 0133     		adds	r3, r3, #1
 201              	.LVL18:
2743:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrDither <<=1uL;
 202              		.loc 1 2743 0
 203 002a 4000     		lsls	r0, r0, #1
 204              	.LVL19:
 205              	.L18:
2740:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 206              		.loc 1 2740 0
 207 002c 0928     		cmp	r0, #9
 208 002e FBD9     		bls	.L19
2744:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2745:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2746:Generated_Source\PSoC4/CapSense_Sensing.c ****         if(lfsrDither > CapSense_LFSR_DITHER_PERCENTAGE)
 209              		.loc 1 2746 0
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 53


 210 0030 0A28     		cmp	r0, #10
 211 0032 04D9     		bls	.L17
2747:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2748:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale--;
 212              		.loc 1 2748 0
 213 0034 013B     		subs	r3, r3, #1
 214              	.LVL20:
 215 0036 02E0     		b	.L17
 216              	.LVL21:
 217              	.L21:
2749:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2750:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2751:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
2752:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2753:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrScale = 0uL;
 218              		.loc 1 2753 0
 219 0038 0023     		movs	r3, #0
 220              	.LVL22:
 221 003a 00E0     		b	.L17
 222              	.LVL23:
 223              	.L22:
 224 003c 0023     		movs	r3, #0
 225              	.LVL24:
 226              	.L17:
2754:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2755:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2756:Generated_Source\PSoC4/CapSense_Sensing.c ****     return ((uint8)lfsrScale);
 227              		.loc 1 2756 0
 228 003e D8B2     		uxtb	r0, r3
2757:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 229              		.loc 1 2757 0
 230              		@ sp needed
 231 0040 10BD     		pop	{r4, pc}
 232              		.cfi_endproc
 233              	.LFE22:
 234              		.size	CapSense_SsCalcLfsrScale, .-CapSense_SsCalcLfsrScale
 235 0042 C046     		.section	.text.CapSense_SsSetWidgetTxClkSrc,"ax",%progbits
 236              		.align	2
 237              		.code	16
 238              		.thumb_func
 239              		.type	CapSense_SsSetWidgetTxClkSrc, %function
 240              	CapSense_SsSetWidgetTxClkSrc:
 241              	.LFB20:
2556:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
 242              		.loc 1 2556 0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 0
 245              		@ frame_needed = 0, uses_anonymous_args = 0
 246              	.LVL25:
 247 0000 70B5     		push	{r4, r5, r6, lr}
 248              		.cfi_def_cfa_offset 16
 249              		.cfi_offset 4, -16
 250              		.cfi_offset 5, -12
 251              		.cfi_offset 6, -8
 252              		.cfi_offset 14, -4
 253 0002 0D00     		movs	r5, r1
2568:Generated_Source\PSoC4/CapSense_Sensing.c ****                 snsClkDivider = CapSense_SsCSXGetTxClkDivider(wdgtIndex);
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 54


 254              		.loc 1 2568 0
 255 0004 0C88     		ldrh	r4, [r1]
 256              	.LVL26:
2569:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
 257              		.loc 1 2569 0
 258 0006 FFF7FEFF 		bl	CapSense_SsCSXGetTxClkDivider
 259              	.LVL27:
 260 000a 0600     		movs	r6, r0
 261              	.LVL28:
2570:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
 262              		.loc 1 2570 0
 263 000c 2100     		movs	r1, r4
 264 000e FFF7FEFF 		bl	CapSense_SsCalcLfsrSize
 265              	.LVL29:
 266 0012 0400     		movs	r4, r0
 267              	.LVL30:
2571:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
 268              		.loc 1 2571 0
 269 0014 0100     		movs	r1, r0
 270 0016 3000     		movs	r0, r6
 271              	.LVL31:
 272 0018 FFF7FEFF 		bl	CapSense_SsCalcLfsrScale
 273              	.LVL32:
2585:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 274              		.loc 1 2585 0
 275 001c 0001     		lsls	r0, r0, #4
 276              	.LVL33:
 277 001e C0B2     		uxtb	r0, r0
 278 0020 2043     		orrs	r0, r4
 279 0022 A872     		strb	r0, [r5, #10]
2586:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2)) */
 280              		.loc 1 2586 0
 281              		@ sp needed
 282              	.LVL34:
 283              	.LVL35:
 284 0024 70BD     		pop	{r4, r5, r6, pc}
 285              		.cfi_endproc
 286              	.LFE20:
 287              		.size	CapSense_SsSetWidgetTxClkSrc, .-CapSense_SsSetWidgetTxClkSrc
 288 0026 C046     		.section	.text.CapSense_IsBusy,"ax",%progbits
 289              		.align	2
 290              		.global	CapSense_IsBusy
 291              		.code	16
 292              		.thumb_func
 293              		.type	CapSense_IsBusy, %function
 294              	CapSense_IsBusy:
 295              	.LFB1:
 237:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (CapSense_dsRam.status & CapSense_SW_STS_BUSY);
 296              		.loc 1 237 0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 0
 299              		@ frame_needed = 0, uses_anonymous_args = 0
 300              		@ link register save eliminated.
 238:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 301              		.loc 1 238 0
 302 0000 024B     		ldr	r3, .L25
 303 0002 DB68     		ldr	r3, [r3, #12]
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 55


 304 0004 8020     		movs	r0, #128
 305 0006 1840     		ands	r0, r3
 239:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 306              		.loc 1 239 0
 307              		@ sp needed
 308 0008 7047     		bx	lr
 309              	.L26:
 310 000a C046     		.align	2
 311              	.L25:
 312 000c 00000000 		.word	CapSense_dsRam
 313              		.cfi_endproc
 314              	.LFE1:
 315              		.size	CapSense_IsBusy, .-CapSense_IsBusy
 316              		.section	.text.CapSense_SetupWidget,"ax",%progbits
 317              		.align	2
 318              		.global	CapSense_SetupWidget
 319              		.code	16
 320              		.thumb_func
 321              		.type	CapSense_SetupWidget, %function
 322              	CapSense_SetupWidget:
 323              	.LFB2:
 283:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 324              		.loc 1 283 0
 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 0
 327              		@ frame_needed = 0, uses_anonymous_args = 0
 328              	.LVL36:
 329 0000 10B5     		push	{r4, lr}
 330              		.cfi_def_cfa_offset 8
 331              		.cfi_offset 4, -8
 332              		.cfi_offset 14, -4
 286:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 333              		.loc 1 286 0
 334 0002 0E4B     		ldr	r3, .L33
 335 0004 DB68     		ldr	r3, [r3, #12]
 336 0006 DB03     		lsls	r3, r3, #15
 337 0008 0DD4     		bmi	.L30
 296:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 338              		.loc 1 296 0
 339 000a 0028     		cmp	r0, #0
 340 000c 0DD1     		bne	.L31
 297:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 341              		.loc 1 297 0 discriminator 1
 342 000e 4309     		lsrs	r3, r0, #5
 343 0010 0433     		adds	r3, r3, #4
 344 0012 9B00     		lsls	r3, r3, #2
 345 0014 094A     		ldr	r2, .L33
 346 0016 9B58     		ldr	r3, [r3, r2]
 347 0018 1F22     		movs	r2, #31
 348 001a 0240     		ands	r2, r0
 349 001c D340     		lsrs	r3, r3, r2
 296:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 350              		.loc 1 296 0 discriminator 1
 351 001e DB07     		lsls	r3, r3, #31
 352 0020 05D4     		bmi	.L32
 304:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 353              		.loc 1 304 0
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 56


 354 0022 0124     		movs	r4, #1
 355 0024 04E0     		b	.L28
 356              	.L30:
 289:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 357              		.loc 1 289 0
 358 0026 1124     		movs	r4, #17
 359 0028 02E0     		b	.L28
 360              	.L31:
 304:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 361              		.loc 1 304 0
 362 002a 0124     		movs	r4, #1
 363 002c 00E0     		b	.L28
 364              	.L32:
 300:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 365              		.loc 1 300 0
 366 002e 0024     		movs	r4, #0
 367              	.L28:
 368              	.LVL37:
 311:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 369              		.loc 1 311 0
 370 0030 002C     		cmp	r4, #0
 371 0032 01D1     		bne	.L29
 318:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 372              		.loc 1 318 0
 373 0034 FFF7FEFF 		bl	CapSense_CSXSetupWidget
 374              	.LVL38:
 375              	.L29:
 340:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 376              		.loc 1 340 0
 377 0038 2000     		movs	r0, r4
 378              		@ sp needed
 379              	.LVL39:
 380 003a 10BD     		pop	{r4, pc}
 381              	.L34:
 382              		.align	2
 383              	.L33:
 384 003c 00000000 		.word	CapSense_dsRam
 385              		.cfi_endproc
 386              	.LFE2:
 387              		.size	CapSense_SetupWidget, .-CapSense_SetupWidget
 388              		.section	.text.CapSense_Scan,"ax",%progbits
 389              		.align	2
 390              		.global	CapSense_Scan
 391              		.code	16
 392              		.thumb_func
 393              		.type	CapSense_Scan, %function
 394              	CapSense_Scan:
 395              	.LFB3:
 366:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 396              		.loc 1 366 0
 397              		.cfi_startproc
 398              		@ args = 0, pretend = 0, frame = 0
 399              		@ frame_needed = 0, uses_anonymous_args = 0
 400 0000 10B5     		push	{r4, lr}
 401              		.cfi_def_cfa_offset 8
 402              		.cfi_offset 4, -8
 403              		.cfi_offset 14, -4
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 57


 404              	.LVL40:
 369:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 405              		.loc 1 369 0
 406 0002 084B     		ldr	r3, .L41
 407 0004 DB68     		ldr	r3, [r3, #12]
 408 0006 DB03     		lsls	r3, r3, #15
 409 0008 07D4     		bmi	.L38
 376:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 410              		.loc 1 376 0
 411 000a 074B     		ldr	r3, .L41+4
 412 000c 1B78     		ldrb	r3, [r3]
 413 000e 022B     		cmp	r3, #2
 414 0010 05D1     		bne	.L40
 380:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 415              		.loc 1 380 0
 416 0012 FFF7FEFF 		bl	CapSense_CSXScan
 417              	.LVL41:
 367:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 418              		.loc 1 367 0
 419 0016 0020     		movs	r0, #0
 381:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 420              		.loc 1 381 0
 421 0018 03E0     		b	.L36
 422              	.L38:
 372:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 423              		.loc 1 372 0
 424 001a 1120     		movs	r0, #17
 425 001c 01E0     		b	.L36
 426              	.L40:
 394:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 427              		.loc 1 394 0
 428 001e 0120     		movs	r0, #1
 429 0020 4042     		rsbs	r0, r0, #0
 430              	.L36:
 431              	.LVL42:
 399:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 432              		.loc 1 399 0
 433              		@ sp needed
 434 0022 10BD     		pop	{r4, pc}
 435              	.L42:
 436              		.align	2
 437              	.L41:
 438 0024 00000000 		.word	CapSense_dsRam
 439 0028 00000000 		.word	.LANCHOR0
 440              		.cfi_endproc
 441              	.LFE3:
 442              		.size	CapSense_Scan, .-CapSense_Scan
 443              		.section	.text.CapSense_ScanAllWidgets,"ax",%progbits
 444              		.align	2
 445              		.global	CapSense_ScanAllWidgets
 446              		.code	16
 447              		.thumb_func
 448              		.type	CapSense_ScanAllWidgets, %function
 449              	CapSense_ScanAllWidgets:
 450              	.LFB4:
 428:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 451              		.loc 1 428 0
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 58


 452              		.cfi_startproc
 453              		@ args = 0, pretend = 0, frame = 0
 454              		@ frame_needed = 0, uses_anonymous_args = 0
 455 0000 10B5     		push	{r4, lr}
 456              		.cfi_def_cfa_offset 8
 457              		.cfi_offset 4, -8
 458              		.cfi_offset 14, -4
 459              	.LVL43:
 433:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 460              		.loc 1 433 0
 461 0002 0C4B     		ldr	r3, .L49
 462 0004 DB68     		ldr	r3, [r3, #12]
 463 0006 1B06     		lsls	r3, r3, #24
 464 0008 12D4     		bmi	.L48
 465 000a 0024     		movs	r4, #0
 466 000c 0120     		movs	r0, #1
 467 000e 4042     		rsbs	r0, r0, #0
 468 0010 0BE0     		b	.L45
 469              	.LVL44:
 470              	.L47:
 449:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 471              		.loc 1 449 0
 472 0012 2000     		movs	r0, r4
 473              	.LVL45:
 474 0014 FFF7FEFF 		bl	CapSense_SetupWidget
 475              	.LVL46:
 451:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 476              		.loc 1 451 0
 477 0018 0028     		cmp	r0, #0
 478 001a 05D1     		bne	.L46
 468:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 479              		.loc 1 468 0
 480 001c 0022     		movs	r2, #0
 481 001e 064B     		ldr	r3, .L49+4
 482 0020 5A70     		strb	r2, [r3, #1]
 473:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 483              		.loc 1 473 0
 484 0022 FFF7FEFF 		bl	CapSense_Scan
 485              	.LVL47:
 475:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 486              		.loc 1 475 0
 487 0026 04E0     		b	.L44
 488              	.L46:
 446:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 489              		.loc 1 446 0
 490 0028 0134     		adds	r4, r4, #1
 491              	.LVL48:
 492              	.L45:
 444:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex < CapSense_TOTAL_WIDGETS;
 493              		.loc 1 444 0 discriminator 1
 494 002a 002C     		cmp	r4, #0
 495 002c F1D0     		beq	.L47
 496 002e 00E0     		b	.L44
 497              	.LVL49:
 498              	.L48:
 436:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 499              		.loc 1 436 0
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 59


 500 0030 1120     		movs	r0, #17
 501              	.LVL50:
 502              	.L44:
 481:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 503              		.loc 1 481 0
 504              		@ sp needed
 505 0032 10BD     		pop	{r4, pc}
 506              	.L50:
 507              		.align	2
 508              	.L49:
 509 0034 00000000 		.word	CapSense_dsRam
 510 0038 00000000 		.word	.LANCHOR0
 511              		.cfi_endproc
 512              	.LFE4:
 513              		.size	CapSense_ScanAllWidgets, .-CapSense_ScanAllWidgets
 514              		.section	.text.CapSense_SetupWidgetExt,"ax",%progbits
 515              		.align	2
 516              		.global	CapSense_SetupWidgetExt
 517              		.code	16
 518              		.thumb_func
 519              		.type	CapSense_SetupWidgetExt, %function
 520              	CapSense_SetupWidgetExt:
 521              	.LFB5:
 536:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 522              		.loc 1 536 0
 523              		.cfi_startproc
 524              		@ args = 0, pretend = 0, frame = 0
 525              		@ frame_needed = 0, uses_anonymous_args = 0
 526              	.LVL51:
 527 0000 10B5     		push	{r4, lr}
 528              		.cfi_def_cfa_offset 8
 529              		.cfi_offset 4, -8
 530              		.cfi_offset 14, -4
 539:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 531              		.loc 1 539 0
 532 0002 134B     		ldr	r3, .L58
 533 0004 DB68     		ldr	r3, [r3, #12]
 534 0006 DB03     		lsls	r3, r3, #15
 535 0008 15D4     		bmi	.L54
 549:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)) &&
 536              		.loc 1 549 0
 537 000a 0028     		cmp	r0, #0
 538 000c 15D1     		bne	.L55
 550:Generated_Source\PSoC4/CapSense_Sensing.c ****         (sensorId < CapSense_GET_SENSOR_COUNT(widgetId)))
 539              		.loc 1 550 0 discriminator 1
 540 000e 4309     		lsrs	r3, r0, #5
 541 0010 0433     		adds	r3, r3, #4
 542 0012 9B00     		lsls	r3, r3, #2
 543 0014 0E4A     		ldr	r2, .L58
 544 0016 9B58     		ldr	r3, [r3, r2]
 545 0018 1F22     		movs	r2, #31
 546 001a 0240     		ands	r2, r0
 547 001c D340     		lsrs	r3, r3, r2
 549:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)) &&
 548              		.loc 1 549 0 discriminator 1
 549 001e DB07     		lsls	r3, r3, #31
 550 0020 0DD5     		bpl	.L56
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 60


 551:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 551              		.loc 1 551 0
 552 0022 C200     		lsls	r2, r0, #3
 553 0024 121A     		subs	r2, r2, r0
 554 0026 D300     		lsls	r3, r2, #3
 555 0028 0A4A     		ldr	r2, .L58+4
 556 002a D318     		adds	r3, r2, r3
 557 002c 1B8B     		ldrh	r3, [r3, #24]
 550:Generated_Source\PSoC4/CapSense_Sensing.c ****         (sensorId < CapSense_GET_SENSOR_COUNT(widgetId)))
 558              		.loc 1 550 0
 559 002e 8B42     		cmp	r3, r1
 560 0030 07D8     		bhi	.L57
 558:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 561              		.loc 1 558 0
 562 0032 0124     		movs	r4, #1
 563 0034 06E0     		b	.L52
 564              	.L54:
 542:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 565              		.loc 1 542 0
 566 0036 1124     		movs	r4, #17
 567 0038 04E0     		b	.L52
 568              	.L55:
 558:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 569              		.loc 1 558 0
 570 003a 0124     		movs	r4, #1
 571 003c 02E0     		b	.L52
 572              	.L56:
 573 003e 0124     		movs	r4, #1
 574 0040 00E0     		b	.L52
 575              	.L57:
 554:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 576              		.loc 1 554 0
 577 0042 0024     		movs	r4, #0
 578              	.L52:
 579              	.LVL52:
 565:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 580              		.loc 1 565 0
 581 0044 002C     		cmp	r4, #0
 582 0046 01D1     		bne	.L53
 572:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 583              		.loc 1 572 0
 584 0048 FFF7FEFF 		bl	CapSense_CSXSetupWidgetExt
 585              	.LVL53:
 586              	.L53:
 594:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 587              		.loc 1 594 0
 588 004c 2000     		movs	r0, r4
 589              		@ sp needed
 590              	.LVL54:
 591 004e 10BD     		pop	{r4, pc}
 592              	.L59:
 593              		.align	2
 594              	.L58:
 595 0050 00000000 		.word	CapSense_dsRam
 596 0054 00000000 		.word	CapSense_dsFlash
 597              		.cfi_endproc
 598              	.LFE5:
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 61


 599              		.size	CapSense_SetupWidgetExt, .-CapSense_SetupWidgetExt
 600              		.section	.text.CapSense_ScanExt,"ax",%progbits
 601              		.align	2
 602              		.global	CapSense_ScanExt
 603              		.code	16
 604              		.thumb_func
 605              		.type	CapSense_ScanExt, %function
 606              	CapSense_ScanExt:
 607              	.LFB6:
 642:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 608              		.loc 1 642 0
 609              		.cfi_startproc
 610              		@ args = 0, pretend = 0, frame = 0
 611              		@ frame_needed = 0, uses_anonymous_args = 0
 612 0000 10B5     		push	{r4, lr}
 613              		.cfi_def_cfa_offset 8
 614              		.cfi_offset 4, -8
 615              		.cfi_offset 14, -4
 616              	.LVL55:
 645:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 617              		.loc 1 645 0
 618 0002 084B     		ldr	r3, .L66
 619 0004 DB68     		ldr	r3, [r3, #12]
 620 0006 DB03     		lsls	r3, r3, #15
 621 0008 07D4     		bmi	.L63
 652:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 622              		.loc 1 652 0
 623 000a 074B     		ldr	r3, .L66+4
 624 000c 1B78     		ldrb	r3, [r3]
 625 000e 022B     		cmp	r3, #2
 626 0010 05D1     		bne	.L65
 656:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 627              		.loc 1 656 0
 628 0012 FFF7FEFF 		bl	CapSense_CSXScanExt
 629              	.LVL56:
 643:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 630              		.loc 1 643 0
 631 0016 0020     		movs	r0, #0
 657:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 632              		.loc 1 657 0
 633 0018 03E0     		b	.L61
 634              	.L63:
 648:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 635              		.loc 1 648 0
 636 001a 1120     		movs	r0, #17
 637 001c 01E0     		b	.L61
 638              	.L65:
 670:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 639              		.loc 1 670 0
 640 001e 0120     		movs	r0, #1
 641 0020 4042     		rsbs	r0, r0, #0
 642              	.L61:
 643              	.LVL57:
 675:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 644              		.loc 1 675 0
 645              		@ sp needed
 646 0022 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 62


 647              	.L67:
 648              		.align	2
 649              	.L66:
 650 0024 00000000 		.word	CapSense_dsRam
 651 0028 00000000 		.word	.LANCHOR0
 652              		.cfi_endproc
 653              	.LFE6:
 654              		.size	CapSense_ScanExt, .-CapSense_ScanExt
 655              		.section	.text.CapSense_SetPinState,"ax",%progbits
 656              		.align	2
 657              		.global	CapSense_SetPinState
 658              		.code	16
 659              		.thumb_func
 660              		.type	CapSense_SetPinState, %function
 661              	CapSense_SetPinState:
 662              	.LFB8:
 841:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdNum;
 663              		.loc 1 841 0
 664              		.cfi_startproc
 665              		@ args = 0, pretend = 0, frame = 0
 666              		@ frame_needed = 0, uses_anonymous_args = 0
 667              	.LVL58:
 668 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 669              		.cfi_def_cfa_offset 24
 670              		.cfi_offset 3, -24
 671              		.cfi_offset 4, -20
 672              		.cfi_offset 5, -16
 673              		.cfi_offset 6, -12
 674              		.cfi_offset 7, -8
 675              		.cfi_offset 14, -4
 676 0002 1600     		movs	r6, r2
 866:Generated_Source\PSoC4/CapSense_Sensing.c ****         eltdNum = 1u;
 677              		.loc 1 866 0
 678 0004 C300     		lsls	r3, r0, #3
 679 0006 181A     		subs	r0, r3, r0
 680              	.LVL59:
 681 0008 C300     		lsls	r3, r0, #3
 682 000a 364A     		ldr	r2, .L76
 683              	.LVL60:
 684 000c 9C58     		ldr	r4, [r3, r2]
 685 000e CB00     		lsls	r3, r1, #3
 686 0010 591A     		subs	r1, r3, r1
 687              	.LVL61:
 688 0012 8B00     		lsls	r3, r1, #2
 689 0014 E418     		adds	r4, r4, r3
 690              	.LVL62:
 871:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 691              		.loc 1 871 0
 692 0016 0025     		movs	r5, #0
 693 0018 60E0     		b	.L69
 694              	.LVL63:
 695              	.L75:
 874:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_HSIOM_SEL_MASK << 
 696              		.loc 1 874 0
 697 001a FFF7FEFF 		bl	CyEnterCriticalSection
 698              	.LVL64:
 875:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << ioPtr->s
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 63


 699              		.loc 1 875 0
 700 001e 2168     		ldr	r1, [r4]
 701 0020 0B68     		ldr	r3, [r1]
 702 0022 277E     		ldrb	r7, [r4, #24]
 703 0024 0F22     		movs	r2, #15
 704 0026 BA40     		lsls	r2, r2, r7
 705 0028 9343     		bics	r3, r2
 706 002a 0B60     		str	r3, [r1]
 876:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 707              		.loc 1 876 0
 708 002c 6168     		ldr	r1, [r4, #4]
 709 002e 0B68     		ldr	r3, [r1]
 710 0030 A77E     		ldrb	r7, [r4, #26]
 711 0032 0722     		movs	r2, #7
 712 0034 BA40     		lsls	r2, r2, r7
 713 0036 9343     		bics	r3, r2
 714 0038 0B60     		str	r3, [r1]
 877:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 715              		.loc 1 877 0
 716 003a FFF7FEFF 		bl	CyExitCriticalSection
 717              	.LVL65:
 879:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 718              		.loc 1 879 0
 719 003e 012E     		cmp	r6, #1
 720 0040 19D0     		beq	.L71
 721 0042 002E     		cmp	r6, #0
 722 0044 04D0     		beq	.L72
 723 0046 042E     		cmp	r6, #4
 724 0048 21D0     		beq	.L73
 725 004a 052E     		cmp	r6, #5
 726 004c 32D0     		beq	.L74
 727 004e 43E0     		b	.L70
 728              	.L72:
 883:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_SNS_GROUND_CONNECT <<
 729              		.loc 1 883 0
 730 0050 FFF7FEFF 		bl	CyEnterCriticalSection
 731              	.LVL66:
 884:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 732              		.loc 1 884 0
 733 0054 6268     		ldr	r2, [r4, #4]
 734 0056 1168     		ldr	r1, [r2]
 735 0058 A77E     		ldrb	r7, [r4, #26]
 736 005a 0623     		movs	r3, #6
 737 005c BB40     		lsls	r3, r3, r7
 738 005e 0B43     		orrs	r3, r1
 739 0060 1360     		str	r3, [r2]
 885:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 740              		.loc 1 885 0
 741 0062 A168     		ldr	r1, [r4, #8]
 742 0064 0B68     		ldr	r3, [r1]
 743 0066 677E     		ldrb	r7, [r4, #25]
 744 0068 0122     		movs	r2, #1
 745 006a BA40     		lsls	r2, r2, r7
 746 006c 9343     		bics	r3, r2
 747 006e 0B60     		str	r3, [r1]
 886:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 748              		.loc 1 886 0
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 64


 749 0070 FFF7FEFF 		bl	CyExitCriticalSection
 750              	.LVL67:
 887:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 751              		.loc 1 887 0
 752 0074 30E0     		b	.L70
 753              	.L71:
 890:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 754              		.loc 1 890 0
 755 0076 FFF7FEFF 		bl	CyEnterCriticalSection
 756              	.LVL68:
 891:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 757              		.loc 1 891 0
 758 007a A168     		ldr	r1, [r4, #8]
 759 007c 0B68     		ldr	r3, [r1]
 760 007e 677E     		ldrb	r7, [r4, #25]
 761 0080 0122     		movs	r2, #1
 762 0082 BA40     		lsls	r2, r2, r7
 763 0084 9343     		bics	r3, r2
 764 0086 0B60     		str	r3, [r1]
 892:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 765              		.loc 1 892 0
 766 0088 FFF7FEFF 		bl	CyExitCriticalSection
 767              	.LVL69:
 893:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 768              		.loc 1 893 0
 769 008c 24E0     		b	.L70
 770              	.L73:
 914:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_SEL_C
 771              		.loc 1 914 0
 772 008e FFF7FEFF 		bl	CyEnterCriticalSection
 773              	.LVL70:
 915:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_GPIO_STRGDRV << i
 774              		.loc 1 915 0
 775 0092 2268     		ldr	r2, [r4]
 776 0094 1168     		ldr	r1, [r2]
 777 0096 277E     		ldrb	r7, [r4, #24]
 778 0098 0423     		movs	r3, #4
 779 009a BB40     		lsls	r3, r3, r7
 780 009c 0B43     		orrs	r3, r1
 781 009e 1360     		str	r3, [r2]
 916:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 782              		.loc 1 916 0
 783 00a0 6268     		ldr	r2, [r4, #4]
 784 00a2 1168     		ldr	r1, [r2]
 785 00a4 A77E     		ldrb	r7, [r4, #26]
 786 00a6 0623     		movs	r3, #6
 787 00a8 BB40     		lsls	r3, r3, r7
 788 00aa 0B43     		orrs	r3, r1
 789 00ac 1360     		str	r3, [r2]
 917:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 790              		.loc 1 917 0
 791 00ae FFF7FEFF 		bl	CyExitCriticalSection
 792              	.LVL71:
 918:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 793              		.loc 1 918 0
 794 00b2 11E0     		b	.L70
 795              	.L74:
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 65


 921:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_SEL_A
 796              		.loc 1 921 0
 797 00b4 FFF7FEFF 		bl	CyEnterCriticalSection
 798              	.LVL72:
 922:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << 
 799              		.loc 1 922 0
 800 00b8 2268     		ldr	r2, [r4]
 801 00ba 1168     		ldr	r1, [r2]
 802 00bc 277E     		ldrb	r7, [r4, #24]
 803 00be 0623     		movs	r3, #6
 804 00c0 BB40     		lsls	r3, r3, r7
 805 00c2 0B43     		orrs	r3, r1
 806 00c4 1360     		str	r3, [r2]
 923:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 807              		.loc 1 923 0
 808 00c6 6168     		ldr	r1, [r4, #4]
 809 00c8 0B68     		ldr	r3, [r1]
 810 00ca A77E     		ldrb	r7, [r4, #26]
 811 00cc 0722     		movs	r2, #7
 812 00ce BA40     		lsls	r2, r2, r7
 813 00d0 9343     		bics	r3, r2
 814 00d2 0B60     		str	r3, [r1]
 924:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 815              		.loc 1 924 0
 816 00d4 FFF7FEFF 		bl	CyExitCriticalSection
 817              	.LVL73:
 818              	.L70:
 933:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 819              		.loc 1 933 0 discriminator 2
 820 00d8 1C34     		adds	r4, r4, #28
 821              	.LVL74:
 871:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 822              		.loc 1 871 0 discriminator 2
 823 00da 0135     		adds	r5, r5, #1
 824              	.LVL75:
 825              	.L69:
 871:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 826              		.loc 1 871 0 is_stmt 0 discriminator 1
 827 00dc 002D     		cmp	r5, #0
 828 00de 9CD0     		beq	.L75
 935:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 829              		.loc 1 935 0 is_stmt 1
 830              		@ sp needed
 831              	.LVL76:
 832              	.LVL77:
 833              	.LVL78:
 834 00e0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 835              	.L77:
 836 00e2 C046     		.align	2
 837              	.L76:
 838 00e4 00000000 		.word	CapSense_dsFlash
 839              		.cfi_endproc
 840              	.LFE8:
 841              		.size	CapSense_SetPinState, .-CapSense_SetPinState
 842              		.section	.text.CapSense_SsSetAllIOsState,"ax",%progbits
 843              		.align	2
 844              		.global	CapSense_SsSetAllIOsState
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 66


 845              		.code	16
 846              		.thumb_func
 847              		.type	CapSense_SsSetAllIOsState, %function
 848              	CapSense_SsSetAllIOsState:
 849              	.LFB11:
1167:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8  interruptState;
 850              		.loc 1 1167 0
 851              		.cfi_startproc
 852              		@ args = 0, pretend = 0, frame = 0
 853              		@ frame_needed = 0, uses_anonymous_args = 0
 854              	.LVL79:
 855 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 856              		.cfi_def_cfa_offset 24
 857              		.cfi_offset 3, -24
 858              		.cfi_offset 4, -20
 859              		.cfi_offset 5, -16
 860              		.cfi_offset 6, -12
 861              		.cfi_offset 7, -8
 862              		.cfi_offset 14, -4
 863 0002 4F46     		mov	r7, r9
 864 0004 4646     		mov	r6, r8
 865 0006 C0B4     		push	{r6, r7}
 866              		.cfi_def_cfa_offset 32
 867              		.cfi_offset 8, -32
 868              		.cfi_offset 9, -28
1180:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 869              		.loc 1 1180 0
 870 0008 0128     		cmp	r0, #1
 871 000a 0BD0     		beq	.L84
 872 000c 0228     		cmp	r0, #2
 873 000e 04D0     		beq	.L81
1184:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 874              		.loc 1 1184 0
 875 0010 0023     		movs	r3, #0
 876 0012 9946     		mov	r9, r3
1183:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
 877              		.loc 1 1183 0
 878 0014 0633     		adds	r3, r3, #6
 879 0016 9846     		mov	r8, r3
 880 0018 07E0     		b	.L80
 881              	.L81:
 882              	.LVL80:
1192:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 883              		.loc 1 1192 0
 884 001a 0523     		movs	r3, #5
 885 001c 9946     		mov	r9, r3
1191:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_CSD_SHIELD;
 886              		.loc 1 1191 0
 887 001e 0023     		movs	r3, #0
 888 0020 9846     		mov	r8, r3
1193:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 889              		.loc 1 1193 0
 890 0022 02E0     		b	.L80
 891              	.LVL81:
 892              	.L84:
1188:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 893              		.loc 1 1188 0
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 67


 894 0024 0023     		movs	r3, #0
 895 0026 9946     		mov	r9, r3
1187:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
 896              		.loc 1 1187 0
 897 0028 9846     		mov	r8, r3
 898              	.L80:
 899              	.LVL82:
1201:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (loopIndex = 0u; loopIndex < CapSense_TOTAL_ELECTRODES; loopIndex++)
 900              		.loc 1 1201 0
 901 002a 144C     		ldr	r4, .L85
1202:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 902              		.loc 1 1202 0
 903 002c 0025     		movs	r5, #0
 904 002e 1FE0     		b	.L82
 905              	.LVL83:
 906              	.L83:
1204:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 907              		.loc 1 1204 0 discriminator 3
 908 0030 FFF7FEFF 		bl	CyEnterCriticalSection
 909              	.LVL84:
1206:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpHsiomRegValue &= ~(snsIoPtr->hsiomMask);
 910              		.loc 1 1206 0 discriminator 3
 911 0034 2268     		ldr	r2, [r4]
 912 0036 1368     		ldr	r3, [r2]
 913              	.LVL85:
1207:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
 914              		.loc 1 1207 0 discriminator 3
 915 0038 2169     		ldr	r1, [r4, #16]
 916 003a 8B43     		bics	r3, r1
 917              	.LVL86:
1208:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 918              		.loc 1 1208 0 discriminator 3
 919 003c 1360     		str	r3, [r2]
1210:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue &= ~(CapSense_GPIO_PC_MASK << snsIoPtr->shift);
 920              		.loc 1 1210 0 discriminator 3
 921 003e 6668     		ldr	r6, [r4, #4]
 922 0040 3268     		ldr	r2, [r6]
 923              	.LVL87:
1211:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue |=  (newPinPcVal << snsIoPtr->shift);
 924              		.loc 1 1211 0 discriminator 3
 925 0042 A77E     		ldrb	r7, [r4, #26]
 926 0044 0721     		movs	r1, #7
 927 0046 B940     		lsls	r1, r1, r7
 928 0048 8A43     		bics	r2, r1
 929              	.LVL88:
1212:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->pcPtr, tmpPcDrRegValue);
 930              		.loc 1 1212 0 discriminator 3
 931 004a 4146     		mov	r1, r8
 932 004c B940     		lsls	r1, r1, r7
 933 004e 0A43     		orrs	r2, r1
 934              	.LVL89:
1213:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 935              		.loc 1 1213 0 discriminator 3
 936 0050 3260     		str	r2, [r6]
1215:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
 937              		.loc 1 1215 0 discriminator 3
 938 0052 227E     		ldrb	r2, [r4, #24]
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 68


 939              	.LVL90:
 940 0054 4946     		mov	r1, r9
 941 0056 9140     		lsls	r1, r1, r2
 942 0058 0B43     		orrs	r3, r1
 943              	.LVL91:
1216:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 944              		.loc 1 1216 0 discriminator 3
 945 005a 2268     		ldr	r2, [r4]
 946 005c 1360     		str	r3, [r2]
 947              	.LVL92:
1218:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue &= ~(snsIoPtr->mask);
 948              		.loc 1 1218 0 discriminator 3
 949 005e A268     		ldr	r2, [r4, #8]
 950 0060 1368     		ldr	r3, [r2]
 951              	.LVL93:
1219:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->drPtr, tmpPcDrRegValue);
 952              		.loc 1 1219 0 discriminator 3
 953 0062 6169     		ldr	r1, [r4, #20]
 954 0064 8B43     		bics	r3, r1
 955              	.LVL94:
1220:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 956              		.loc 1 1220 0 discriminator 3
 957 0066 1360     		str	r3, [r2]
1222:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 958              		.loc 1 1222 0 discriminator 3
 959 0068 FFF7FEFF 		bl	CyExitCriticalSection
 960              	.LVL95:
1225:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 961              		.loc 1 1225 0 discriminator 3
 962 006c 1C34     		adds	r4, r4, #28
 963              	.LVL96:
1202:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 964              		.loc 1 1202 0 discriminator 3
 965 006e 0135     		adds	r5, r5, #1
 966              	.LVL97:
 967              	.L82:
1202:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 968              		.loc 1 1202 0 is_stmt 0 discriminator 1
 969 0070 0D2D     		cmp	r5, #13
 970 0072 DDD9     		bls	.L83
1238:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 971              		.loc 1 1238 0 is_stmt 1
 972              		@ sp needed
 973              	.LVL98:
 974              	.LVL99:
 975              	.LVL100:
 976              	.LVL101:
 977 0074 0CBC     		pop	{r2, r3}
 978 0076 9046     		mov	r8, r2
 979 0078 9946     		mov	r9, r3
 980 007a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 981              	.L86:
 982              		.align	2
 983              	.L85:
 984 007c 00000000 		.word	CapSense_ioList
 985              		.cfi_endproc
 986              	.LFE11:
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 69


 987              		.size	CapSense_SsSetAllIOsState, .-CapSense_SsSetAllIOsState
 988              		.section	.text.CapSense_SsPostAllWidgetsScan,"ax",%progbits
 989              		.align	2
 990              		.global	CapSense_SsPostAllWidgetsScan
 991              		.code	16
 992              		.thumb_func
 993              		.type	CapSense_SsPostAllWidgetsScan, %function
 994              	CapSense_SsPostAllWidgetsScan:
 995              	.LFB12:
1317:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 996              		.loc 1 1317 0
 997              		.cfi_startproc
 998              		@ args = 0, pretend = 0, frame = 0
 999              		@ frame_needed = 0, uses_anonymous_args = 0
 1000              		@ link register save eliminated.
1374:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1001              		.loc 1 1374 0
 1002              		@ sp needed
 1003 0000 7047     		bx	lr
 1004              		.cfi_endproc
 1005              	.LFE12:
 1006              		.size	CapSense_SsPostAllWidgetsScan, .-CapSense_SsPostAllWidgetsScan
 1007 0002 C046     		.section	.text.CapSense_SsIsrInitialize,"ax",%progbits
 1008              		.align	2
 1009              		.global	CapSense_SsIsrInitialize
 1010              		.code	16
 1011              		.thumb_func
 1012              		.type	CapSense_SsIsrInitialize, %function
 1013              	CapSense_SsIsrInitialize:
 1014              	.LFB13:
1394:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_ISR_StartEx(address);
 1015              		.loc 1 1394 0
 1016              		.cfi_startproc
 1017              		@ args = 0, pretend = 0, frame = 0
 1018              		@ frame_needed = 0, uses_anonymous_args = 0
 1019              	.LVL102:
 1020 0000 10B5     		push	{r4, lr}
 1021              		.cfi_def_cfa_offset 8
 1022              		.cfi_offset 4, -8
 1023              		.cfi_offset 14, -4
1395:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 1024              		.loc 1 1395 0
 1025 0002 FFF7FEFF 		bl	CapSense_ISR_StartEx
 1026              	.LVL103:
1396:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1027              		.loc 1 1396 0
 1028              		@ sp needed
 1029 0006 10BD     		pop	{r4, pc}
 1030              		.cfi_endproc
 1031              	.LFE13:
 1032              		.size	CapSense_SsIsrInitialize, .-CapSense_SsIsrInitialize
 1033              		.section	.text.CapSense_SsSetModClkClockDivider,"ax",%progbits
 1034              		.align	2
 1035              		.global	CapSense_SsSetModClkClockDivider
 1036              		.code	16
 1037              		.thumb_func
 1038              		.type	CapSense_SsSetModClkClockDivider, %function
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 70


 1039              	CapSense_SsSetModClkClockDivider:
 1040              	.LFB14:
1417:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
 1041              		.loc 1 1417 0
 1042              		.cfi_startproc
 1043              		@ args = 0, pretend = 0, frame = 0
 1044              		@ frame_needed = 0, uses_anonymous_args = 0
 1045              		@ link register save eliminated.
 1046              	.LVL104:
1420:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_ModClk__DIV_ID <<
 1047              		.loc 1 1420 0
 1048 0000 074A     		ldr	r2, .L91
 1049 0002 084B     		ldr	r3, .L91+4
 1050 0004 1A60     		str	r2, [r3]
1430:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1051              		.loc 1 1430 0
 1052 0006 0138     		subs	r0, r0, #1
 1053              	.LVL105:
 1054 0008 0002     		lsls	r0, r0, #8
 1055              	.LVL106:
 1056 000a 074B     		ldr	r3, .L91+8
 1057 000c 1860     		str	r0, [r3]
 1058              	.L90:
1433:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1059              		.loc 1 1433 0 discriminator 1
 1060 000e 054B     		ldr	r3, .L91+4
 1061 0010 1B68     		ldr	r3, [r3]
 1062 0012 002B     		cmp	r3, #0
 1063 0014 FBDB     		blt	.L90
1439:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(((uint32)CapSense_ModClk__DIV_ID << CapSense_MODCLK_CMD_DIV_SHIFT) |
 1064              		.loc 1 1439 0
 1065 0016 054A     		ldr	r2, .L91+12
 1066 0018 024B     		ldr	r3, .L91+4
 1067 001a 1A60     		str	r2, [r3]
1464:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1068              		.loc 1 1464 0
 1069              		@ sp needed
 1070 001c 7047     		bx	lr
 1071              	.L92:
 1072 001e C046     		.align	2
 1073              	.L91:
 1074 0020 40000040 		.word	1073741888
 1075 0024 00000140 		.word	1073807360
 1076 0028 00030140 		.word	1073808128
 1077 002c 40FF0080 		.word	-2147418304
 1078              		.cfi_endproc
 1079              	.LFE14:
 1080              		.size	CapSense_SsSetModClkClockDivider, .-CapSense_SsSetModClkClockDivider
 1081              		.section	.text.CapSense_SsSetSnsClockDivider,"ax",%progbits
 1082              		.align	2
 1083              		.global	CapSense_SsSetSnsClockDivider
 1084              		.code	16
 1085              		.thumb_func
 1086              		.type	CapSense_SsSetSnsClockDivider, %function
 1087              	CapSense_SsSetSnsClockDivider:
 1088              	.LFB15:
1485:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 71


 1089              		.loc 1 1485 0
 1090              		.cfi_startproc
 1091              		@ args = 0, pretend = 0, frame = 0
 1092              		@ frame_needed = 0, uses_anonymous_args = 0
 1093              		@ link register save eliminated.
 1094              	.LVL107:
1494:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue &= (uint32)(~CapSense_SENSE_PERIOD_SENSE_DIV_MASK);
 1095              		.loc 1 1494 0
 1096 0000 034A     		ldr	r2, .L94
 1097 0002 1368     		ldr	r3, [r2]
 1098              	.LVL108:
1495:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= snsClk - 1u;
 1099              		.loc 1 1495 0
 1100 0004 1B0B     		lsrs	r3, r3, #12
 1101              	.LVL109:
 1102 0006 1B03     		lsls	r3, r3, #12
 1103              	.LVL110:
1496:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, newRegValue);
 1104              		.loc 1 1496 0
 1105 0008 0138     		subs	r0, r0, #1
 1106              	.LVL111:
 1107 000a 1843     		orrs	r0, r3
 1108              	.LVL112:
1497:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
 1109              		.loc 1 1497 0
 1110 000c 1060     		str	r0, [r2]
1546:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1111              		.loc 1 1546 0
 1112              		@ sp needed
 1113 000e 7047     		bx	lr
 1114              	.L95:
 1115              		.align	2
 1116              	.L94:
 1117 0010 00020C40 		.word	1074528768
 1118              		.cfi_endproc
 1119              	.LFE15:
 1120              		.size	CapSense_SsSetSnsClockDivider, .-CapSense_SsSetSnsClockDivider
 1121              		.section	.text.CapSense_SsSetClockDividers,"ax",%progbits
 1122              		.align	2
 1123              		.global	CapSense_SsSetClockDividers
 1124              		.code	16
 1125              		.thumb_func
 1126              		.type	CapSense_SsSetClockDividers, %function
 1127              	CapSense_SsSetClockDividers:
 1128              	.LFB16:
1569:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Mod clock */
 1129              		.loc 1 1569 0
 1130              		.cfi_startproc
 1131              		@ args = 0, pretend = 0, frame = 0
 1132              		@ frame_needed = 0, uses_anonymous_args = 0
 1133              	.LVL113:
 1134 0000 10B5     		push	{r4, lr}
 1135              		.cfi_def_cfa_offset 8
 1136              		.cfi_offset 4, -8
 1137              		.cfi_offset 14, -4
 1138 0002 0400     		movs	r4, r0
1571:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 72


 1139              		.loc 1 1571 0
 1140 0004 0800     		movs	r0, r1
 1141              	.LVL114:
 1142 0006 FFF7FEFF 		bl	CapSense_SsSetModClkClockDivider
 1143              	.LVL115:
1574:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 1144              		.loc 1 1574 0
 1145 000a 2000     		movs	r0, r4
 1146 000c FFF7FEFF 		bl	CapSense_SsSetSnsClockDivider
 1147              	.LVL116:
1575:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1148              		.loc 1 1575 0
 1149              		@ sp needed
 1150              	.LVL117:
 1151 0010 10BD     		pop	{r4, pc}
 1152              		.cfi_endproc
 1153              	.LFE16:
 1154              		.size	CapSense_SsSetClockDividers, .-CapSense_SsSetClockDividers
 1155 0012 C046     		.section	.text.CapSense_CalibrateWidget,"ax",%progbits
 1156              		.align	2
 1157              		.global	CapSense_CalibrateWidget
 1158              		.code	16
 1159              		.thumb_func
 1160              		.type	CapSense_CalibrateWidget, %function
 1161              	CapSense_CalibrateWidget:
 1162              	.LFB17:
1621:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 1163              		.loc 1 1621 0
 1164              		.cfi_startproc
 1165              		@ args = 0, pretend = 0, frame = 0
 1166              		@ frame_needed = 0, uses_anonymous_args = 0
 1167              	.LVL118:
 1168 0000 10B5     		push	{r4, lr}
 1169              		.cfi_def_cfa_offset 8
 1170              		.cfi_offset 4, -8
 1171              		.cfi_offset 14, -4
 1172 0002 031E     		subs	r3, r0, #0
 1173              	.LVL119:
1626:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 1174              		.loc 1 1626 0
 1175 0004 01D1     		bne	.L100
1622:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1176              		.loc 1 1622 0
 1177 0006 0020     		movs	r0, #0
 1178              	.LVL120:
 1179 0008 00E0     		b	.L98
 1180              	.LVL121:
 1181              	.L100:
1628:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 1182              		.loc 1 1628 0
 1183 000a 0120     		movs	r0, #1
 1184              	.LVL122:
 1185              	.L98:
1646:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 1186              		.loc 1 1646 0
 1187 000c 0028     		cmp	r0, #0
 1188 000e 03D1     		bne	.L99
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 73


1689:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1189              		.loc 1 1689 0
 1190 0010 2821     		movs	r1, #40
 1191 0012 1800     		movs	r0, r3
 1192              	.LVL123:
 1193 0014 FFF7FEFF 		bl	CapSense_CSXCalibrateWidget
 1194              	.LVL124:
 1195              	.L99:
1701:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1196              		.loc 1 1701 0
 1197              		@ sp needed
 1198 0018 10BD     		pop	{r4, pc}
 1199              		.cfi_endproc
 1200              	.LFE17:
 1201              		.size	CapSense_CalibrateWidget, .-CapSense_CalibrateWidget
 1202 001a C046     		.section	.text.CapSense_CalibrateAllWidgets,"ax",%progbits
 1203              		.align	2
 1204              		.global	CapSense_CalibrateAllWidgets
 1205              		.code	16
 1206              		.thumb_func
 1207              		.type	CapSense_CalibrateAllWidgets, %function
 1208              	CapSense_CalibrateAllWidgets:
 1209              	.LFB18:
1738:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 1210              		.loc 1 1738 0
 1211              		.cfi_startproc
 1212              		@ args = 0, pretend = 0, frame = 0
 1213              		@ frame_needed = 0, uses_anonymous_args = 0
 1214 0000 70B5     		push	{r4, r5, r6, lr}
 1215              		.cfi_def_cfa_offset 16
 1216              		.cfi_offset 4, -16
 1217              		.cfi_offset 5, -12
 1218              		.cfi_offset 6, -8
 1219              		.cfi_offset 14, -4
 1220              	.LVL125:
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1221              		.loc 1 1742 0
 1222 0002 0024     		movs	r4, #0
1739:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
 1223              		.loc 1 1739 0
 1224 0004 0025     		movs	r5, #0
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1225              		.loc 1 1742 0
 1226 0006 04E0     		b	.L102
 1227              	.LVL126:
 1228              	.L103:
1744:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1229              		.loc 1 1744 0 discriminator 3
 1230 0008 2000     		movs	r0, r4
 1231 000a FFF7FEFF 		bl	CapSense_CalibrateWidget
 1232              	.LVL127:
 1233 000e 0543     		orrs	r5, r0
 1234              	.LVL128:
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1235              		.loc 1 1742 0 discriminator 3
 1236 0010 0134     		adds	r4, r4, #1
 1237              	.LVL129:
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 74


 1238              	.L102:
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1239              		.loc 1 1742 0 is_stmt 0 discriminator 1
 1240 0012 002C     		cmp	r4, #0
 1241 0014 F8D0     		beq	.L103
1748:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ANYMODE_AUTOCAL) */
 1242              		.loc 1 1748 0 is_stmt 1
 1243 0016 2800     		movs	r0, r5
 1244              		@ sp needed
 1245              	.LVL130:
 1246              	.LVL131:
 1247 0018 70BD     		pop	{r4, r5, r6, pc}
 1248              		.cfi_endproc
 1249              	.LFE18:
 1250              		.size	CapSense_CalibrateAllWidgets, .-CapSense_CalibrateAllWidgets
 1251 001a C046     		.section	.text.CapSense_SsInitializeSourceSenseClk,"ax",%progbits
 1252              		.align	2
 1253              		.global	CapSense_SsInitializeSourceSenseClk
 1254              		.code	16
 1255              		.thumb_func
 1256              		.type	CapSense_SsInitializeSourceSenseClk, %function
 1257              	CapSense_SsInitializeSourceSenseClk:
 1258              	.LFB19:
2405:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
 1259              		.loc 1 2405 0
 1260              		.cfi_startproc
 1261              		@ args = 0, pretend = 0, frame = 0
 1262              		@ frame_needed = 0, uses_anonymous_args = 0
 1263 0000 10B5     		push	{r4, lr}
 1264              		.cfi_def_cfa_offset 8
 1265              		.cfi_offset 4, -8
 1266              		.cfi_offset 14, -4
 1267              	.LVL132:
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1268              		.loc 1 2409 0
 1269 0002 0024     		movs	r4, #0
 1270 0004 09E0     		b	.L105
 1271              	.LVL133:
 1272              	.L106:
2411:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1273              		.loc 1 2411 0
 1274 0006 E200     		lsls	r2, r4, #3
 1275 0008 121B     		subs	r2, r2, r4
 1276 000a D300     		lsls	r3, r2, #3
 1277 000c 044A     		ldr	r2, .L107
 1278 000e D318     		adds	r3, r2, r3
 1279 0010 5968     		ldr	r1, [r3, #4]
 1280              	.LVL134:
2422:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 1281              		.loc 1 2422 0
 1282 0012 2000     		movs	r0, r4
 1283 0014 FFF7FEFF 		bl	CapSense_SsSetWidgetTxClkSrc
 1284              	.LVL135:
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1285              		.loc 1 2409 0
 1286 0018 0134     		adds	r4, r4, #1
 1287              	.LVL136:
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 75


 1288              	.L105:
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1289              		.loc 1 2409 0 is_stmt 0 discriminator 1
 1290 001a 002C     		cmp	r4, #0
 1291 001c F3D0     		beq	.L106
2432:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || \
 1292              		.loc 1 2432 0 is_stmt 1
 1293              		@ sp needed
 1294              	.LVL137:
 1295 001e 10BD     		pop	{r4, pc}
 1296              	.L108:
 1297              		.align	2
 1298              	.L107:
 1299 0020 00000000 		.word	CapSense_dsFlash
 1300              		.cfi_endproc
 1301              	.LFE19:
 1302              		.size	CapSense_SsInitializeSourceSenseClk, .-CapSense_SsInitializeSourceSenseClk
 1303              		.section	.text.CapSense_DischargeExtCapacitors,"ax",%progbits
 1304              		.align	2
 1305              		.global	CapSense_DischargeExtCapacitors
 1306              		.code	16
 1307              		.thumb_func
 1308              		.type	CapSense_DischargeExtCapacitors, %function
 1309              	CapSense_DischargeExtCapacitors:
 1310              	.LFB23:
2758:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2759:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (((CapSense_ENABLE == CapSense_CSX_EN) && \
2760:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2761:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2) && \
2762:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)) ||\
2763:Generated_Source\PSoC4/CapSense_Sensing.c ****           ((CapSense_ENABLE == CapSense_CSD_EN) && \
2764:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2) && \
2765:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))) */
2766:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2767:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2768:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
2769:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2770:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2771:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2772:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsCSDGetColSnsClkDivider
2773:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2774:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2775:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2776:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function gets the Sense Clock Divider value for one-dimension widgets
2777:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and Column Sense Clock divider value for two-dimension widgets.
2778:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2779:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2780:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function gets the Sense Clock Divider value based on the Component
2781:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  configuration. The function is applicable for one-dimension widgets and for
2782:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  two-dimension widgets.
2783:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2784:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
2785:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2786:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2787:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
2788:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the Sense Clock Divider value for one-dimension widgets
2789:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and the Column Sense Clock divider value for two-dimension widgets.
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 76


2790:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2791:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2792:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 CapSense_SsCSDGetColSnsClkDivider(uint32 widgetId)
2793:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2794:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 retVal;
2795:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2796:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Get sense divider based on configuration */
2797:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE != CapSense_CSD_COMMON_SNS_CLK_EN)
2798:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2799:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2800:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
2801:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2802:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2803:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = (uint32)(ptrWdgt->snsClk);
2804:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2805:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = (uint32)CapSense_dsRam.snsCsdClk;
2806:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2807:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)widgetId; /* This parameter is unused in such configurations */
2808:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2809:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2810:Generated_Source\PSoC4/CapSense_Sensing.c ****         return (retVal);
2811:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2812:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2813:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2814:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2815:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2816:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsCSDGetRowSnsClkDivider
2817:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2818:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2819:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2820:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function gets the Sense Clock Divider value for one-dimension widgets
2821:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  and the Column Sense Clock divider value for two-dimension widgets.
2822:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2823:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2824:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function gets the Sense Clock Divider value based on the Component
2825:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  configuration. The function is applicable for one-dimension widgets and for
2826:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  two-dimension widgets.
2827:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2828:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \param
2829:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  widgetId Specifies the ID of the widget.
2830:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2831:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \return
2832:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Returns the sense clock divider value for one-dimension widgets
2833:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  and column sense clock divider value for two-dimension widgets.
2834:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2835:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2836:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 CapSense_SsCSDGetRowSnsClkDivider(uint32 widgetId)
2837:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2838:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 retVal;
2839:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2840:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Get sense divider based on configuration */
2841:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE != CapSense_CSD_COMMON_SNS_CLK_EN)
2842:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2843:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2844:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
2845:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2846:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 77


2847:Generated_Source\PSoC4/CapSense_Sensing.c ****                 retVal = ptrWdgt->rowSnsClk;
2848:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2849:Generated_Source\PSoC4/CapSense_Sensing.c ****                 retVal = (uint32)CapSense_dsRam.snsCsdClk;
2850:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2851:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)widgetId; /* This parameter is unused in such configurations */
2852:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2853:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2854:Generated_Source\PSoC4/CapSense_Sensing.c ****             return (retVal);
2855:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2856:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2857:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2858:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2859:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2860:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2861:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2862:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsCSDCalcPrsSize
2863:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2864:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2865:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2866:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  The function finds PRS polynomial size in the Auto mode.
2867:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2868:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2869:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  The PRS polynomial size in the Auto mode is found based on the following
2870:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  requirements:
2871:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  - at least one full spread spectrum polynomial should pass during scan time.
2872:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2873:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \param
2874:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  snsClkDivider The divider value for the sense clock.
2875:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  resolution The widget resolution.
2876:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2877:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \return prsSize PRS value for SENSE_PERIOD register.
2878:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2879:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2880:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 CapSense_SsCSDCalcPrsSize(uint32 snsClkDivider, uint32 resolution)
2881:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2882:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 prsSize;
2883:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 modClkDivider = 1u;
2884:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2885:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE != CapSense_CSDV2)
2886:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if(CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
2887:Generated_Source\PSoC4/CapSense_Sensing.c ****                     modClkDivider = (uint32)CapSense_dsRam.modCsdClk;
2888:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
2889:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2890:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /*
2891:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * This operation is needed for Third-generation HW Block
2892:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * based devices to take into account DIV-2 flip-flop.
2893:Generated_Source\PSoC4/CapSense_Sensing.c ****                 */
2894:Generated_Source\PSoC4/CapSense_Sensing.c ****                 snsClkDivider <<= 1uL;
2895:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
2896:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2897:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((snsClkDivider * CapSense_PRS_LENGTH_12_BITS) <= (modClkDivider * ((0x00000001Lu <<
2898:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2899:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set PRS12 mode */
2900:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_PRS_12_CONFIG;
2901:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2902:Generated_Source\PSoC4/CapSense_Sensing.c ****             else if ((snsClkDivider * CapSense_PRS_LENGTH_8_BITS) <= (modClkDivider * ((0x00000001L
2903:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 78


2904:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set PRS8 mode */
2905:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_PRS_8_CONFIG;
2906:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2907:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
2908:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2909:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set Direct clock mode */
2910:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_CLK_SOURCE_DIRECT;
2911:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2912:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2913:Generated_Source\PSoC4/CapSense_Sensing.c ****             return (uint8)prsSize;
2914:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2915:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2916:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2917:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2918:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2919:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
2920:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2921:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_DischargeExtCapacitors
2922:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2923:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2924:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2925:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The internal function discharge available external capacitors.
2926:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2927:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2928:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function discharge available external capacitors by connection them
2929:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  to GND using STRONG GPIO drive mode. Additionaly, the function disconnects
2930:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the capacitors from analog mux buses if connected.
2931:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Note: the function does not restore the connection to analog mux busses
2932:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and supposes that all the capacitors belong to a single device port.
2933:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2934:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param
2935:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  dischargeTime The discharge time in us.
2936:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2937:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2938:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_DischargeExtCapacitors(uint32 dischargeTime)
2939:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1311              		.loc 1 2939 0
 1312              		.cfi_startproc
 1313              		@ args = 0, pretend = 0, frame = 8
 1314              		@ frame_needed = 0, uses_anonymous_args = 0
 1315              	.LVL138:
 1316 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1317              		.cfi_def_cfa_offset 20
 1318              		.cfi_offset 4, -20
 1319              		.cfi_offset 5, -16
 1320              		.cfi_offset 6, -12
 1321              		.cfi_offset 7, -8
 1322              		.cfi_offset 14, -4
 1323 0002 5F46     		mov	r7, fp
 1324 0004 5646     		mov	r6, r10
 1325 0006 4D46     		mov	r5, r9
 1326 0008 4446     		mov	r4, r8
 1327 000a F0B4     		push	{r4, r5, r6, r7}
 1328              		.cfi_def_cfa_offset 36
 1329              		.cfi_offset 8, -36
 1330              		.cfi_offset 9, -32
 1331              		.cfi_offset 10, -28
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 79


 1332              		.cfi_offset 11, -24
 1333 000c 83B0     		sub	sp, sp, #12
 1334              		.cfi_def_cfa_offset 48
 1335 000e 0190     		str	r0, [sp, #4]
2940:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 hsiomReg;
2941:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 drReg;
2942:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 pcReg;
2943:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
2944:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8  interruptState;
2945:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2946:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Store register state */
2947:Generated_Source\PSoC4/CapSense_Sensing.c ****         hsiomReg = CY_GET_REG32(CapSense_EXT_CAP_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MASK;
 1336              		.loc 1 2947 0
 1337 0010 2B4E     		ldr	r6, .L110
 1338 0012 3468     		ldr	r4, [r6]
 1339 0014 FF23     		movs	r3, #255
 1340 0016 1B02     		lsls	r3, r3, #8
 1341 0018 1C40     		ands	r4, r3
 1342 001a 0094     		str	r4, [sp]
 1343              	.LVL139:
2948:Generated_Source\PSoC4/CapSense_Sensing.c ****         drReg = CY_GET_REG32(CapSense_EXT_CAP_DR_PTR) & CapSense_EXT_CAP_DR_MASK;
 1344              		.loc 1 2948 0
 1345 001c 294F     		ldr	r7, .L110+4
 1346 001e 3B68     		ldr	r3, [r7]
 1347 0020 0C22     		movs	r2, #12
 1348 0022 9246     		mov	r10, r2
 1349 0024 1A40     		ands	r2, r3
 1350 0026 9146     		mov	r9, r2
 1351              	.LVL140:
2949:Generated_Source\PSoC4/CapSense_Sensing.c ****         pcReg = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR) & CapSense_EXT_CAP_PC_MASK;
 1352              		.loc 1 2949 0
 1353 0028 274C     		ldr	r4, .L110+8
 1354              	.LVL141:
 1355 002a 2568     		ldr	r5, [r4]
 1356 002c FC23     		movs	r3, #252
 1357 002e 1B01     		lsls	r3, r3, #4
 1358 0030 1D40     		ands	r5, r3
 1359 0032 AB46     		mov	fp, r5
 1360              	.LVL142:
2950:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2951:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Ext Cap from AMUXBUS-A using HSIOM registers */
2952:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1361              		.loc 1 2952 0
 1362 0034 FFF7FEFF 		bl	CyEnterCriticalSection
 1363              	.LVL143:
2953:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_HSIOM_PTR);
 1364              		.loc 1 2953 0
 1365 0038 3368     		ldr	r3, [r6]
 1366              	.LVL144:
2954:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_HSIOM_MASK);
 1367              		.loc 1 2954 0
 1368 003a 244A     		ldr	r2, .L110+12
 1369 003c 9046     		mov	r8, r2
 1370 003e 1340     		ands	r3, r2
 1371              	.LVL145:
2955:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_HSIOM_PTR, newRegValue);
 1372              		.loc 1 2955 0
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 80


 1373 0040 3360     		str	r3, [r6]
 1374              	.LVL146:
2956:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1375              		.loc 1 2956 0
 1376 0042 FFF7FEFF 		bl	CyExitCriticalSection
 1377              	.LVL147:
2957:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2958:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set output port register to 0 to connect to GND */
2959:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1378              		.loc 1 2959 0
 1379 0046 FFF7FEFF 		bl	CyEnterCriticalSection
 1380              	.LVL148:
2960:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_DR_PTR);
 1381              		.loc 1 2960 0
 1382 004a 3B68     		ldr	r3, [r7]
 1383              	.LVL149:
2961:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_DR_MASK);
 1384              		.loc 1 2961 0
 1385 004c 5246     		mov	r2, r10
 1386 004e 9343     		bics	r3, r2
 1387              	.LVL150:
2962:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_DR_PTR, newRegValue);
 1388              		.loc 1 2962 0
 1389 0050 3B60     		str	r3, [r7]
2963:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1390              		.loc 1 2963 0
 1391 0052 FFF7FEFF 		bl	CyExitCriticalSection
 1392              	.LVL151:
2964:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2965:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set port configuration register (drive mode) in STRONG mode */
2966:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1393              		.loc 1 2966 0
 1394 0056 FFF7FEFF 		bl	CyEnterCriticalSection
 1395              	.LVL152:
2967:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR);
 1396              		.loc 1 2967 0
 1397 005a 2368     		ldr	r3, [r4]
 1398              	.LVL153:
2968:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_EXT_CAP_PC_MASK));
 1399              		.loc 1 2968 0
 1400 005c 1C4D     		ldr	r5, .L110+16
 1401              	.LVL154:
 1402 005e 2B40     		ands	r3, r5
 1403              	.LVL155:
2969:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= (CapSense_EXT_CAP_PC_STRONG_CFG);
 1404              		.loc 1 2969 0
 1405 0060 D822     		movs	r2, #216
 1406 0062 1201     		lsls	r2, r2, #4
 1407 0064 1343     		orrs	r3, r2
 1408              	.LVL156:
2970:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_PC_PTR, newRegValue);
 1409              		.loc 1 2970 0
 1410 0066 2360     		str	r3, [r4]
2971:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1411              		.loc 1 2971 0
 1412 0068 FFF7FEFF 		bl	CyExitCriticalSection
 1413              	.LVL157:
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 81


2972:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2973:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Delay to discharge external capacitors */
2974:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyDelayUs((uint16)dischargeTime);
 1414              		.loc 1 2974 0
 1415 006c 6B46     		mov	r3, sp
 1416 006e 9888     		ldrh	r0, [r3, #4]
 1417 0070 FFF7FEFF 		bl	CyDelayUs
 1418              	.LVL158:
2975:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2976:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Restore previous register values */
2977:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1419              		.loc 1 2977 0
 1420 0074 FFF7FEFF 		bl	CyEnterCriticalSection
 1421              	.LVL159:
2978:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR);
 1422              		.loc 1 2978 0
 1423 0078 2368     		ldr	r3, [r4]
 1424              	.LVL160:
2979:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_EXT_CAP_PC_MASK));
 1425              		.loc 1 2979 0
 1426 007a 1D40     		ands	r5, r3
 1427              	.LVL161:
2980:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= pcReg;
 1428              		.loc 1 2980 0
 1429 007c 5A46     		mov	r2, fp
 1430 007e 1543     		orrs	r5, r2
 1431              	.LVL162:
2981:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_PC_PTR, newRegValue);
 1432              		.loc 1 2981 0
 1433 0080 2560     		str	r5, [r4]
2982:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1434              		.loc 1 2982 0
 1435 0082 FFF7FEFF 		bl	CyExitCriticalSection
 1436              	.LVL163:
2983:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2984:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1437              		.loc 1 2984 0
 1438 0086 FFF7FEFF 		bl	CyEnterCriticalSection
 1439              	.LVL164:
2985:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_DR_PTR);
 1440              		.loc 1 2985 0
 1441 008a 3B68     		ldr	r3, [r7]
 1442              	.LVL165:
2986:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_DR_MASK);
 1443              		.loc 1 2986 0
 1444 008c 5246     		mov	r2, r10
 1445 008e 9343     		bics	r3, r2
 1446              	.LVL166:
2987:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= drReg;
 1447              		.loc 1 2987 0
 1448 0090 4A46     		mov	r2, r9
 1449 0092 1343     		orrs	r3, r2
 1450              	.LVL167:
2988:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_DR_PTR, newRegValue);
 1451              		.loc 1 2988 0
 1452 0094 3B60     		str	r3, [r7]
2989:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 82


 1453              		.loc 1 2989 0
 1454 0096 FFF7FEFF 		bl	CyExitCriticalSection
 1455              	.LVL168:
2990:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2991:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1456              		.loc 1 2991 0
 1457 009a FFF7FEFF 		bl	CyEnterCriticalSection
 1458              	.LVL169:
2992:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_HSIOM_PTR);
 1459              		.loc 1 2992 0
 1460 009e 3368     		ldr	r3, [r6]
 1461              	.LVL170:
2993:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_HSIOM_MASK);
 1462              		.loc 1 2993 0
 1463 00a0 4246     		mov	r2, r8
 1464 00a2 1A40     		ands	r2, r3
 1465 00a4 1400     		movs	r4, r2
 1466              	.LVL171:
2994:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= hsiomReg;
 1467              		.loc 1 2994 0
 1468 00a6 009B     		ldr	r3, [sp]
 1469 00a8 1C43     		orrs	r4, r3
 1470              	.LVL172:
2995:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_HSIOM_PTR, newRegValue);
 1471              		.loc 1 2995 0
 1472 00aa 3460     		str	r4, [r6]
2996:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1473              		.loc 1 2996 0
 1474 00ac FFF7FEFF 		bl	CyExitCriticalSection
 1475              	.LVL173:
2997:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1476              		.loc 1 2997 0
 1477 00b0 03B0     		add	sp, sp, #12
 1478              		@ sp needed
 1479              	.LVL174:
 1480              	.LVL175:
 1481              	.LVL176:
 1482 00b2 3CBC     		pop	{r2, r3, r4, r5}
 1483 00b4 9046     		mov	r8, r2
 1484 00b6 9946     		mov	r9, r3
 1485 00b8 A246     		mov	r10, r4
 1486 00ba AB46     		mov	fp, r5
 1487 00bc F0BD     		pop	{r4, r5, r6, r7, pc}
 1488              	.L111:
 1489 00be C046     		.align	2
 1490              	.L110:
 1491 00c0 00040240 		.word	1073873920
 1492 00c4 00040440 		.word	1074004992
 1493 00c8 08040440 		.word	1074005000
 1494 00cc FF00FFFF 		.word	-65281
 1495 00d0 3FF0FFFF 		.word	-4033
 1496              		.cfi_endproc
 1497              	.LFE23:
 1498              		.size	CapSense_DischargeExtCapacitors, .-CapSense_DischargeExtCapacitors
 1499              		.section	.text.CapSense_SetInactiveElectrodeState,"ax",%progbits
 1500              		.align	2
 1501              		.global	CapSense_SetInactiveElectrodeState
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 83


 1502              		.code	16
 1503              		.thumb_func
 1504              		.type	CapSense_SetInactiveElectrodeState, %function
 1505              	CapSense_SetInactiveElectrodeState:
 1506              	.LFB24:
2998:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2999:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
3000:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3001:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3002:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV1)
3003:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
3004:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_DischargeExtCapacitors
3005:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
3006:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3007:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
3008:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The internal function discharge available external capacitors.
3009:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3010:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
3011:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function discharge available external capacitors by connection them
3012:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  to GND using STRONG GPIO drive mode. Additionaly, the function disconnects
3013:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the capacitors from analog mux buses if connected.
3014:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Note: the function does not restore the connection to analog mux busses
3015:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and supposes that all the capacitors belong to a single device port.
3016:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3017:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param
3018:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  dischargeTime The discharge time in us.
3019:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3020:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
3021:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_DischargeExtCapacitors(uint32 dischargeTime)
3022:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
3023:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Store the pin configuration, the CMOD capacitor is connected to. */
3024:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
3025:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cmodHsiom = CY_GET_REG32(CapSense_CMOD_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MASK_
3026:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cmodDr = CY_GET_REG32(CapSense_CMOD_DR_PTR) & CapSense_EXT_CAP_DR_MASK_CMOD;
3027:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cmodPc = CY_GET_REG32(CapSense_CMOD_PC_PTR) & CapSense_EXT_CAP_PC_MASK_CMOD;
3028:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3029:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Store the pin configuration, the CSH capacitor is connected to. */
3030:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&\
3031:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
3032:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 cshHsiom = CY_GET_REG32(CapSense_CSH_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MAS
3033:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 cshDr = CY_GET_REG32(CapSense_CSH_DR_PTR) & CapSense_EXT_CAP_DR_MASK_CSH;
3034:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 cshPc = CY_GET_REG32(CapSense_CSH_PC_PTR) & CapSense_EXT_CAP_PC_MASK_CSH;
3035:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
3036:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3037:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3038:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
3039:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Store the pin configuration, the CintA capacitor is connected to. */
3040:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintAHsiom = CY_GET_REG32(CapSense_CintA_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MAS
3041:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintADr = CY_GET_REG32(CapSense_CintA_DR_PTR) & CapSense_EXT_CAP_DR_MASK_CINTA;
3042:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintAPc = CY_GET_REG32(CapSense_CintA_PC_PTR) & CapSense_EXT_CAP_PC_MASK_CINTA;
3043:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3044:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Store the pin configuration, the CintB capacitor is connected to. */
3045:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintBHsiom = CY_GET_REG32(CapSense_CintB_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MAS
3046:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintBDr = CY_GET_REG32(CapSense_CintB_DR_PTR) & CapSense_EXT_CAP_DR_MASK_CINTB;
3047:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintBPc = CY_GET_REG32(CapSense_CintB_PC_PTR) & CapSense_EXT_CAP_PC_MASK_CINTB;
3048:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3049:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 84


3050:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
3051:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect the CMOD capacitor from the AMUXBUS and connect it to GND. */
3052:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_HSIOM_PTR, CapSense_EXT_CAP_HSIOM_MASK_CMOD,
3053:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_HSIOM_SEL_GPIO);
3054:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_DR_PTR, CapSense_EXT_CAP_DR_MASK_CMOD, 0u);
3055:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_PC_PTR, CapSense_EXT_CAP_PC_MASK_CMOD,
3056:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_STRONG_CFG_CMOD);
3057:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3058:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&\
3059:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
3060:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Disconnect the CSH capacitor from the AMUXBUS and connect it to GND. */
3061:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_HSIOM_PTR, CapSense_EXT_CAP_HSIOM_MASK_CSH,
3062:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_HSIOM_SEL_GPIO);
3063:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_DR_PTR, CapSense_EXT_CAP_DR_MASK_CSH, 0u);
3064:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_PC_PTR, CapSense_EXT_CAP_PC_MASK_CSH,
3065:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_EXT_CAP_PC_STRONG_CFG_CSH);
3066:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
3067:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3068:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3069:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
3070:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect the CintA capacitor from the AMUXBUS and connect it to GND. */
3071:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_HSIOM_PTR, CapSense_EXT_CAP_HSIOM_MASK_CINTA,
3072:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_HSIOM_SEL_GPIO);
3073:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_DR_PTR, CapSense_EXT_CAP_DR_MASK_CINTA, 0u);
3074:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_PC_PTR, CapSense_EXT_CAP_PC_MASK_CINTA,
3075:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_STRONG_CFG_CINTA);
3076:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3077:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect the CintB capacitor from the AMUXBUS and connect it to GND. */
3078:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_HSIOM_PTR, CapSense_EXT_CAP_HSIOM_MASK_CINTB,
3079:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_HSIOM_SEL_GPIO);
3080:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_DR_PTR, CapSense_EXT_CAP_DR_MASK_CINTB, 0u);
3081:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_PC_PTR, CapSense_EXT_CAP_PC_MASK_CINTB,
3082:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_STRONG_CFG_CINTB);
3083:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3084:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3085:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Delay to discharge external capacitors */
3086:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyDelayUs((uint16)dischargeTime);
3087:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3088:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
3089:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Restore the pin configuration, the CMOD capacitor is connected to. */
3090:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_PC_PTR,
3091:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_MASK_CMOD, cmodPc);
3092:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_DR_PTR,
3093:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_DR_MASK_CMOD, cmodDr);
3094:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_HSIOM_PTR,
3095:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_HSIOM_MASK_CMOD, cmodHsiom);
3096:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3097:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&\
3098:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
3099:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Restore the pin configuration, the CSH capacitor is connected to. */
3100:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_PC_PTR,
3101:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_EXT_CAP_PC_MASK_CSH, cshPc);
3102:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_DR_PTR,
3103:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_EXT_CAP_DR_MASK_CSH, cshDr);
3104:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_HSIOM_PTR,
3105:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_EXT_CAP_HSIOM_MASK_CSH, cshHsiom);
3106:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 85


3107:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3108:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3109:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
3110:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Restore the pin configuration, the CintA capacitor is connected to. */
3111:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_PC_PTR,
3112:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_MASK_CINTA, cintAPc);
3113:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_DR_PTR,
3114:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_DR_MASK_CINTA, cintADr);
3115:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_HSIOM_PTR,
3116:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_HSIOM_MASK_CINTA, cintAHsiom);
3117:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3118:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Restore the pin configuration, the CintB capacitor is connected to. */
3119:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_PC_PTR,
3120:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_MASK_CINTB, cintBPc);
3121:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_DR_PTR,
3122:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_DR_MASK_CINTB, cintBDr);
3123:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_HSIOM_PTR,
3124:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_HSIOM_MASK_CINTB, cintBHsiom);
3125:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3126:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
3127:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV1) */
3128:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3129:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3130:Generated_Source\PSoC4/CapSense_Sensing.c **** #if((CapSense_ENABLE == CapSense_CSD_EN) ||\
3131:Generated_Source\PSoC4/CapSense_Sensing.c ****     (CapSense_ENABLE == CapSense_CSX_EN))
3132:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
3133:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SetInactiveElectrodeState
3134:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
3135:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3136:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
3137:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function updates the RAM data structure with the desired state of inactive
3138:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  electrodes for the specified operation mode. The state of pins is not changed
3139:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  in scope of this routine.
3140:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3141:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
3142:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function updates the following registers of RAM data structure:
3143:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_SCAN_CSD_ISC_VALUE - Connection of inactive CSD and CSX
3144:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     electrodes during the regular CSD scan. By default, this register is initialized
3145:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     with the value of Inactive Sensor Connection combobox on the CSD Settings tab.
3146:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_SCAN_CSD_E value should be used as the Mode parameter
3147:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3148:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3149:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_SCAN_CSX_ISC_VALUE - Connection of inactive CSD, CSX and
3150:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     the dedicated Shield electrodes during the regular CSX scan. By default, this
3151:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     register is initialized with the value of Inactive Sensor Connection combobox
3152:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     on the CSX Settings tab.
3153:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_SCAN_CSX_E value should be used as the Mode parameter
3154:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3155:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3156:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_BIST_CSD_SNS_CAP_ISC_VALUE - Connection of inactive CSD and CSX
3157:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     electrodes during measurement of CSD electrodes capacitance.
3158:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     This register is initialized with the CapSense_SNS_CONNECTION_GROUND value
3159:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     by default.
3160:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_BIST_CSD_SNS_CAP_E value should be used as the Mode parameter
3161:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3162:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3163:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_BIST_CSX_SNS_CAP_ISC_VALUE - Connection of inactive CSD, CSX and
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 86


3164:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     the dedicated Shield electrodes during measurement of CSX electrodes (Tx and Rx)
3165:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     capacitance. This register is initialized with the CapSense_SNS_CONNECTION_GROUND
3166:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     value by default.
3167:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_BIST_CSX_SNS_CAP_E value should be used as the Mode parameter
3168:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3169:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3170:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_BIST_CSD_SH_CAP_ISC_VALUE - Connection of inactive CSD and CSX electrodes
3171:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     measurement of dedicated Shield  electrodes capacitance. This register is initialized wit
3172:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     the CapSense_SNS_CONNECTION_GROUND value by default.
3173:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_BIST_CSD_SH_CAP_E value should be used as the Mode parameter
3174:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3175:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3176:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param
3177:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  mode Operation mode, the state of inactive sensors should be configured for.
3178:Generated_Source\PSoC4/CapSense_Sensing.c ****     *       This parameter can take the following values:
3179:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_SCAN_CSD_E - Regular CSD scan.
3180:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_SCAN_CSX_E - Regular CSX scan.
3181:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_BIST_CSD_SNS_CAP_E - Measurement of the CSD sensor capacitance.
3182:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_BIST_CSX_SNS_CAP_E - Measurement of the CSX electrode capacitance.
3183:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_BIST_CSD_SH_CAP_E - Measurement of the dedicated CSD Shield
3184:Generated_Source\PSoC4/CapSense_Sensing.c ****     *          electrode capacitance.
3185:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3186:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param
3187:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  state The desired state of inactive sensors.
3188:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        This parameter can take the following values:
3189:Generated_Source\PSoC4/CapSense_Sensing.c ****     *         - CapSense_SNS_CONNECTION_GROUND - Inactive sensors are connected to the ground.
3190:Generated_Source\PSoC4/CapSense_Sensing.c ****     *         - CapSense_SNS_CONNECTION_HIGHZ - Inactive sensors are floating (not
3191:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           connected to GND or Shield).
3192:Generated_Source\PSoC4/CapSense_Sensing.c ****     *         - CapSense_SNS_CONNECTION_SHIELD - Inactive sensors are connected to the shield.
3193:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           This option is available only if the Enable shield electrode check box is set.
3194:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           At least one dedicated shield electrode is required to use the
3195:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           CapSense_SNS_CONNECTION_SHIELD option for the CapSense_BIST_CSD_SH_CAP_E
3196:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           operation mode.
3197:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3198:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
3199:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the operation:
3200:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation was successfully completed.
3201:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_PARAM - The input parameter is invalid.
3202:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3203:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
3204:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32_t CapSense_SetInactiveElectrodeState(CapSense_OPERATION_MODE_ENUM mode, uint32_t state)
3205:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1507              		.loc 1 3205 0
 1508              		.cfi_startproc
 1509              		@ args = 0, pretend = 0, frame = 0
 1510              		@ frame_needed = 0, uses_anonymous_args = 0
 1511              	.LVL177:
 1512 0000 10B5     		push	{r4, lr}
 1513              		.cfi_def_cfa_offset 8
 1514              		.cfi_offset 4, -8
 1515              		.cfi_offset 14, -4
 1516              	.LVL178:
3206:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32_t retVal = CYRET_SUCCESS;
3207:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3208:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch(mode)
 1517              		.loc 1 3208 0
 1518 0002 0128     		cmp	r0, #1
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 87


 1519 0004 04D1     		bne	.L116
3209:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
3210:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_ENABLE == CapSense_CSD_EN)
3211:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SCAN_CSD_E:
3212:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.scanCsdISC = (uint8)state;
3213:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
3214:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3215:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3216:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_ENABLE == CapSense_CSX_EN)
3217:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SCAN_CSX_E:
3218:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.scanCsxISC = (uint8)state;
 1520              		.loc 1 3218 0
 1521 0006 054B     		ldr	r3, .L117
 1522 0008 054A     		ldr	r2, .L117+4
 1523 000a D154     		strb	r1, [r2, r3]
3206:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32_t retVal = CYRET_SUCCESS;
 1524              		.loc 1 3206 0
 1525 000c 0020     		movs	r0, #0
 1526              	.LVL179:
3219:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 1527              		.loc 1 3219 0
 1528 000e 03E0     		b	.L115
 1529              	.LVL180:
 1530              	.L116:
3220:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3221:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3222:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if((CapSense_ENABLE == CapSense_SELF_TEST_EN) &&\
3223:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_TST_SNS_CAP_EN) &&\
3224:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_CSD_EN))
3225:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_BIST_CSD_SNS_CAP_E:
3226:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.selfTestConfig.bistCsdSnsCapISC = (uint8)state;
3227:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
3228:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3229:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3230:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if((CapSense_ENABLE == CapSense_SELF_TEST_EN) &&\
3231:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_TST_SNS_CAP_EN) &&\
3232:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_CSX_EN))
3233:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_BIST_CSX_SNS_CAP_E:
3234:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.selfTestConfig.bistCsxSnsCapISC = (uint8)state;
3235:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
3236:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3237:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3238:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if((CapSense_ENABLE == CapSense_SELF_TEST_EN) &&\
3239:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_TST_SH_CAP_EN) &&\
3240:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_CSD_EN) &&\
3241:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_CSD_SHIELD_EN))
3242:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_BIST_CSD_SH_CAP_E:
3243:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if((CapSense_CSD_TOTAL_SHIELD_COUNT == 0u) &&
3244:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (CapSense_SNS_CONNECTION_SHIELD != state))
3245:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
3246:Generated_Source\PSoC4/CapSense_Sensing.c ****                     retVal = CYRET_BAD_PARAM;
3247:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
3248:Generated_Source\PSoC4/CapSense_Sensing.c ****                 else
3249:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
3250:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_dsRam.selfTestConfig.bistCsdShCapISC = (uint8)state;
3251:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
3252:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 88


3253:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3254:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3255:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
3256:Generated_Source\PSoC4/CapSense_Sensing.c ****             CYASSERT(0u);
 1531              		.loc 1 3256 0 discriminator 1
 1532 0010 0020     		movs	r0, #0
 1533              	.LVL181:
 1534 0012 FFF7FEFF 		bl	CyHalt
 1535              	.LVL182:
3257:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = CYRET_BAD_PARAM;
 1536              		.loc 1 3257 0 discriminator 1
 1537 0016 0120     		movs	r0, #1
 1538              	.LVL183:
 1539              	.L115:
3258:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
3259:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
3260:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3261:Generated_Source\PSoC4/CapSense_Sensing.c ****         return(retVal);
3262:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1540              		.loc 1 3262 0
 1541              		@ sp needed
 1542 0018 10BD     		pop	{r4, pc}
 1543              	.L118:
 1544 001a C046     		.align	2
 1545              	.L117:
 1546 001c 86020000 		.word	646
 1547 0020 00000000 		.word	CapSense_dsRam
 1548              		.cfi_endproc
 1549              	.LFE24:
 1550              		.size	CapSense_SetInactiveElectrodeState, .-CapSense_SetInactiveElectrodeState
 1551              		.section	.text.CapSense_WriteBitsSafe,"ax",%progbits
 1552              		.align	2
 1553              		.global	CapSense_WriteBitsSafe
 1554              		.code	16
 1555              		.thumb_func
 1556              		.type	CapSense_WriteBitsSafe, %function
 1557              	CapSense_WriteBitsSafe:
 1558              	.LFB25:
3263:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
3264:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSX_EN)) */
3265:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3266:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3267:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
3268:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_WriteBitsSafe
3269:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
3270:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3271:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
3272:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Writes a field in port-pin register, specified by the mask parameter
3273:Generated_Source\PSoC4/CapSense_Sensing.c **** *  with the specified value in critical section.
3274:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3275:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
3276:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Writes a field in port-pin register, specified by the mask parameter
3277:Generated_Source\PSoC4/CapSense_Sensing.c **** *  with the specified value in critical section.
3278:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3279:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param regPtr
3280:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies a pointer to port-pin register.
3281:Generated_Source\PSoC4/CapSense_Sensing.c **** *
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 89


3282:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param mask
3283:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies bits to be modified.
3284:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3285:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param value
3286:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies a value to be written to the register.
3287:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3288:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
3289:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_WriteBitsSafe(reg32 * regPtr, uint32 mask, uint32 value)
3290:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 1559              		.loc 1 3290 0
 1560              		.cfi_startproc
 1561              		@ args = 0, pretend = 0, frame = 0
 1562              		@ frame_needed = 0, uses_anonymous_args = 0
 1563              	.LVL184:
 1564 0000 70B5     		push	{r4, r5, r6, lr}
 1565              		.cfi_def_cfa_offset 16
 1566              		.cfi_offset 4, -16
 1567              		.cfi_offset 5, -12
 1568              		.cfi_offset 6, -8
 1569              		.cfi_offset 14, -4
 1570 0002 0500     		movs	r5, r0
 1571 0004 0E00     		movs	r6, r1
 1572 0006 1400     		movs	r4, r2
3291:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 interruptState = CyEnterCriticalSection();
 1573              		.loc 1 3291 0
 1574 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1575              	.LVL185:
3292:Generated_Source\PSoC4/CapSense_Sensing.c ****     (* regPtr) = ((* regPtr) & ((uint32)~mask)) | (value & mask);
 1576              		.loc 1 3292 0
 1577 000c 2B68     		ldr	r3, [r5]
 1578 000e 5C40     		eors	r4, r3
 1579              	.LVL186:
 1580 0010 3440     		ands	r4, r6
 1581 0012 5C40     		eors	r4, r3
 1582 0014 2C60     		str	r4, [r5]
3293:Generated_Source\PSoC4/CapSense_Sensing.c ****     CyExitCriticalSection(interruptState);
 1583              		.loc 1 3293 0
 1584 0016 FFF7FEFF 		bl	CyExitCriticalSection
 1585              	.LVL187:
3294:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 1586              		.loc 1 3294 0
 1587              		@ sp needed
 1588              	.LVL188:
 1589              	.LVL189:
 1590 001a 70BD     		pop	{r4, r5, r6, pc}
 1591              		.cfi_endproc
 1592              	.LFE25:
 1593              		.size	CapSense_WriteBitsSafe, .-CapSense_WriteBitsSafe
 1594              		.section	.text.CapSense_SsDisableCSXMode,"ax",%progbits
 1595              		.align	2
 1596              		.code	16
 1597              		.thumb_func
 1598              		.type	CapSense_SsDisableCSXMode, %function
 1599              	CapSense_SsDisableCSXMode:
 1600              	.LFB9:
1002:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers */
 1601              		.loc 1 1002 0
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 90


 1602              		.cfi_startproc
 1603              		@ args = 0, pretend = 0, frame = 0
 1604              		@ frame_needed = 0, uses_anonymous_args = 0
 1605 0000 10B5     		push	{r4, lr}
 1606              		.cfi_def_cfa_offset 8
 1607              		.cfi_offset 4, -8
 1608              		.cfi_offset 14, -4
1004:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers */
 1609              		.loc 1 1004 0
 1610 0002 084C     		ldr	r4, .L121
 1611 0004 0022     		movs	r2, #0
 1612 0006 F021     		movs	r1, #240
 1613 0008 0901     		lsls	r1, r1, #4
 1614 000a 2000     		movs	r0, r4
 1615 000c FFF7FEFF 		bl	CapSense_WriteBitsSafe
 1616              	.LVL190:
1006:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous CSX electrode if it has been connected */
 1617              		.loc 1 1006 0
 1618 0010 0022     		movs	r2, #0
 1619 0012 F021     		movs	r1, #240
 1620 0014 0902     		lsls	r1, r1, #8
 1621 0016 2000     		movs	r0, r4
 1622 0018 FFF7FEFF 		bl	CapSense_WriteBitsSafe
 1623              	.LVL191:
1008:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1624              		.loc 1 1008 0
 1625 001c FFF7FEFF 		bl	CapSense_CSXElectrodeCheck
 1626              	.LVL192:
1009:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 1627              		.loc 1 1009 0
 1628              		@ sp needed
 1629 0020 10BD     		pop	{r4, pc}
 1630              	.L122:
 1631 0022 C046     		.align	2
 1632              	.L121:
 1633 0024 00040240 		.word	1073873920
 1634              		.cfi_endproc
 1635              	.LFE9:
 1636              		.size	CapSense_SsDisableCSXMode, .-CapSense_SsDisableCSXMode
 1637              		.section	.text.CapSense_SsSwitchSensingMode,"ax",%progbits
 1638              		.align	2
 1639              		.global	CapSense_SsSwitchSensingMode
 1640              		.code	16
 1641              		.thumb_func
 1642              		.type	CapSense_SsSwitchSensingMode, %function
 1643              	CapSense_SsSwitchSensingMode:
 1644              	.LFB10:
1068:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_currentSenseMethod != mode)
 1645              		.loc 1 1068 0
 1646              		.cfi_startproc
 1647              		@ args = 0, pretend = 0, frame = 0
 1648              		@ frame_needed = 0, uses_anonymous_args = 0
 1649              	.LVL193:
 1650 0000 10B5     		push	{r4, lr}
 1651              		.cfi_def_cfa_offset 8
 1652              		.cfi_offset 4, -8
 1653              		.cfi_offset 14, -4
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 91


 1654 0002 0400     		movs	r4, r0
1069:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1655              		.loc 1 1069 0
 1656 0004 0D4B     		ldr	r3, .L127
 1657 0006 1B78     		ldrb	r3, [r3]
 1658 0008 8342     		cmp	r3, r0
 1659 000a 16D0     		beq	.L123
1072:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1660              		.loc 1 1072 0
 1661 000c 012B     		cmp	r3, #1
 1662 000e 03D0     		beq	.L125
1078:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1663              		.loc 1 1078 0
 1664 0010 022B     		cmp	r3, #2
 1665 0012 01D1     		bne	.L125
1081:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 1666              		.loc 1 1081 0
 1667 0014 FFF7FEFF 		bl	CapSense_SsDisableCSXMode
 1668              	.LVL194:
 1669              	.L125:
1105:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1670              		.loc 1 1105 0
 1671 0018 012C     		cmp	r4, #1
 1672 001a 0ED0     		beq	.L123
1113:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1673              		.loc 1 1113 0
 1674 001c 022C     		cmp	r4, #2
 1675 001e 05D1     		bne	.L126
1117:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSX_E;
 1676              		.loc 1 1117 0
 1677 0020 FFF7FEFF 		bl	CapSense_CSXInitialize
 1678              	.LVL195:
1118:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 1679              		.loc 1 1118 0
 1680 0024 0222     		movs	r2, #2
 1681 0026 054B     		ldr	r3, .L127
 1682 0028 1A70     		strb	r2, [r3]
 1683 002a 06E0     		b	.L123
 1684              	.L126:
1121:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1685              		.loc 1 1121 0
 1686 002c 042C     		cmp	r4, #4
 1687 002e 04D0     		beq	.L123
1129:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1688              		.loc 1 1129 0
 1689 0030 032C     		cmp	r4, #3
 1690 0032 02D0     		beq	.L123
1138:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1691              		.loc 1 1138 0
 1692 0034 0022     		movs	r2, #0
 1693 0036 014B     		ldr	r3, .L127
 1694 0038 1A70     		strb	r2, [r3]
 1695              	.L123:
1141:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1696              		.loc 1 1141 0
 1697              		@ sp needed
 1698 003a 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 92


 1699              	.L128:
 1700              		.align	2
 1701              	.L127:
 1702 003c 00000000 		.word	.LANCHOR0
 1703              		.cfi_endproc
 1704              	.LFE10:
 1705              		.size	CapSense_SsSwitchSensingMode, .-CapSense_SsSwitchSensingMode
 1706              		.section	.text.CapSense_SsInitialize,"ax",%progbits
 1707              		.align	2
 1708              		.global	CapSense_SsInitialize
 1709              		.code	16
 1710              		.thumb_func
 1711              		.type	CapSense_SsInitialize, %function
 1712              	CapSense_SsInitialize:
 1713              	.LFB7:
 708:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus initStatus;
 1714              		.loc 1 708 0
 1715              		.cfi_startproc
 1716              		@ args = 0, pretend = 0, frame = 0
 1717              		@ frame_needed = 0, uses_anonymous_args = 0
 1718 0000 10B5     		push	{r4, lr}
 1719              		.cfi_def_cfa_offset 8
 1720              		.cfi_offset 4, -8
 1721              		.cfi_offset 14, -4
 1722              	.LVL196:
 747:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
 1723              		.loc 1 747 0
 1724 0002 FFF7FEFF 		bl	CapSense_SsInitializeSourceSenseClk
 1725              	.LVL197:
 752:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_dsRam.scanCurrentISC = CapSense_SNS_CONNECTION_GROUND;
 1726              		.loc 1 752 0
 1727 0006 0020     		movs	r0, #0
 1728 0008 FFF7FEFF 		bl	CapSense_SsSetAllIOsState
 1729              	.LVL198:
 753:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1730              		.loc 1 753 0
 1731 000c 0021     		movs	r1, #0
 1732 000e 054B     		ldr	r3, .L130
 1733 0010 054A     		ldr	r2, .L130+4
 1734 0012 D154     		strb	r1, [r2, r3]
 755:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_MANY_SENSE_MODES_EN)
 1735              		.loc 1 755 0
 1736 0014 0020     		movs	r0, #0
 1737 0016 FFF7FEFF 		bl	CapSense_SsSwitchSensingMode
 1738              	.LVL199:
 760:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_ISX_EN)
 1739              		.loc 1 760 0
 1740 001a 0220     		movs	r0, #2
 1741 001c FFF7FEFF 		bl	CapSense_SsSwitchSensingMode
 1742              	.LVL200:
 769:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1743              		.loc 1 769 0
 1744 0020 0020     		movs	r0, #0
 1745              		@ sp needed
 1746 0022 10BD     		pop	{r4, pc}
 1747              	.L131:
 1748              		.align	2
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 93


 1749              	.L130:
 1750 0024 87020000 		.word	647
 1751 0028 00000000 		.word	CapSense_dsRam
 1752              		.cfi_endproc
 1753              	.LFE7:
 1754              		.size	CapSense_SsInitialize, .-CapSense_SsInitialize
 1755              		.global	CapSense_idacGainTable
 1756              		.comm	CapSense_curSnsIOPtr,4,4
 1757              		.global	CapSense_curFlashWdgtPtr
 1758              		.comm	CapSense_curRamSnsPtr,4,4
 1759              		.global	CapSense_requestScanAllWidget
 1760              		.global	CapSense_sensorIndex
 1761              		.global	CapSense_widgetIndex
 1762              		.global	CapSense_scanFreqIndex
 1763              		.global	CapSense_currentSenseMethod
 1764              		.section	.rodata
 1765              		.align	2
 1766              		.type	CapSense_idacGainTable, %object
 1767              		.size	CapSense_idacGainTable, 48
 1768              	CapSense_idacGainTable:
 1769 0000 00000001 		.word	16777216
 1770 0004 7C920000 		.word	37500
 1771 0008 00000003 		.word	50331648
 1772 000c F8240100 		.word	75000
 1773 0010 00004001 		.word	20971520
 1774 0014 E0930400 		.word	300000
 1775 0018 00004003 		.word	54525952
 1776 001c C0270900 		.word	600000
 1777 0020 00008001 		.word	25165824
 1778 0024 009F2400 		.word	2400000
 1779 0028 00008003 		.word	58720256
 1780 002c 003E4900 		.word	4800000
 1781              		.type	CapSense_scanFreqIndex, %object
 1782              		.size	CapSense_scanFreqIndex, 1
 1783              	CapSense_scanFreqIndex:
 1784 0030 00       		.space	1
 1785              		.bss
 1786              		.align	2
 1787              		.set	.LANCHOR0,. + 0
 1788              		.type	CapSense_currentSenseMethod, %object
 1789              		.size	CapSense_currentSenseMethod, 1
 1790              	CapSense_currentSenseMethod:
 1791 0000 00       		.space	1
 1792              		.type	CapSense_requestScanAllWidget, %object
 1793              		.size	CapSense_requestScanAllWidget, 1
 1794              	CapSense_requestScanAllWidget:
 1795 0001 00       		.space	1
 1796 0002 0000     		.space	2
 1797              		.type	CapSense_curFlashWdgtPtr, %object
 1798              		.size	CapSense_curFlashWdgtPtr, 4
 1799              	CapSense_curFlashWdgtPtr:
 1800 0004 00000000 		.space	4
 1801              		.type	CapSense_sensorIndex, %object
 1802              		.size	CapSense_sensorIndex, 1
 1803              	CapSense_sensorIndex:
 1804 0008 00       		.space	1
 1805              		.type	CapSense_widgetIndex, %object
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 94


 1806              		.size	CapSense_widgetIndex, 1
 1807              	CapSense_widgetIndex:
 1808 0009 00       		.space	1
 1809              		.text
 1810              	.Letext0:
 1811              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1812              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1813              		.file 4 "Generated_Source\\PSoC4/cytypes.h"
 1814              		.file 5 "Generated_Source\\PSoC4\\CapSense_Configuration.h"
 1815              		.file 6 "Generated_Source\\PSoC4\\CapSense_TMG.h"
 1816              		.file 7 "Generated_Source\\PSoC4\\CapSense_Structure.h"
 1817              		.file 8 "Generated_Source\\PSoC4\\CapSense_Sensing.h"
 1818              		.file 9 "Generated_Source\\PSoC4\\CapSense_SensingCSX_LL.h"
 1819              		.file 10 "Generated_Source\\PSoC4/CyLib.h"
 1820              		.file 11 "Generated_Source\\PSoC4\\CapSense_ISR.h"
 1821              		.section	.debug_info,"",%progbits
 1822              	.Ldebug_info0:
 1823 0000 80160000 		.4byte	0x1680
 1824 0004 0400     		.2byte	0x4
 1825 0006 00000000 		.4byte	.Ldebug_abbrev0
 1826 000a 04       		.byte	0x4
 1827 000b 01       		.uleb128 0x1
 1828 000c 88040000 		.4byte	.LASF286
 1829 0010 0C       		.byte	0xc
 1830 0011 770E0000 		.4byte	.LASF287
 1831 0015 D4020000 		.4byte	.LASF288
 1832 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1833 001d 00000000 		.4byte	0
 1834 0021 00000000 		.4byte	.Ldebug_line0
 1835 0025 02       		.uleb128 0x2
 1836 0026 01       		.byte	0x1
 1837 0027 06       		.byte	0x6
 1838 0028 3F110000 		.4byte	.LASF0
 1839 002c 03       		.uleb128 0x3
 1840 002d 210E0000 		.4byte	.LASF3
 1841 0031 02       		.byte	0x2
 1842 0032 1D       		.byte	0x1d
 1843 0033 37000000 		.4byte	0x37
 1844 0037 02       		.uleb128 0x2
 1845 0038 01       		.byte	0x1
 1846 0039 08       		.byte	0x8
 1847 003a D60F0000 		.4byte	.LASF1
 1848 003e 02       		.uleb128 0x2
 1849 003f 02       		.byte	0x2
 1850 0040 05       		.byte	0x5
 1851 0041 620D0000 		.4byte	.LASF2
 1852 0045 03       		.uleb128 0x3
 1853 0046 00060000 		.4byte	.LASF4
 1854 004a 02       		.byte	0x2
 1855 004b 2B       		.byte	0x2b
 1856 004c 50000000 		.4byte	0x50
 1857 0050 02       		.uleb128 0x2
 1858 0051 02       		.byte	0x2
 1859 0052 07       		.byte	0x7
 1860 0053 8C110000 		.4byte	.LASF5
 1861 0057 02       		.uleb128 0x2
 1862 0058 04       		.byte	0x4
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 95


 1863 0059 05       		.byte	0x5
 1864 005a 9A0D0000 		.4byte	.LASF6
 1865 005e 03       		.uleb128 0x3
 1866 005f E40F0000 		.4byte	.LASF7
 1867 0063 02       		.byte	0x2
 1868 0064 41       		.byte	0x41
 1869 0065 69000000 		.4byte	0x69
 1870 0069 02       		.uleb128 0x2
 1871 006a 04       		.byte	0x4
 1872 006b 07       		.byte	0x7
 1873 006c 0D0F0000 		.4byte	.LASF8
 1874 0070 02       		.uleb128 0x2
 1875 0071 08       		.byte	0x8
 1876 0072 05       		.byte	0x5
 1877 0073 84090000 		.4byte	.LASF9
 1878 0077 02       		.uleb128 0x2
 1879 0078 08       		.byte	0x8
 1880 0079 07       		.byte	0x7
 1881 007a 8F050000 		.4byte	.LASF10
 1882 007e 04       		.uleb128 0x4
 1883 007f 04       		.byte	0x4
 1884 0080 05       		.byte	0x5
 1885 0081 696E7400 		.ascii	"int\000"
 1886 0085 02       		.uleb128 0x2
 1887 0086 04       		.byte	0x4
 1888 0087 07       		.byte	0x7
 1889 0088 66010000 		.4byte	.LASF11
 1890 008c 03       		.uleb128 0x3
 1891 008d A2080000 		.4byte	.LASF12
 1892 0091 03       		.byte	0x3
 1893 0092 18       		.byte	0x18
 1894 0093 2C000000 		.4byte	0x2c
 1895 0097 03       		.uleb128 0x3
 1896 0098 440C0000 		.4byte	.LASF13
 1897 009c 03       		.byte	0x3
 1898 009d 24       		.byte	0x24
 1899 009e 45000000 		.4byte	0x45
 1900 00a2 03       		.uleb128 0x3
 1901 00a3 2C040000 		.4byte	.LASF14
 1902 00a7 03       		.byte	0x3
 1903 00a8 30       		.byte	0x30
 1904 00a9 5E000000 		.4byte	0x5e
 1905 00ad 05       		.uleb128 0x5
 1906 00ae 39120000 		.4byte	.LASF15
 1907 00b2 04       		.byte	0x4
 1908 00b3 F701     		.2byte	0x1f7
 1909 00b5 37000000 		.4byte	0x37
 1910 00b9 05       		.uleb128 0x5
 1911 00ba 72080000 		.4byte	.LASF16
 1912 00be 04       		.byte	0x4
 1913 00bf F801     		.2byte	0x1f8
 1914 00c1 50000000 		.4byte	0x50
 1915 00c5 05       		.uleb128 0x5
 1916 00c6 170B0000 		.4byte	.LASF17
 1917 00ca 04       		.byte	0x4
 1918 00cb F901     		.2byte	0x1f9
 1919 00cd 69000000 		.4byte	0x69
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 96


 1920 00d1 02       		.uleb128 0x2
 1921 00d2 04       		.byte	0x4
 1922 00d3 04       		.byte	0x4
 1923 00d4 7C040000 		.4byte	.LASF18
 1924 00d8 02       		.uleb128 0x2
 1925 00d9 08       		.byte	0x8
 1926 00da 04       		.byte	0x4
 1927 00db 3F120000 		.4byte	.LASF19
 1928 00df 02       		.uleb128 0x2
 1929 00e0 01       		.byte	0x1
 1930 00e1 08       		.byte	0x8
 1931 00e2 F4070000 		.4byte	.LASF20
 1932 00e6 05       		.uleb128 0x5
 1933 00e7 BC0F0000 		.4byte	.LASF21
 1934 00eb 04       		.byte	0x4
 1935 00ec 9902     		.2byte	0x299
 1936 00ee 69000000 		.4byte	0x69
 1937 00f2 06       		.uleb128 0x6
 1938 00f3 AD000000 		.4byte	0xad
 1939 00f7 05       		.uleb128 0x5
 1940 00f8 660C0000 		.4byte	.LASF22
 1941 00fc 04       		.byte	0x4
 1942 00fd A302     		.2byte	0x2a3
 1943 00ff 03010000 		.4byte	0x103
 1944 0103 06       		.uleb128 0x6
 1945 0104 C5000000 		.4byte	0xc5
 1946 0108 05       		.uleb128 0x5
 1947 0109 960A0000 		.4byte	.LASF23
 1948 010d 04       		.byte	0x4
 1949 010e B302     		.2byte	0x2b3
 1950 0110 14010000 		.4byte	0x114
 1951 0114 07       		.uleb128 0x7
 1952 0115 04       		.byte	0x4
 1953 0116 1A010000 		.4byte	0x11a
 1954 011a 08       		.uleb128 0x8
 1955 011b 05       		.uleb128 0x5
 1956 011c 5D100000 		.4byte	.LASF24
 1957 0120 05       		.byte	0x5
 1958 0121 9101     		.2byte	0x191
 1959 0123 B9000000 		.4byte	0xb9
 1960 0127 05       		.uleb128 0x5
 1961 0128 D3080000 		.4byte	.LASF25
 1962 012c 05       		.byte	0x5
 1963 012d 9501     		.2byte	0x195
 1964 012f AD000000 		.4byte	0xad
 1965 0133 09       		.uleb128 0x9
 1966 0134 56       		.byte	0x56
 1967 0135 06       		.byte	0x6
 1968 0136 21       		.byte	0x21
 1969 0137 D0040000 		.4byte	0x4d0
 1970 013b 0A       		.uleb128 0xa
 1971 013c E40A0000 		.4byte	.LASF26
 1972 0140 06       		.byte	0x6
 1973 0141 26       		.byte	0x26
 1974 0142 D0040000 		.4byte	0x4d0
 1975 0146 00       		.byte	0
 1976 0147 0A       		.uleb128 0xa
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 97


 1977 0148 49000000 		.4byte	.LASF27
 1978 014c 06       		.byte	0x6
 1979 014d 2D       		.byte	0x2d
 1980 014e D0040000 		.4byte	0x4d0
 1981 0152 01       		.byte	0x1
 1982 0153 0A       		.uleb128 0xa
 1983 0154 5C000000 		.4byte	.LASF28
 1984 0158 06       		.byte	0x6
 1985 0159 33       		.byte	0x33
 1986 015a D0040000 		.4byte	0x4d0
 1987 015e 02       		.byte	0x2
 1988 015f 0A       		.uleb128 0xa
 1989 0160 EA030000 		.4byte	.LASF29
 1990 0164 06       		.byte	0x6
 1991 0165 39       		.byte	0x39
 1992 0166 D0040000 		.4byte	0x4d0
 1993 016a 03       		.byte	0x3
 1994 016b 0A       		.uleb128 0xa
 1995 016c FE030000 		.4byte	.LASF30
 1996 0170 06       		.byte	0x6
 1997 0171 3F       		.byte	0x3f
 1998 0172 D0040000 		.4byte	0x4d0
 1999 0176 04       		.byte	0x4
 2000 0177 0A       		.uleb128 0xa
 2001 0178 11000000 		.4byte	.LASF31
 2002 017c 06       		.byte	0x6
 2003 017d 45       		.byte	0x45
 2004 017e D0040000 		.4byte	0x4d0
 2005 0182 05       		.byte	0x5
 2006 0183 0A       		.uleb128 0xa
 2007 0184 26000000 		.4byte	.LASF32
 2008 0188 06       		.byte	0x6
 2009 0189 4B       		.byte	0x4b
 2010 018a D0040000 		.4byte	0x4d0
 2011 018e 06       		.byte	0x6
 2012 018f 0A       		.uleb128 0xa
 2013 0190 E7110000 		.4byte	.LASF33
 2014 0194 06       		.byte	0x6
 2015 0195 51       		.byte	0x51
 2016 0196 D0040000 		.4byte	0x4d0
 2017 019a 07       		.byte	0x7
 2018 019b 0A       		.uleb128 0xa
 2019 019c 54130000 		.4byte	.LASF34
 2020 01a0 06       		.byte	0x6
 2021 01a1 57       		.byte	0x57
 2022 01a2 D0040000 		.4byte	0x4d0
 2023 01a6 08       		.byte	0x8
 2024 01a7 0A       		.uleb128 0xa
 2025 01a8 2E010000 		.4byte	.LASF35
 2026 01ac 06       		.byte	0x6
 2027 01ad 5D       		.byte	0x5d
 2028 01ae D0040000 		.4byte	0x4d0
 2029 01b2 09       		.byte	0x9
 2030 01b3 0A       		.uleb128 0xa
 2031 01b4 2F020000 		.4byte	.LASF36
 2032 01b8 06       		.byte	0x6
 2033 01b9 63       		.byte	0x63
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 98


 2034 01ba D0040000 		.4byte	0x4d0
 2035 01be 0A       		.byte	0xa
 2036 01bf 0A       		.uleb128 0xa
 2037 01c0 FB110000 		.4byte	.LASF37
 2038 01c4 06       		.byte	0x6
 2039 01c5 69       		.byte	0x69
 2040 01c6 D0040000 		.4byte	0x4d0
 2041 01ca 0B       		.byte	0xb
 2042 01cb 0A       		.uleb128 0xa
 2043 01cc 68130000 		.4byte	.LASF38
 2044 01d0 06       		.byte	0x6
 2045 01d1 6F       		.byte	0x6f
 2046 01d2 D0040000 		.4byte	0x4d0
 2047 01d6 0C       		.byte	0xc
 2048 01d7 0A       		.uleb128 0xa
 2049 01d8 42010000 		.4byte	.LASF39
 2050 01dc 06       		.byte	0x6
 2051 01dd 75       		.byte	0x75
 2052 01de D0040000 		.4byte	0x4d0
 2053 01e2 0D       		.byte	0xd
 2054 01e3 0A       		.uleb128 0xa
 2055 01e4 43020000 		.4byte	.LASF40
 2056 01e8 06       		.byte	0x6
 2057 01e9 7B       		.byte	0x7b
 2058 01ea D0040000 		.4byte	0x4d0
 2059 01ee 0E       		.byte	0xe
 2060 01ef 0A       		.uleb128 0xa
 2061 01f0 87010000 		.4byte	.LASF41
 2062 01f4 06       		.byte	0x6
 2063 01f5 83       		.byte	0x83
 2064 01f6 D0040000 		.4byte	0x4d0
 2065 01fa 0F       		.byte	0xf
 2066 01fb 0A       		.uleb128 0xa
 2067 01fc 95010000 		.4byte	.LASF42
 2068 0200 06       		.byte	0x6
 2069 0201 8B       		.byte	0x8b
 2070 0202 D0040000 		.4byte	0x4d0
 2071 0206 10       		.byte	0x10
 2072 0207 0A       		.uleb128 0xa
 2073 0208 A3010000 		.4byte	.LASF43
 2074 020c 06       		.byte	0x6
 2075 020d 93       		.byte	0x93
 2076 020e D0040000 		.4byte	0x4d0
 2077 0212 11       		.byte	0x11
 2078 0213 0A       		.uleb128 0xa
 2079 0214 B1010000 		.4byte	.LASF44
 2080 0218 06       		.byte	0x6
 2081 0219 9B       		.byte	0x9b
 2082 021a D0040000 		.4byte	0x4d0
 2083 021e 12       		.byte	0x12
 2084 021f 0A       		.uleb128 0xa
 2085 0220 F40E0000 		.4byte	.LASF45
 2086 0224 06       		.byte	0x6
 2087 0225 A2       		.byte	0xa2
 2088 0226 D0040000 		.4byte	0x4d0
 2089 022a 13       		.byte	0x13
 2090 022b 0A       		.uleb128 0xa
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 99


 2091 022c E1010000 		.4byte	.LASF46
 2092 0230 06       		.byte	0x6
 2093 0231 A8       		.byte	0xa8
 2094 0232 D0040000 		.4byte	0x4d0
 2095 0236 14       		.byte	0x14
 2096 0237 0A       		.uleb128 0xa
 2097 0238 84030000 		.4byte	.LASF47
 2098 023c 06       		.byte	0x6
 2099 023d AE       		.byte	0xae
 2100 023e D0040000 		.4byte	0x4d0
 2101 0242 15       		.byte	0x15
 2102 0243 0A       		.uleb128 0xa
 2103 0244 56050000 		.4byte	.LASF48
 2104 0248 06       		.byte	0x6
 2105 0249 B4       		.byte	0xb4
 2106 024a D0040000 		.4byte	0x4d0
 2107 024e 16       		.byte	0x16
 2108 024f 0A       		.uleb128 0xa
 2109 0250 38060000 		.4byte	.LASF49
 2110 0254 06       		.byte	0x6
 2111 0255 BA       		.byte	0xba
 2112 0256 D0040000 		.4byte	0x4d0
 2113 025a 17       		.byte	0x17
 2114 025b 0A       		.uleb128 0xa
 2115 025c F5010000 		.4byte	.LASF50
 2116 0260 06       		.byte	0x6
 2117 0261 C0       		.byte	0xc0
 2118 0262 D0040000 		.4byte	0x4d0
 2119 0266 18       		.byte	0x18
 2120 0267 0A       		.uleb128 0xa
 2121 0268 98030000 		.4byte	.LASF51
 2122 026c 06       		.byte	0x6
 2123 026d C6       		.byte	0xc6
 2124 026e D0040000 		.4byte	0x4d0
 2125 0272 19       		.byte	0x19
 2126 0273 0A       		.uleb128 0xa
 2127 0274 6A050000 		.4byte	.LASF52
 2128 0278 06       		.byte	0x6
 2129 0279 CC       		.byte	0xcc
 2130 027a D0040000 		.4byte	0x4d0
 2131 027e 1A       		.byte	0x1a
 2132 027f 0A       		.uleb128 0xa
 2133 0280 4C060000 		.4byte	.LASF53
 2134 0284 06       		.byte	0x6
 2135 0285 D2       		.byte	0xd2
 2136 0286 D0040000 		.4byte	0x4d0
 2137 028a 1B       		.byte	0x1b
 2138 028b 0A       		.uleb128 0xa
 2139 028c 2A0D0000 		.4byte	.LASF54
 2140 0290 06       		.byte	0x6
 2141 0291 DA       		.byte	0xda
 2142 0292 D0040000 		.4byte	0x4d0
 2143 0296 1C       		.byte	0x1c
 2144 0297 0A       		.uleb128 0xa
 2145 0298 380D0000 		.4byte	.LASF55
 2146 029c 06       		.byte	0x6
 2147 029d E2       		.byte	0xe2
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 100


 2148 029e D0040000 		.4byte	0x4d0
 2149 02a2 1D       		.byte	0x1d
 2150 02a3 0A       		.uleb128 0xa
 2151 02a4 460D0000 		.4byte	.LASF56
 2152 02a8 06       		.byte	0x6
 2153 02a9 EA       		.byte	0xea
 2154 02aa D0040000 		.4byte	0x4d0
 2155 02ae 1E       		.byte	0x1e
 2156 02af 0A       		.uleb128 0xa
 2157 02b0 540D0000 		.4byte	.LASF57
 2158 02b4 06       		.byte	0x6
 2159 02b5 F2       		.byte	0xf2
 2160 02b6 D0040000 		.4byte	0x4d0
 2161 02ba 1F       		.byte	0x1f
 2162 02bb 0A       		.uleb128 0xa
 2163 02bc 6C030000 		.4byte	.LASF58
 2164 02c0 06       		.byte	0x6
 2165 02c1 F9       		.byte	0xf9
 2166 02c2 D0040000 		.4byte	0x4d0
 2167 02c6 20       		.byte	0x20
 2168 02c7 0B       		.uleb128 0xb
 2169 02c8 9B070000 		.4byte	.LASF59
 2170 02cc 06       		.byte	0x6
 2171 02cd 0001     		.2byte	0x100
 2172 02cf D0040000 		.4byte	0x4d0
 2173 02d3 21       		.byte	0x21
 2174 02d4 0B       		.uleb128 0xb
 2175 02d5 BE070000 		.4byte	.LASF60
 2176 02d9 06       		.byte	0x6
 2177 02da 0701     		.2byte	0x107
 2178 02dc D0040000 		.4byte	0x4d0
 2179 02e0 22       		.byte	0x22
 2180 02e1 0B       		.uleb128 0xb
 2181 02e2 D5070000 		.4byte	.LASF61
 2182 02e6 06       		.byte	0x6
 2183 02e7 0E01     		.2byte	0x10e
 2184 02e9 D0040000 		.4byte	0x4d0
 2185 02ed 23       		.byte	0x23
 2186 02ee 0B       		.uleb128 0xb
 2187 02ef 88000000 		.4byte	.LASF62
 2188 02f3 06       		.byte	0x6
 2189 02f4 1501     		.2byte	0x115
 2190 02f6 D0040000 		.4byte	0x4d0
 2191 02fa 24       		.byte	0x24
 2192 02fb 0B       		.uleb128 0xb
 2193 02fc EB000000 		.4byte	.LASF63
 2194 0300 06       		.byte	0x6
 2195 0301 1C01     		.2byte	0x11c
 2196 0303 D0040000 		.4byte	0x4d0
 2197 0307 25       		.byte	0x25
 2198 0308 0B       		.uleb128 0xb
 2199 0309 02010000 		.4byte	.LASF64
 2200 030d 06       		.byte	0x6
 2201 030e 2301     		.2byte	0x123
 2202 0310 D0040000 		.4byte	0x4d0
 2203 0314 26       		.byte	0x26
 2204 0315 0B       		.uleb128 0xb
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 101


 2205 0316 BB050000 		.4byte	.LASF65
 2206 031a 06       		.byte	0x6
 2207 031b 2A01     		.2byte	0x12a
 2208 031d D0040000 		.4byte	0x4d0
 2209 0321 27       		.byte	0x27
 2210 0322 0B       		.uleb128 0xb
 2211 0323 62110000 		.4byte	.LASF66
 2212 0327 06       		.byte	0x6
 2213 0328 3101     		.2byte	0x131
 2214 032a D0040000 		.4byte	0x4d0
 2215 032e 28       		.byte	0x28
 2216 032f 0B       		.uleb128 0xb
 2217 0330 7A110000 		.4byte	.LASF67
 2218 0334 06       		.byte	0x6
 2219 0335 3701     		.2byte	0x137
 2220 0337 D0040000 		.4byte	0x4d0
 2221 033b 29       		.byte	0x29
 2222 033c 0B       		.uleb128 0xb
 2223 033d 4A090000 		.4byte	.LASF68
 2224 0341 06       		.byte	0x6
 2225 0342 3D01     		.2byte	0x13d
 2226 0344 D0040000 		.4byte	0x4d0
 2227 0348 2A       		.byte	0x2a
 2228 0349 0B       		.uleb128 0xb
 2229 034a 6E090000 		.4byte	.LASF69
 2230 034e 06       		.byte	0x6
 2231 034f 4401     		.2byte	0x144
 2232 0351 D0040000 		.4byte	0x4d0
 2233 0355 2B       		.byte	0x2b
 2234 0356 0B       		.uleb128 0xb
 2235 0357 6F000000 		.4byte	.LASF70
 2236 035b 06       		.byte	0x6
 2237 035c 4A01     		.2byte	0x14a
 2238 035e D0040000 		.4byte	0x4d0
 2239 0362 2C       		.byte	0x2c
 2240 0363 0B       		.uleb128 0xb
 2241 0364 DE0B0000 		.4byte	.LASF71
 2242 0368 06       		.byte	0x6
 2243 0369 5001     		.2byte	0x150
 2244 036b D0040000 		.4byte	0x4d0
 2245 036f 2D       		.byte	0x2d
 2246 0370 0B       		.uleb128 0xb
 2247 0371 AA110000 		.4byte	.LASF72
 2248 0375 06       		.byte	0x6
 2249 0376 5701     		.2byte	0x157
 2250 0378 D0040000 		.4byte	0x4d0
 2251 037c 2E       		.byte	0x2e
 2252 037d 0B       		.uleb128 0xb
 2253 037e 35040000 		.4byte	.LASF73
 2254 0382 06       		.byte	0x6
 2255 0383 5F01     		.2byte	0x15f
 2256 0385 D0040000 		.4byte	0x4d0
 2257 0389 2F       		.byte	0x2f
 2258 038a 0B       		.uleb128 0xb
 2259 038b 46120000 		.4byte	.LASF74
 2260 038f 06       		.byte	0x6
 2261 0390 6801     		.2byte	0x168
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 102


 2262 0392 D0040000 		.4byte	0x4d0
 2263 0396 30       		.byte	0x30
 2264 0397 0B       		.uleb128 0xb
 2265 0398 63070000 		.4byte	.LASF75
 2266 039c 06       		.byte	0x6
 2267 039d 6E01     		.2byte	0x16e
 2268 039f D0040000 		.4byte	0x4d0
 2269 03a3 31       		.byte	0x31
 2270 03a4 0B       		.uleb128 0xb
 2271 03a5 C5030000 		.4byte	.LASF76
 2272 03a9 06       		.byte	0x6
 2273 03aa 7401     		.2byte	0x174
 2274 03ac D0040000 		.4byte	0x4d0
 2275 03b0 32       		.byte	0x32
 2276 03b1 0B       		.uleb128 0xb
 2277 03b2 A30A0000 		.4byte	.LASF77
 2278 03b6 06       		.byte	0x6
 2279 03b7 7A01     		.2byte	0x17a
 2280 03b9 D0040000 		.4byte	0x4d0
 2281 03bd 33       		.byte	0x33
 2282 03be 0B       		.uleb128 0xb
 2283 03bf B00A0000 		.4byte	.LASF78
 2284 03c3 06       		.byte	0x6
 2285 03c4 8001     		.2byte	0x180
 2286 03c6 D0040000 		.4byte	0x4d0
 2287 03ca 34       		.byte	0x34
 2288 03cb 0B       		.uleb128 0xb
 2289 03cc 56010000 		.4byte	.LASF79
 2290 03d0 06       		.byte	0x6
 2291 03d1 8601     		.2byte	0x186
 2292 03d3 D5040000 		.4byte	0x4d5
 2293 03d7 36       		.byte	0x36
 2294 03d8 0B       		.uleb128 0xb
 2295 03d9 530F0000 		.4byte	.LASF80
 2296 03dd 06       		.byte	0x6
 2297 03de 8B01     		.2byte	0x18b
 2298 03e0 D5040000 		.4byte	0x4d5
 2299 03e4 38       		.byte	0x38
 2300 03e5 0B       		.uleb128 0xb
 2301 03e6 5F0F0000 		.4byte	.LASF81
 2302 03ea 06       		.byte	0x6
 2303 03eb 9001     		.2byte	0x190
 2304 03ed D5040000 		.4byte	0x4d5
 2305 03f1 3A       		.byte	0x3a
 2306 03f2 0B       		.uleb128 0xb
 2307 03f3 49040000 		.4byte	.LASF82
 2308 03f7 06       		.byte	0x6
 2309 03f8 9501     		.2byte	0x195
 2310 03fa D5040000 		.4byte	0x4d5
 2311 03fe 3C       		.byte	0x3c
 2312 03ff 0B       		.uleb128 0xb
 2313 0400 00000000 		.4byte	.LASF83
 2314 0404 06       		.byte	0x6
 2315 0405 9A01     		.2byte	0x19a
 2316 0407 D5040000 		.4byte	0x4d5
 2317 040b 3E       		.byte	0x3e
 2318 040c 0B       		.uleb128 0xb
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 103


 2319 040d 57020000 		.4byte	.LASF84
 2320 0411 06       		.byte	0x6
 2321 0412 A001     		.2byte	0x1a0
 2322 0414 D5040000 		.4byte	0x4d5
 2323 0418 40       		.byte	0x40
 2324 0419 0B       		.uleb128 0xb
 2325 041a B00C0000 		.4byte	.LASF85
 2326 041e 06       		.byte	0x6
 2327 041f A801     		.2byte	0x1a8
 2328 0421 D5040000 		.4byte	0x4d5
 2329 0425 42       		.byte	0x42
 2330 0426 0B       		.uleb128 0xb
 2331 0427 AA0F0000 		.4byte	.LASF86
 2332 042b 06       		.byte	0x6
 2333 042c AF01     		.2byte	0x1af
 2334 042e D5040000 		.4byte	0x4d5
 2335 0432 44       		.byte	0x44
 2336 0433 0B       		.uleb128 0xb
 2337 0434 E1060000 		.4byte	.LASF87
 2338 0438 06       		.byte	0x6
 2339 0439 B701     		.2byte	0x1b7
 2340 043b D5040000 		.4byte	0x4d5
 2341 043f 46       		.byte	0x46
 2342 0440 0B       		.uleb128 0xb
 2343 0441 24100000 		.4byte	.LASF88
 2344 0445 06       		.byte	0x6
 2345 0446 BD01     		.2byte	0x1bd
 2346 0448 D5040000 		.4byte	0x4d5
 2347 044c 48       		.byte	0x48
 2348 044d 0B       		.uleb128 0xb
 2349 044e 40070000 		.4byte	.LASF89
 2350 0452 06       		.byte	0x6
 2351 0453 C301     		.2byte	0x1c3
 2352 0455 D5040000 		.4byte	0x4d5
 2353 0459 4A       		.byte	0x4a
 2354 045a 0B       		.uleb128 0xb
 2355 045b E0030000 		.4byte	.LASF90
 2356 045f 06       		.byte	0x6
 2357 0460 CC01     		.2byte	0x1cc
 2358 0462 D0040000 		.4byte	0x4d0
 2359 0466 4C       		.byte	0x4c
 2360 0467 0B       		.uleb128 0xb
 2361 0468 690B0000 		.4byte	.LASF91
 2362 046c 06       		.byte	0x6
 2363 046d D101     		.2byte	0x1d1
 2364 046f D0040000 		.4byte	0x4d0
 2365 0473 4D       		.byte	0x4d
 2366 0474 0B       		.uleb128 0xb
 2367 0475 B80B0000 		.4byte	.LASF92
 2368 0479 06       		.byte	0x6
 2369 047a D601     		.2byte	0x1d6
 2370 047c D0040000 		.4byte	0x4d0
 2371 0480 4E       		.byte	0x4e
 2372 0481 0B       		.uleb128 0xb
 2373 0482 1D020000 		.4byte	.LASF93
 2374 0486 06       		.byte	0x6
 2375 0487 DB01     		.2byte	0x1db
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 104


 2376 0489 D0040000 		.4byte	0x4d0
 2377 048d 4F       		.byte	0x4f
 2378 048e 0B       		.uleb128 0xb
 2379 048f AC030000 		.4byte	.LASF94
 2380 0493 06       		.byte	0x6
 2381 0494 E001     		.2byte	0x1e0
 2382 0496 D0040000 		.4byte	0x4d0
 2383 049a 50       		.byte	0x50
 2384 049b 0B       		.uleb128 0xb
 2385 049c 2B0E0000 		.4byte	.LASF95
 2386 04a0 06       		.byte	0x6
 2387 04a1 E501     		.2byte	0x1e5
 2388 04a3 D0040000 		.4byte	0x4d0
 2389 04a7 51       		.byte	0x51
 2390 04a8 0B       		.uleb128 0xb
 2391 04a9 170E0000 		.4byte	.LASF96
 2392 04ad 06       		.byte	0x6
 2393 04ae EA01     		.2byte	0x1ea
 2394 04b0 D0040000 		.4byte	0x4d0
 2395 04b4 52       		.byte	0x52
 2396 04b5 0B       		.uleb128 0xb
 2397 04b6 5B080000 		.4byte	.LASF97
 2398 04ba 06       		.byte	0x6
 2399 04bb EF01     		.2byte	0x1ef
 2400 04bd D0040000 		.4byte	0x4d0
 2401 04c1 53       		.byte	0x53
 2402 04c2 0B       		.uleb128 0xb
 2403 04c3 AC060000 		.4byte	.LASF98
 2404 04c7 06       		.byte	0x6
 2405 04c8 F401     		.2byte	0x1f4
 2406 04ca D0040000 		.4byte	0x4d0
 2407 04ce 54       		.byte	0x54
 2408 04cf 00       		.byte	0
 2409 04d0 06       		.uleb128 0x6
 2410 04d1 8C000000 		.4byte	0x8c
 2411 04d5 06       		.uleb128 0x6
 2412 04d6 97000000 		.4byte	0x97
 2413 04da 05       		.uleb128 0x5
 2414 04db D90E0000 		.4byte	.LASF99
 2415 04df 06       		.byte	0x6
 2416 04e0 F501     		.2byte	0x1f5
 2417 04e2 33010000 		.4byte	0x133
 2418 04e6 0C       		.uleb128 0xc
 2419 04e7 01       		.byte	0x1
 2420 04e8 37000000 		.4byte	0x37
 2421 04ec 07       		.byte	0x7
 2422 04ed 70       		.byte	0x70
 2423 04ee 11050000 		.4byte	0x511
 2424 04f2 0D       		.uleb128 0xd
 2425 04f3 19010000 		.4byte	.LASF100
 2426 04f7 00       		.byte	0
 2427 04f8 0D       		.uleb128 0xd
 2428 04f9 A10E0000 		.4byte	.LASF101
 2429 04fd 01       		.byte	0x1
 2430 04fe 0D       		.uleb128 0xd
 2431 04ff BC0D0000 		.4byte	.LASF102
 2432 0503 02       		.byte	0x2
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 105


 2433 0504 0D       		.uleb128 0xd
 2434 0505 8D100000 		.4byte	.LASF103
 2435 0509 03       		.byte	0x3
 2436 050a 0D       		.uleb128 0xd
 2437 050b 110C0000 		.4byte	.LASF104
 2438 050f 04       		.byte	0x4
 2439 0510 00       		.byte	0
 2440 0511 03       		.uleb128 0x3
 2441 0512 0C090000 		.4byte	.LASF105
 2442 0516 07       		.byte	0x7
 2443 0517 76       		.byte	0x76
 2444 0518 E6040000 		.4byte	0x4e6
 2445 051c 09       		.uleb128 0x9
 2446 051d 0C       		.byte	0xc
 2447 051e 07       		.byte	0x7
 2448 051f AD       		.byte	0xad
 2449 0520 9D050000 		.4byte	0x59d
 2450 0524 0A       		.uleb128 0xa
 2451 0525 97080000 		.4byte	.LASF106
 2452 0529 07       		.byte	0x7
 2453 052a B2       		.byte	0xb2
 2454 052b B9000000 		.4byte	0xb9
 2455 052f 00       		.byte	0
 2456 0530 0A       		.uleb128 0xa
 2457 0531 8A0F0000 		.4byte	.LASF107
 2458 0535 07       		.byte	0x7
 2459 0536 B7       		.byte	0xb7
 2460 0537 1B010000 		.4byte	0x11b
 2461 053b 02       		.byte	0x2
 2462 053c 0A       		.uleb128 0xa
 2463 053d EC070000 		.4byte	.LASF108
 2464 0541 07       		.byte	0x7
 2465 0542 BC       		.byte	0xbc
 2466 0543 AD000000 		.4byte	0xad
 2467 0547 04       		.byte	0x4
 2468 0548 0A       		.uleb128 0xa
 2469 0549 780A0000 		.4byte	.LASF109
 2470 054d 07       		.byte	0x7
 2471 054e C1       		.byte	0xc1
 2472 054f AD000000 		.4byte	0xad
 2473 0553 05       		.byte	0x5
 2474 0554 0A       		.uleb128 0xa
 2475 0555 06070000 		.4byte	.LASF110
 2476 0559 07       		.byte	0x7
 2477 055a C7       		.byte	0xc7
 2478 055b AD000000 		.4byte	0xad
 2479 055f 06       		.byte	0x6
 2480 0560 0A       		.uleb128 0xa
 2481 0561 9A090000 		.4byte	.LASF111
 2482 0565 07       		.byte	0x7
 2483 0566 CD       		.byte	0xcd
 2484 0567 AD000000 		.4byte	0xad
 2485 056b 07       		.byte	0x7
 2486 056c 0A       		.uleb128 0xa
 2487 056d 58070000 		.4byte	.LASF112
 2488 0571 07       		.byte	0x7
 2489 0572 D4       		.byte	0xd4
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 106


 2490 0573 27010000 		.4byte	0x127
 2491 0577 08       		.byte	0x8
 2492 0578 0A       		.uleb128 0xa
 2493 0579 8D070000 		.4byte	.LASF113
 2494 057d 07       		.byte	0x7
 2495 057e D9       		.byte	0xd9
 2496 057f AD000000 		.4byte	0xad
 2497 0583 09       		.byte	0x9
 2498 0584 0A       		.uleb128 0xa
 2499 0585 DB0C0000 		.4byte	.LASF114
 2500 0589 07       		.byte	0x7
 2501 058a DE       		.byte	0xde
 2502 058b AD000000 		.4byte	0xad
 2503 058f 0A       		.byte	0xa
 2504 0590 0A       		.uleb128 0xa
 2505 0591 E90A0000 		.4byte	.LASF115
 2506 0595 07       		.byte	0x7
 2507 0596 E4       		.byte	0xe4
 2508 0597 AD000000 		.4byte	0xad
 2509 059b 0B       		.byte	0xb
 2510 059c 00       		.byte	0
 2511 059d 03       		.uleb128 0x3
 2512 059e C30A0000 		.4byte	.LASF116
 2513 05a2 07       		.byte	0x7
 2514 05a3 E5       		.byte	0xe5
 2515 05a4 1C050000 		.4byte	0x51c
 2516 05a8 09       		.uleb128 0x9
 2517 05a9 06       		.byte	0x6
 2518 05aa 07       		.byte	0x7
 2519 05ab EA       		.byte	0xea
 2520 05ac DA050000 		.4byte	0x5da
 2521 05b0 0E       		.uleb128 0xe
 2522 05b1 7800     		.ascii	"x\000"
 2523 05b3 07       		.byte	0x7
 2524 05b4 EF       		.byte	0xef
 2525 05b5 B9000000 		.4byte	0xb9
 2526 05b9 00       		.byte	0
 2527 05ba 0E       		.uleb128 0xe
 2528 05bb 7900     		.ascii	"y\000"
 2529 05bd 07       		.byte	0x7
 2530 05be F4       		.byte	0xf4
 2531 05bf B9000000 		.4byte	0xb9
 2532 05c3 02       		.byte	0x2
 2533 05c4 0E       		.uleb128 0xe
 2534 05c5 7A00     		.ascii	"z\000"
 2535 05c7 07       		.byte	0x7
 2536 05c8 F9       		.byte	0xf9
 2537 05c9 AD000000 		.4byte	0xad
 2538 05cd 04       		.byte	0x4
 2539 05ce 0E       		.uleb128 0xe
 2540 05cf 696400   		.ascii	"id\000"
 2541 05d2 07       		.byte	0x7
 2542 05d3 FE       		.byte	0xfe
 2543 05d4 AD000000 		.4byte	0xad
 2544 05d8 05       		.byte	0x5
 2545 05d9 00       		.byte	0
 2546 05da 03       		.uleb128 0x3
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 107


 2547 05db 71060000 		.4byte	.LASF117
 2548 05df 07       		.byte	0x7
 2549 05e0 FF       		.byte	0xff
 2550 05e1 A8050000 		.4byte	0x5a8
 2551 05e5 0F       		.uleb128 0xf
 2552 05e6 18       		.byte	0x18
 2553 05e7 07       		.byte	0x7
 2554 05e8 0401     		.2byte	0x104
 2555 05ea 8B060000 		.4byte	0x68b
 2556 05ee 0B       		.uleb128 0xb
 2557 05ef 97080000 		.4byte	.LASF106
 2558 05f3 07       		.byte	0x7
 2559 05f4 0901     		.2byte	0x109
 2560 05f6 B9000000 		.4byte	0xb9
 2561 05fa 00       		.byte	0
 2562 05fb 0B       		.uleb128 0xb
 2563 05fc 8A0F0000 		.4byte	.LASF107
 2564 0600 07       		.byte	0x7
 2565 0601 0E01     		.2byte	0x10e
 2566 0603 1B010000 		.4byte	0x11b
 2567 0607 02       		.byte	0x2
 2568 0608 0B       		.uleb128 0xb
 2569 0609 EC070000 		.4byte	.LASF108
 2570 060d 07       		.byte	0x7
 2571 060e 1301     		.2byte	0x113
 2572 0610 AD000000 		.4byte	0xad
 2573 0614 04       		.byte	0x4
 2574 0615 0B       		.uleb128 0xb
 2575 0616 780A0000 		.4byte	.LASF109
 2576 061a 07       		.byte	0x7
 2577 061b 1801     		.2byte	0x118
 2578 061d AD000000 		.4byte	0xad
 2579 0621 05       		.byte	0x5
 2580 0622 0B       		.uleb128 0xb
 2581 0623 06070000 		.4byte	.LASF110
 2582 0627 07       		.byte	0x7
 2583 0628 1E01     		.2byte	0x11e
 2584 062a AD000000 		.4byte	0xad
 2585 062e 06       		.byte	0x6
 2586 062f 0B       		.uleb128 0xb
 2587 0630 9A090000 		.4byte	.LASF111
 2588 0634 07       		.byte	0x7
 2589 0635 2401     		.2byte	0x124
 2590 0637 AD000000 		.4byte	0xad
 2591 063b 07       		.byte	0x7
 2592 063c 0B       		.uleb128 0xb
 2593 063d 58070000 		.4byte	.LASF112
 2594 0641 07       		.byte	0x7
 2595 0642 2B01     		.2byte	0x12b
 2596 0644 27010000 		.4byte	0x127
 2597 0648 08       		.byte	0x8
 2598 0649 0B       		.uleb128 0xb
 2599 064a 8D070000 		.4byte	.LASF113
 2600 064e 07       		.byte	0x7
 2601 064f 3001     		.2byte	0x130
 2602 0651 AD000000 		.4byte	0xad
 2603 0655 09       		.byte	0x9
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 108


 2604 0656 0B       		.uleb128 0xb
 2605 0657 DB0C0000 		.4byte	.LASF114
 2606 065b 07       		.byte	0x7
 2607 065c 3501     		.2byte	0x135
 2608 065e AD000000 		.4byte	0xad
 2609 0662 0A       		.byte	0xa
 2610 0663 0B       		.uleb128 0xb
 2611 0664 E90A0000 		.4byte	.LASF115
 2612 0668 07       		.byte	0x7
 2613 0669 3B01     		.2byte	0x13b
 2614 066b AD000000 		.4byte	0xad
 2615 066f 0B       		.byte	0xb
 2616 0670 0B       		.uleb128 0xb
 2617 0671 3D0A0000 		.4byte	.LASF118
 2618 0675 07       		.byte	0x7
 2619 0676 4401     		.2byte	0x144
 2620 0678 C5000000 		.4byte	0xc5
 2621 067c 0C       		.byte	0xc
 2622 067d 0B       		.uleb128 0xb
 2623 067e BD0A0000 		.4byte	.LASF119
 2624 0682 07       		.byte	0x7
 2625 0683 4901     		.2byte	0x149
 2626 0685 8B060000 		.4byte	0x68b
 2627 0689 10       		.byte	0x10
 2628 068a 00       		.byte	0
 2629 068b 10       		.uleb128 0x10
 2630 068c DA050000 		.4byte	0x5da
 2631 0690 9B060000 		.4byte	0x69b
 2632 0694 11       		.uleb128 0x11
 2633 0695 9B060000 		.4byte	0x69b
 2634 0699 00       		.byte	0
 2635 069a 00       		.byte	0
 2636 069b 02       		.uleb128 0x2
 2637 069c 04       		.byte	0x4
 2638 069d 07       		.byte	0x7
 2639 069e FC0C0000 		.4byte	.LASF120
 2640 06a2 05       		.uleb128 0x5
 2641 06a3 530E0000 		.4byte	.LASF121
 2642 06a7 07       		.byte	0x7
 2643 06a8 4A01     		.2byte	0x14a
 2644 06aa E5050000 		.4byte	0x5e5
 2645 06ae 0F       		.uleb128 0xf
 2646 06af 18       		.byte	0x18
 2647 06b0 07       		.byte	0x7
 2648 06b1 5001     		.2byte	0x150
 2649 06b3 C5060000 		.4byte	0x6c5
 2650 06b7 0B       		.uleb128 0xb
 2651 06b8 CD050000 		.4byte	.LASF122
 2652 06bc 07       		.byte	0x7
 2653 06bd 5501     		.2byte	0x155
 2654 06bf A2060000 		.4byte	0x6a2
 2655 06c3 00       		.byte	0
 2656 06c4 00       		.byte	0
 2657 06c5 05       		.uleb128 0x5
 2658 06c6 F30D0000 		.4byte	.LASF123
 2659 06ca 07       		.byte	0x7
 2660 06cb 5601     		.2byte	0x156
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 109


 2661 06cd AE060000 		.4byte	0x6ae
 2662 06d1 0F       		.uleb128 0xf
 2663 06d2 0A       		.byte	0xa
 2664 06d3 07       		.byte	0x7
 2665 06d4 5C01     		.2byte	0x15c
 2666 06d6 29070000 		.4byte	0x729
 2667 06da 12       		.uleb128 0x12
 2668 06db 72617700 		.ascii	"raw\000"
 2669 06df 07       		.byte	0x7
 2670 06e0 6101     		.2byte	0x161
 2671 06e2 29070000 		.4byte	0x729
 2672 06e6 00       		.byte	0
 2673 06e7 0B       		.uleb128 0xb
 2674 06e8 DF0A0000 		.4byte	.LASF124
 2675 06ec 07       		.byte	0x7
 2676 06ed 6601     		.2byte	0x166
 2677 06ef 29070000 		.4byte	0x729
 2678 06f3 02       		.byte	0x2
 2679 06f4 0B       		.uleb128 0xb
 2680 06f5 930F0000 		.4byte	.LASF125
 2681 06f9 07       		.byte	0x7
 2682 06fa 6C01     		.2byte	0x16c
 2683 06fc 39070000 		.4byte	0x739
 2684 0700 04       		.byte	0x4
 2685 0701 0B       		.uleb128 0xb
 2686 0702 AE0D0000 		.4byte	.LASF126
 2687 0706 07       		.byte	0x7
 2688 0707 7101     		.2byte	0x171
 2689 0709 1B010000 		.4byte	0x11b
 2690 070d 06       		.byte	0x6
 2691 070e 0B       		.uleb128 0xb
 2692 070f 55120000 		.4byte	.LASF127
 2693 0713 07       		.byte	0x7
 2694 0714 7601     		.2byte	0x176
 2695 0716 49070000 		.4byte	0x749
 2696 071a 08       		.byte	0x8
 2697 071b 0B       		.uleb128 0xb
 2698 071c 5F090000 		.4byte	.LASF128
 2699 0720 07       		.byte	0x7
 2700 0721 7B01     		.2byte	0x17b
 2701 0723 39070000 		.4byte	0x739
 2702 0727 09       		.byte	0x9
 2703 0728 00       		.byte	0
 2704 0729 10       		.uleb128 0x10
 2705 072a B9000000 		.4byte	0xb9
 2706 072e 39070000 		.4byte	0x739
 2707 0732 11       		.uleb128 0x11
 2708 0733 9B060000 		.4byte	0x69b
 2709 0737 00       		.byte	0
 2710 0738 00       		.byte	0
 2711 0739 10       		.uleb128 0x10
 2712 073a AD000000 		.4byte	0xad
 2713 073e 49070000 		.4byte	0x749
 2714 0742 11       		.uleb128 0x11
 2715 0743 9B060000 		.4byte	0x69b
 2716 0747 00       		.byte	0
 2717 0748 00       		.byte	0
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 110


 2718 0749 10       		.uleb128 0x10
 2719 074a 27010000 		.4byte	0x127
 2720 074e 59070000 		.4byte	0x759
 2721 0752 11       		.uleb128 0x11
 2722 0753 9B060000 		.4byte	0x69b
 2723 0757 00       		.byte	0
 2724 0758 00       		.byte	0
 2725 0759 05       		.uleb128 0x5
 2726 075a 94060000 		.4byte	.LASF129
 2727 075e 07       		.byte	0x7
 2728 075f 7C01     		.2byte	0x17c
 2729 0761 D1060000 		.4byte	0x6d1
 2730 0765 13       		.uleb128 0x13
 2731 0766 EA01     		.2byte	0x1ea
 2732 0768 07       		.byte	0x7
 2733 0769 8201     		.2byte	0x182
 2734 076b 7D070000 		.4byte	0x77d
 2735 076f 0B       		.uleb128 0xb
 2736 0770 CD050000 		.4byte	.LASF122
 2737 0774 07       		.byte	0x7
 2738 0775 8701     		.2byte	0x187
 2739 0777 7D070000 		.4byte	0x77d
 2740 077b 00       		.byte	0
 2741 077c 00       		.byte	0
 2742 077d 10       		.uleb128 0x10
 2743 077e 59070000 		.4byte	0x759
 2744 0782 8D070000 		.4byte	0x78d
 2745 0786 11       		.uleb128 0x11
 2746 0787 9B060000 		.4byte	0x69b
 2747 078b 30       		.byte	0x30
 2748 078c 00       		.byte	0
 2749 078d 05       		.uleb128 0x5
 2750 078e 37130000 		.4byte	.LASF130
 2751 0792 07       		.byte	0x7
 2752 0793 8801     		.2byte	0x188
 2753 0795 65070000 		.4byte	0x765
 2754 0799 13       		.uleb128 0x13
 2755 079a 8802     		.2byte	0x288
 2756 079c 07       		.byte	0x7
 2757 079d 8E01     		.2byte	0x18e
 2758 079f D8080000 		.4byte	0x8d8
 2759 07a3 0B       		.uleb128 0xb
 2760 07a4 7F0C0000 		.4byte	.LASF131
 2761 07a8 07       		.byte	0x7
 2762 07a9 9501     		.2byte	0x195
 2763 07ab B9000000 		.4byte	0xb9
 2764 07af 00       		.byte	0
 2765 07b0 0B       		.uleb128 0xb
 2766 07b1 97120000 		.4byte	.LASF132
 2767 07b5 07       		.byte	0x7
 2768 07b6 9A01     		.2byte	0x19a
 2769 07b8 B9000000 		.4byte	0xb9
 2770 07bc 02       		.byte	0x2
 2771 07bd 0B       		.uleb128 0xb
 2772 07be 7F010000 		.4byte	.LASF133
 2773 07c2 07       		.byte	0x7
 2774 07c3 9F01     		.2byte	0x19f
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 111


 2775 07c5 B9000000 		.4byte	0xb9
 2776 07c9 04       		.byte	0x4
 2777 07ca 0B       		.uleb128 0xb
 2778 07cb B30D0000 		.4byte	.LASF134
 2779 07cf 07       		.byte	0x7
 2780 07d0 A501     		.2byte	0x1a5
 2781 07d2 B9000000 		.4byte	0xb9
 2782 07d6 06       		.byte	0x6
 2783 07d7 0B       		.uleb128 0xb
 2784 07d8 73010000 		.4byte	.LASF135
 2785 07dc 07       		.byte	0x7
 2786 07dd AA01     		.2byte	0x1aa
 2787 07df B9000000 		.4byte	0xb9
 2788 07e3 08       		.byte	0x8
 2789 07e4 0B       		.uleb128 0xb
 2790 07e5 AA080000 		.4byte	.LASF136
 2791 07e9 07       		.byte	0x7
 2792 07ea AF01     		.2byte	0x1af
 2793 07ec 03010000 		.4byte	0x103
 2794 07f0 0C       		.byte	0xc
 2795 07f1 0B       		.uleb128 0xb
 2796 07f2 A30D0000 		.4byte	.LASF137
 2797 07f6 07       		.byte	0x7
 2798 07f7 B501     		.2byte	0x1b5
 2799 07f9 D8080000 		.4byte	0x8d8
 2800 07fd 10       		.byte	0x10
 2801 07fe 0B       		.uleb128 0xb
 2802 07ff 480E0000 		.4byte	.LASF138
 2803 0803 07       		.byte	0x7
 2804 0804 BC01     		.2byte	0x1bc
 2805 0806 D8080000 		.4byte	0x8d8
 2806 080a 14       		.byte	0x14
 2807 080b 0B       		.uleb128 0xb
 2808 080c D10C0000 		.4byte	.LASF139
 2809 0810 07       		.byte	0x7
 2810 0811 CC01     		.2byte	0x1cc
 2811 0813 39070000 		.4byte	0x739
 2812 0817 18       		.byte	0x18
 2813 0818 0B       		.uleb128 0xb
 2814 0819 8B0A0000 		.4byte	.LASF140
 2815 081d 07       		.byte	0x7
 2816 081e D201     		.2byte	0x1d2
 2817 0820 B9000000 		.4byte	0xb9
 2818 0824 1A       		.byte	0x1a
 2819 0825 0B       		.uleb128 0xb
 2820 0826 1A100000 		.4byte	.LASF141
 2821 082a 07       		.byte	0x7
 2822 082b D701     		.2byte	0x1d7
 2823 082d AD000000 		.4byte	0xad
 2824 0831 1C       		.byte	0x1c
 2825 0832 0B       		.uleb128 0xb
 2826 0833 810A0000 		.4byte	.LASF142
 2827 0837 07       		.byte	0x7
 2828 0838 DC01     		.2byte	0x1dc
 2829 083a B9000000 		.4byte	0xb9
 2830 083e 1E       		.byte	0x1e
 2831 083f 0B       		.uleb128 0xb
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 112


 2832 0840 C7090000 		.4byte	.LASF143
 2833 0844 07       		.byte	0x7
 2834 0845 E101     		.2byte	0x1e1
 2835 0847 C5060000 		.4byte	0x6c5
 2836 084b 20       		.byte	0x20
 2837 084c 0B       		.uleb128 0xb
 2838 084d 87050000 		.4byte	.LASF144
 2839 0851 07       		.byte	0x7
 2840 0852 E601     		.2byte	0x1e6
 2841 0854 8D070000 		.4byte	0x78d
 2842 0858 38       		.byte	0x38
 2843 0859 14       		.uleb128 0x14
 2844 085a 04100000 		.4byte	.LASF145
 2845 085e 07       		.byte	0x7
 2846 085f EB01     		.2byte	0x1eb
 2847 0861 DA040000 		.4byte	0x4da
 2848 0865 2202     		.2byte	0x222
 2849 0867 14       		.uleb128 0x14
 2850 0868 12040000 		.4byte	.LASF146
 2851 086c 07       		.byte	0x7
 2852 086d F001     		.2byte	0x1f0
 2853 086f C5000000 		.4byte	0xc5
 2854 0873 7802     		.2byte	0x278
 2855 0875 14       		.uleb128 0x14
 2856 0876 E4100000 		.4byte	.LASF147
 2857 087a 07       		.byte	0x7
 2858 087b F501     		.2byte	0x1f5
 2859 087d C5000000 		.4byte	0xc5
 2860 0881 7C02     		.2byte	0x27c
 2861 0883 14       		.uleb128 0x14
 2862 0884 DB000000 		.4byte	.LASF148
 2863 0888 07       		.byte	0x7
 2864 0889 FA01     		.2byte	0x1fa
 2865 088b AD000000 		.4byte	0xad
 2866 088f 8002     		.2byte	0x280
 2867 0891 14       		.uleb128 0x14
 2868 0892 F0050000 		.4byte	.LASF149
 2869 0896 07       		.byte	0x7
 2870 0897 FF01     		.2byte	0x1ff
 2871 0899 AD000000 		.4byte	0xad
 2872 089d 8102     		.2byte	0x281
 2873 089f 14       		.uleb128 0x14
 2874 08a0 6C0C0000 		.4byte	.LASF150
 2875 08a4 07       		.byte	0x7
 2876 08a5 0402     		.2byte	0x204
 2877 08a7 B9000000 		.4byte	0xb9
 2878 08ab 8202     		.2byte	0x282
 2879 08ad 14       		.uleb128 0x14
 2880 08ae 460A0000 		.4byte	.LASF151
 2881 08b2 07       		.byte	0x7
 2882 08b3 0902     		.2byte	0x209
 2883 08b5 29070000 		.4byte	0x729
 2884 08b9 8402     		.2byte	0x284
 2885 08bb 14       		.uleb128 0x14
 2886 08bc 390C0000 		.4byte	.LASF152
 2887 08c0 07       		.byte	0x7
 2888 08c1 0E02     		.2byte	0x20e
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 113


 2889 08c3 AD000000 		.4byte	0xad
 2890 08c7 8602     		.2byte	0x286
 2891 08c9 14       		.uleb128 0x14
 2892 08ca 42100000 		.4byte	.LASF153
 2893 08ce 07       		.byte	0x7
 2894 08cf 1302     		.2byte	0x213
 2895 08d1 AD000000 		.4byte	0xad
 2896 08d5 8702     		.2byte	0x287
 2897 08d7 00       		.byte	0
 2898 08d8 10       		.uleb128 0x10
 2899 08d9 C5000000 		.4byte	0xc5
 2900 08dd E8080000 		.4byte	0x8e8
 2901 08e1 11       		.uleb128 0x11
 2902 08e2 9B060000 		.4byte	0x69b
 2903 08e6 00       		.byte	0
 2904 08e7 00       		.byte	0
 2905 08e8 05       		.uleb128 0x5
 2906 08e9 6C0D0000 		.4byte	.LASF154
 2907 08ed 07       		.byte	0x7
 2908 08ee 1402     		.2byte	0x214
 2909 08f0 99070000 		.4byte	0x799
 2910 08f4 0F       		.uleb128 0xf
 2911 08f5 1C       		.byte	0x1c
 2912 08f6 07       		.byte	0x7
 2913 08f7 1A02     		.2byte	0x21a
 2914 08f9 73090000 		.4byte	0x973
 2915 08fd 0B       		.uleb128 0xb
 2916 08fe F30A0000 		.4byte	.LASF155
 2917 0902 07       		.byte	0x7
 2918 0903 1F02     		.2byte	0x21f
 2919 0905 73090000 		.4byte	0x973
 2920 0909 00       		.byte	0
 2921 090a 0B       		.uleb128 0xb
 2922 090b 68090000 		.4byte	.LASF156
 2923 090f 07       		.byte	0x7
 2924 0910 2402     		.2byte	0x224
 2925 0912 73090000 		.4byte	0x973
 2926 0916 04       		.byte	0x4
 2927 0917 0B       		.uleb128 0xb
 2928 0918 B6060000 		.4byte	.LASF157
 2929 091c 07       		.byte	0x7
 2930 091d 2902     		.2byte	0x229
 2931 091f 73090000 		.4byte	0x973
 2932 0923 08       		.byte	0x8
 2933 0924 0B       		.uleb128 0xb
 2934 0925 D80D0000 		.4byte	.LASF158
 2935 0929 07       		.byte	0x7
 2936 092a 2E02     		.2byte	0x22e
 2937 092c 73090000 		.4byte	0x973
 2938 0930 0C       		.byte	0xc
 2939 0931 0B       		.uleb128 0xb
 2940 0932 DA100000 		.4byte	.LASF159
 2941 0936 07       		.byte	0x7
 2942 0937 3302     		.2byte	0x233
 2943 0939 C5000000 		.4byte	0xc5
 2944 093d 10       		.byte	0x10
 2945 093e 0B       		.uleb128 0xb
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 114


 2946 093f 4D0B0000 		.4byte	.LASF160
 2947 0943 07       		.byte	0x7
 2948 0944 3802     		.2byte	0x238
 2949 0946 C5000000 		.4byte	0xc5
 2950 094a 14       		.byte	0x14
 2951 094b 0B       		.uleb128 0xb
 2952 094c 67080000 		.4byte	.LASF161
 2953 0950 07       		.byte	0x7
 2954 0951 3D02     		.2byte	0x23d
 2955 0953 AD000000 		.4byte	0xad
 2956 0957 18       		.byte	0x18
 2957 0958 0B       		.uleb128 0xb
 2958 0959 050F0000 		.4byte	.LASF162
 2959 095d 07       		.byte	0x7
 2960 095e 4202     		.2byte	0x242
 2961 0960 AD000000 		.4byte	0xad
 2962 0964 19       		.byte	0x19
 2963 0965 0B       		.uleb128 0xb
 2964 0966 82040000 		.4byte	.LASF163
 2965 096a 07       		.byte	0x7
 2966 096b 4702     		.2byte	0x247
 2967 096d AD000000 		.4byte	0xad
 2968 0971 1A       		.byte	0x1a
 2969 0972 00       		.byte	0
 2970 0973 07       		.uleb128 0x7
 2971 0974 04       		.byte	0x4
 2972 0975 F7000000 		.4byte	0xf7
 2973 0979 05       		.uleb128 0x5
 2974 097a D7050000 		.4byte	.LASF164
 2975 097e 07       		.byte	0x7
 2976 097f 4802     		.2byte	0x248
 2977 0981 F4080000 		.4byte	0x8f4
 2978 0985 0F       		.uleb128 0xf
 2979 0986 0C       		.byte	0xc
 2980 0987 07       		.byte	0x7
 2981 0988 7A02     		.2byte	0x27a
 2982 098a E3090000 		.4byte	0x9e3
 2983 098e 12       		.uleb128 0x12
 2984 098f 7800     		.ascii	"x\000"
 2985 0991 07       		.byte	0x7
 2986 0992 8002     		.2byte	0x280
 2987 0994 B9000000 		.4byte	0xb9
 2988 0998 00       		.byte	0
 2989 0999 12       		.uleb128 0x12
 2990 099a 7900     		.ascii	"y\000"
 2991 099c 07       		.byte	0x7
 2992 099d 8602     		.2byte	0x286
 2993 099f B9000000 		.4byte	0xb9
 2994 09a3 02       		.byte	0x2
 2995 09a4 0B       		.uleb128 0xb
 2996 09a5 CA080000 		.4byte	.LASF165
 2997 09a9 07       		.byte	0x7
 2998 09aa 8B02     		.2byte	0x28b
 2999 09ac B9000000 		.4byte	0xb9
 3000 09b0 04       		.byte	0x4
 3001 09b1 12       		.uleb128 0x12
 3002 09b2 61676500 		.ascii	"age\000"
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 115


 3003 09b6 07       		.byte	0x7
 3004 09b7 9102     		.2byte	0x291
 3005 09b9 B9000000 		.4byte	0xb9
 3006 09bd 06       		.byte	0x6
 3007 09be 12       		.uleb128 0x12
 3008 09bf 7A00     		.ascii	"z\000"
 3009 09c1 07       		.byte	0x7
 3010 09c2 9602     		.2byte	0x296
 3011 09c4 AD000000 		.4byte	0xad
 3012 09c8 08       		.byte	0x8
 3013 09c9 12       		.uleb128 0x12
 3014 09ca 696400   		.ascii	"id\000"
 3015 09cd 07       		.byte	0x7
 3016 09ce 9C02     		.2byte	0x29c
 3017 09d0 AD000000 		.4byte	0xad
 3018 09d4 09       		.byte	0x9
 3019 09d5 0B       		.uleb128 0xb
 3020 09d6 A5090000 		.4byte	.LASF166
 3021 09da 07       		.byte	0x7
 3022 09db A402     		.2byte	0x2a4
 3023 09dd AD000000 		.4byte	0xad
 3024 09e1 0A       		.byte	0xa
 3025 09e2 00       		.byte	0
 3026 09e3 05       		.uleb128 0x5
 3027 09e4 560A0000 		.4byte	.LASF167
 3028 09e8 07       		.byte	0x7
 3029 09e9 A502     		.2byte	0x2a5
 3030 09eb 85090000 		.4byte	0x985
 3031 09ef 0F       		.uleb128 0xf
 3032 09f0 3E       		.byte	0x3e
 3033 09f1 07       		.byte	0x7
 3034 09f2 AA02     		.2byte	0x2aa
 3035 09f4 130A0000 		.4byte	0xa13
 3036 09f8 0B       		.uleb128 0xb
 3037 09f9 BD0A0000 		.4byte	.LASF119
 3038 09fd 07       		.byte	0x7
 3039 09fe B002     		.2byte	0x2b0
 3040 0a00 130A0000 		.4byte	0xa13
 3041 0a04 00       		.byte	0
 3042 0a05 0B       		.uleb128 0xb
 3043 0a06 AE090000 		.4byte	.LASF168
 3044 0a0a 07       		.byte	0x7
 3045 0a0b B502     		.2byte	0x2b5
 3046 0a0d AD000000 		.4byte	0xad
 3047 0a11 3C       		.byte	0x3c
 3048 0a12 00       		.byte	0
 3049 0a13 10       		.uleb128 0x10
 3050 0a14 E3090000 		.4byte	0x9e3
 3051 0a18 230A0000 		.4byte	0xa23
 3052 0a1c 11       		.uleb128 0x11
 3053 0a1d 9B060000 		.4byte	0x69b
 3054 0a21 04       		.byte	0x4
 3055 0a22 00       		.byte	0
 3056 0a23 05       		.uleb128 0x5
 3057 0a24 34050000 		.4byte	.LASF169
 3058 0a28 07       		.byte	0x7
 3059 0a29 B602     		.2byte	0x2b6
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 116


 3060 0a2b EF090000 		.4byte	0x9ef
 3061 0a2f 0F       		.uleb128 0xf
 3062 0a30 38       		.byte	0x38
 3063 0a31 07       		.byte	0x7
 3064 0a32 BC02     		.2byte	0x2bc
 3065 0a34 160B0000 		.4byte	0xb16
 3066 0a38 0B       		.uleb128 0xb
 3067 0a39 E4090000 		.4byte	.LASF170
 3068 0a3d 07       		.byte	0x7
 3069 0a3e C502     		.2byte	0x2c5
 3070 0a40 160B0000 		.4byte	0xb16
 3071 0a44 00       		.byte	0
 3072 0a45 0B       		.uleb128 0xb
 3073 0a46 51100000 		.4byte	.LASF171
 3074 0a4a 07       		.byte	0x7
 3075 0a4b CC02     		.2byte	0x2cc
 3076 0a4d 1D0B0000 		.4byte	0xb1d
 3077 0a51 04       		.byte	0x4
 3078 0a52 0B       		.uleb128 0xb
 3079 0a53 880C0000 		.4byte	.LASF172
 3080 0a57 07       		.byte	0x7
 3081 0a58 D202     		.2byte	0x2d2
 3082 0a5a 1F0B0000 		.4byte	0xb1f
 3083 0a5e 08       		.byte	0x8
 3084 0a5f 0B       		.uleb128 0xb
 3085 0a60 1E0B0000 		.4byte	.LASF173
 3086 0a64 07       		.byte	0x7
 3087 0a65 D802     		.2byte	0x2d8
 3088 0a67 1D0B0000 		.4byte	0xb1d
 3089 0a6b 0C       		.byte	0xc
 3090 0a6c 0B       		.uleb128 0xb
 3091 0a6d 430F0000 		.4byte	.LASF174
 3092 0a71 07       		.byte	0x7
 3093 0a72 DF02     		.2byte	0x2df
 3094 0a74 250B0000 		.4byte	0xb25
 3095 0a78 10       		.byte	0x10
 3096 0a79 0B       		.uleb128 0xb
 3097 0a7a 0D100000 		.4byte	.LASF175
 3098 0a7e 07       		.byte	0x7
 3099 0a7f E402     		.2byte	0x2e4
 3100 0a81 C5000000 		.4byte	0xc5
 3101 0a85 14       		.byte	0x14
 3102 0a86 0B       		.uleb128 0xb
 3103 0a87 B2070000 		.4byte	.LASF176
 3104 0a8b 07       		.byte	0x7
 3105 0a8c EB02     		.2byte	0x2eb
 3106 0a8e B9000000 		.4byte	0xb9
 3107 0a92 18       		.byte	0x18
 3108 0a93 0B       		.uleb128 0xb
 3109 0a94 0B060000 		.4byte	.LASF177
 3110 0a98 07       		.byte	0x7
 3111 0a99 F202     		.2byte	0x2f2
 3112 0a9b AD000000 		.4byte	0xad
 3113 0a9f 1A       		.byte	0x1a
 3114 0aa0 0B       		.uleb128 0xb
 3115 0aa1 92090000 		.4byte	.LASF178
 3116 0aa5 07       		.byte	0x7
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 117


 3117 0aa6 FC02     		.2byte	0x2fc
 3118 0aa8 AD000000 		.4byte	0xad
 3119 0aac 1B       		.byte	0x1b
 3120 0aad 0B       		.uleb128 0xb
 3121 0aae AA100000 		.4byte	.LASF179
 3122 0ab2 07       		.byte	0x7
 3123 0ab3 0403     		.2byte	0x304
 3124 0ab5 AD000000 		.4byte	0xad
 3125 0ab9 1C       		.byte	0x1c
 3126 0aba 0B       		.uleb128 0xb
 3127 0abb 050D0000 		.4byte	.LASF180
 3128 0abf 07       		.byte	0x7
 3129 0ac0 0903     		.2byte	0x309
 3130 0ac2 B9000000 		.4byte	0xb9
 3131 0ac6 1E       		.byte	0x1e
 3132 0ac7 0B       		.uleb128 0xb
 3133 0ac8 A0120000 		.4byte	.LASF181
 3134 0acc 07       		.byte	0x7
 3135 0acd 0E03     		.2byte	0x30e
 3136 0acf B9000000 		.4byte	0xb9
 3137 0ad3 20       		.byte	0x20
 3138 0ad4 0B       		.uleb128 0xb
 3139 0ad5 760F0000 		.4byte	.LASF182
 3140 0ad9 07       		.byte	0x7
 3141 0ada 1703     		.2byte	0x317
 3142 0adc C5000000 		.4byte	0xc5
 3143 0ae0 24       		.byte	0x24
 3144 0ae1 0B       		.uleb128 0xb
 3145 0ae2 E80C0000 		.4byte	.LASF183
 3146 0ae6 07       		.byte	0x7
 3147 0ae7 2003     		.2byte	0x320
 3148 0ae9 C5000000 		.4byte	0xc5
 3149 0aed 28       		.byte	0x28
 3150 0aee 0B       		.uleb128 0xb
 3151 0aef 79120000 		.4byte	.LASF184
 3152 0af3 07       		.byte	0x7
 3153 0af4 2503     		.2byte	0x325
 3154 0af6 2B0B0000 		.4byte	0xb2b
 3155 0afa 2C       		.byte	0x2c
 3156 0afb 0B       		.uleb128 0xb
 3157 0afc 9B0F0000 		.4byte	.LASF185
 3158 0b00 07       		.byte	0x7
 3159 0b01 2C03     		.2byte	0x32c
 3160 0b03 1D0B0000 		.4byte	0xb1d
 3161 0b07 30       		.byte	0x30
 3162 0b08 0B       		.uleb128 0xb
 3163 0b09 B6030000 		.4byte	.LASF186
 3164 0b0d 07       		.byte	0x7
 3165 0b0e 3103     		.2byte	0x331
 3166 0b10 AD000000 		.4byte	0xad
 3167 0b14 34       		.byte	0x34
 3168 0b15 00       		.byte	0
 3169 0b16 07       		.uleb128 0x7
 3170 0b17 04       		.byte	0x4
 3171 0b18 1C0B0000 		.4byte	0xb1c
 3172 0b1c 15       		.uleb128 0x15
 3173 0b1d 16       		.uleb128 0x16
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 118


 3174 0b1e 04       		.byte	0x4
 3175 0b1f 07       		.uleb128 0x7
 3176 0b20 04       		.byte	0x4
 3177 0b21 59070000 		.4byte	0x759
 3178 0b25 07       		.uleb128 0x7
 3179 0b26 04       		.byte	0x4
 3180 0b27 AD000000 		.4byte	0xad
 3181 0b2b 07       		.uleb128 0x7
 3182 0b2c 04       		.byte	0x4
 3183 0b2d 230A0000 		.4byte	0xa23
 3184 0b31 05       		.uleb128 0x5
 3185 0b32 1F070000 		.4byte	.LASF187
 3186 0b36 07       		.byte	0x7
 3187 0b37 3203     		.2byte	0x332
 3188 0b39 2F0A0000 		.4byte	0xa2f
 3189 0b3d 0F       		.uleb128 0xf
 3190 0b3e 38       		.byte	0x38
 3191 0b3f 07       		.byte	0x7
 3192 0b40 3803     		.2byte	0x338
 3193 0b42 540B0000 		.4byte	0xb54
 3194 0b46 0B       		.uleb128 0xb
 3195 0b47 7C130000 		.4byte	.LASF188
 3196 0b4b 07       		.byte	0x7
 3197 0b4c 3D03     		.2byte	0x33d
 3198 0b4e 540B0000 		.4byte	0xb54
 3199 0b52 00       		.byte	0
 3200 0b53 00       		.byte	0
 3201 0b54 10       		.uleb128 0x10
 3202 0b55 310B0000 		.4byte	0xb31
 3203 0b59 640B0000 		.4byte	0xb64
 3204 0b5d 11       		.uleb128 0x11
 3205 0b5e 9B060000 		.4byte	0x69b
 3206 0b62 00       		.byte	0
 3207 0b63 00       		.byte	0
 3208 0b64 05       		.uleb128 0x5
 3209 0b65 F1090000 		.4byte	.LASF189
 3210 0b69 07       		.byte	0x7
 3211 0b6a 3E03     		.2byte	0x33e
 3212 0b6c 3D0B0000 		.4byte	0xb3d
 3213 0b70 02       		.uleb128 0x2
 3214 0b71 08       		.byte	0x8
 3215 0b72 04       		.byte	0x4
 3216 0b73 2D0C0000 		.4byte	.LASF190
 3217 0b77 0C       		.uleb128 0xc
 3218 0b78 01       		.byte	0x1
 3219 0b79 37000000 		.4byte	0x37
 3220 0b7d 08       		.byte	0x8
 3221 0b7e 43       		.byte	0x43
 3222 0b7f A20B0000 		.4byte	0xba2
 3223 0b83 0D       		.uleb128 0xd
 3224 0b84 D0090000 		.4byte	.LASF191
 3225 0b88 00       		.byte	0
 3226 0b89 0D       		.uleb128 0xd
 3227 0b8a 09020000 		.4byte	.LASF192
 3228 0b8e 01       		.byte	0x1
 3229 0b8f 0D       		.uleb128 0xd
 3230 0b90 3F080000 		.4byte	.LASF193
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 119


 3231 0b94 02       		.byte	0x2
 3232 0b95 0D       		.uleb128 0xd
 3233 0b96 B9120000 		.4byte	.LASF194
 3234 0b9a 03       		.byte	0x3
 3235 0b9b 0D       		.uleb128 0xd
 3236 0b9c C6010000 		.4byte	.LASF195
 3237 0ba0 04       		.byte	0x4
 3238 0ba1 00       		.byte	0
 3239 0ba2 03       		.uleb128 0x3
 3240 0ba3 910B0000 		.4byte	.LASF196
 3241 0ba7 08       		.byte	0x8
 3242 0ba8 49       		.byte	0x49
 3243 0ba9 770B0000 		.4byte	0xb77
 3244 0bad 09       		.uleb128 0x9
 3245 0bae 08       		.byte	0x8
 3246 0baf 08       		.byte	0x8
 3247 0bb0 CF       		.byte	0xcf
 3248 0bb1 CE0B0000 		.4byte	0xbce
 3249 0bb5 0A       		.uleb128 0xa
 3250 0bb6 0F0E0000 		.4byte	.LASF197
 3251 0bba 08       		.byte	0x8
 3252 0bbb D4       		.byte	0xd4
 3253 0bbc C5000000 		.4byte	0xc5
 3254 0bc0 00       		.byte	0
 3255 0bc1 0A       		.uleb128 0xa
 3256 0bc2 2E0B0000 		.4byte	.LASF198
 3257 0bc6 08       		.byte	0x8
 3258 0bc7 D9       		.byte	0xd9
 3259 0bc8 C5000000 		.4byte	0xc5
 3260 0bcc 04       		.byte	0x4
 3261 0bcd 00       		.byte	0
 3262 0bce 03       		.uleb128 0x3
 3263 0bcf BC060000 		.4byte	.LASF199
 3264 0bd3 08       		.byte	0x8
 3265 0bd4 DA       		.byte	0xda
 3266 0bd5 AD0B0000 		.4byte	0xbad
 3267 0bd9 17       		.uleb128 0x17
 3268 0bda 75070000 		.4byte	.LASF202
 3269 0bde 01       		.byte	0x1
 3270 0bdf 3B0A     		.2byte	0xa3b
 3271 0be1 AD000000 		.4byte	0xad
 3272 0be5 00000000 		.4byte	.LFB21
 3273 0be9 84000000 		.4byte	.LFE21-.LFB21
 3274 0bed 01       		.uleb128 0x1
 3275 0bee 9C       		.byte	0x9c
 3276 0bef 240C0000 		.4byte	0xc24
 3277 0bf3 18       		.uleb128 0x18
 3278 0bf4 89120000 		.4byte	.LASF200
 3279 0bf8 01       		.byte	0x1
 3280 0bf9 3B0A     		.2byte	0xa3b
 3281 0bfb C5000000 		.4byte	0xc5
 3282 0bff 00000000 		.4byte	.LLST0
 3283 0c03 18       		.uleb128 0x18
 3284 0c04 79080000 		.4byte	.LASF201
 3285 0c08 01       		.byte	0x1
 3286 0c09 3B0A     		.2byte	0xa3b
 3287 0c0b C5000000 		.4byte	0xc5
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 120


 3288 0c0f 2C000000 		.4byte	.LLST1
 3289 0c13 19       		.uleb128 0x19
 3290 0c14 14060000 		.4byte	.LASF204
 3291 0c18 01       		.byte	0x1
 3292 0c19 3D0A     		.2byte	0xa3d
 3293 0c1b AD000000 		.4byte	0xad
 3294 0c1f 58000000 		.4byte	.LLST2
 3295 0c23 00       		.byte	0
 3296 0c24 17       		.uleb128 0x17
 3297 0c25 63040000 		.4byte	.LASF203
 3298 0c29 01       		.byte	0x1
 3299 0c2a 870A     		.2byte	0xa87
 3300 0c2c AD000000 		.4byte	0xad
 3301 0c30 00000000 		.4byte	.LFB22
 3302 0c34 42000000 		.4byte	.LFE22-.LFB22
 3303 0c38 01       		.uleb128 0x1
 3304 0c39 9C       		.byte	0x9c
 3305 0c3a 8F0C0000 		.4byte	0xc8f
 3306 0c3e 18       		.uleb128 0x18
 3307 0c3f 89120000 		.4byte	.LASF200
 3308 0c43 01       		.byte	0x1
 3309 0c44 870A     		.2byte	0xa87
 3310 0c46 C5000000 		.4byte	0xc5
 3311 0c4a 77000000 		.4byte	.LLST3
 3312 0c4e 18       		.uleb128 0x18
 3313 0c4f 14060000 		.4byte	.LASF204
 3314 0c53 01       		.byte	0x1
 3315 0c54 870A     		.2byte	0xa87
 3316 0c56 AD000000 		.4byte	0xad
 3317 0c5a BC000000 		.4byte	.LLST4
 3318 0c5e 19       		.uleb128 0x19
 3319 0c5f 90020000 		.4byte	.LASF205
 3320 0c63 01       		.byte	0x1
 3321 0c64 890A     		.2byte	0xa89
 3322 0c66 C5000000 		.4byte	0xc5
 3323 0c6a F6000000 		.4byte	.LLST5
 3324 0c6e 19       		.uleb128 0x19
 3325 0c6f 69020000 		.4byte	.LASF206
 3326 0c73 01       		.byte	0x1
 3327 0c74 8A0A     		.2byte	0xa8a
 3328 0c76 C5000000 		.4byte	0xc5
 3329 0c7a 20010000 		.4byte	.LLST6
 3330 0c7e 19       		.uleb128 0x19
 3331 0c7f 6B0F0000 		.4byte	.LASF207
 3332 0c83 01       		.byte	0x1
 3333 0c84 8B0A     		.2byte	0xa8b
 3334 0c86 C5000000 		.4byte	0xc5
 3335 0c8a 49010000 		.4byte	.LLST7
 3336 0c8e 00       		.byte	0
 3337 0c8f 1A       		.uleb128 0x1a
 3338 0c90 930C0000 		.4byte	.LASF256
 3339 0c94 01       		.byte	0x1
 3340 0c95 FB09     		.2byte	0x9fb
 3341 0c97 00000000 		.4byte	.LFB20
 3342 0c9b 26000000 		.4byte	.LFE20-.LFB20
 3343 0c9f 01       		.uleb128 0x1
 3344 0ca0 9C       		.byte	0x9c
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 121


 3345 0ca1 4B0D0000 		.4byte	0xd4b
 3346 0ca5 18       		.uleb128 0x18
 3347 0ca6 070C0000 		.4byte	.LASF208
 3348 0caa 01       		.byte	0x1
 3349 0cab FB09     		.2byte	0x9fb
 3350 0cad C5000000 		.4byte	0xc5
 3351 0cb1 5C010000 		.4byte	.LLST8
 3352 0cb5 18       		.uleb128 0x18
 3353 0cb6 24040000 		.4byte	.LASF209
 3354 0cba 01       		.byte	0x1
 3355 0cbb FB09     		.2byte	0x9fb
 3356 0cbd 4B0D0000 		.4byte	0xd4b
 3357 0cc1 7D010000 		.4byte	.LLST9
 3358 0cc5 19       		.uleb128 0x19
 3359 0cc6 14060000 		.4byte	.LASF204
 3360 0cca 01       		.byte	0x1
 3361 0ccb FD09     		.2byte	0x9fd
 3362 0ccd AD000000 		.4byte	0xad
 3363 0cd1 A9010000 		.4byte	.LLST10
 3364 0cd5 19       		.uleb128 0x19
 3365 0cd6 90020000 		.4byte	.LASF205
 3366 0cda 01       		.byte	0x1
 3367 0cdb FE09     		.2byte	0x9fe
 3368 0cdd AD000000 		.4byte	0xad
 3369 0ce1 BC010000 		.4byte	.LLST11
 3370 0ce5 19       		.uleb128 0x19
 3371 0ce6 79080000 		.4byte	.LASF201
 3372 0cea 01       		.byte	0x1
 3373 0ceb 020A     		.2byte	0xa02
 3374 0ced C5000000 		.4byte	0xc5
 3375 0cf1 CF010000 		.4byte	.LLST12
 3376 0cf5 19       		.uleb128 0x19
 3377 0cf6 89120000 		.4byte	.LASF200
 3378 0cfa 01       		.byte	0x1
 3379 0cfb 030A     		.2byte	0xa03
 3380 0cfd C5000000 		.4byte	0xc5
 3381 0d01 E2010000 		.4byte	.LLST13
 3382 0d05 1B       		.uleb128 0x1b
 3383 0d06 0A000000 		.4byte	.LVL27
 3384 0d0a F4150000 		.4byte	0x15f4
 3385 0d0e 1A0D0000 		.4byte	0xd1a
 3386 0d12 1C       		.uleb128 0x1c
 3387 0d13 01       		.uleb128 0x1
 3388 0d14 50       		.byte	0x50
 3389 0d15 03       		.uleb128 0x3
 3390 0d16 F3       		.byte	0xf3
 3391 0d17 01       		.uleb128 0x1
 3392 0d18 50       		.byte	0x50
 3393 0d19 00       		.byte	0
 3394 0d1a 1B       		.uleb128 0x1b
 3395 0d1b 12000000 		.4byte	.LVL29
 3396 0d1f D90B0000 		.4byte	0xbd9
 3397 0d23 340D0000 		.4byte	0xd34
 3398 0d27 1C       		.uleb128 0x1c
 3399 0d28 01       		.uleb128 0x1
 3400 0d29 50       		.byte	0x50
 3401 0d2a 02       		.uleb128 0x2
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 122


 3402 0d2b 76       		.byte	0x76
 3403 0d2c 00       		.sleb128 0
 3404 0d2d 1C       		.uleb128 0x1c
 3405 0d2e 01       		.uleb128 0x1
 3406 0d2f 51       		.byte	0x51
 3407 0d30 02       		.uleb128 0x2
 3408 0d31 74       		.byte	0x74
 3409 0d32 00       		.sleb128 0
 3410 0d33 00       		.byte	0
 3411 0d34 1D       		.uleb128 0x1d
 3412 0d35 1C000000 		.4byte	.LVL32
 3413 0d39 240C0000 		.4byte	0xc24
 3414 0d3d 1C       		.uleb128 0x1c
 3415 0d3e 01       		.uleb128 0x1
 3416 0d3f 50       		.byte	0x50
 3417 0d40 02       		.uleb128 0x2
 3418 0d41 76       		.byte	0x76
 3419 0d42 00       		.sleb128 0
 3420 0d43 1C       		.uleb128 0x1c
 3421 0d44 01       		.uleb128 0x1
 3422 0d45 51       		.byte	0x51
 3423 0d46 02       		.uleb128 0x2
 3424 0d47 74       		.byte	0x74
 3425 0d48 00       		.sleb128 0
 3426 0d49 00       		.byte	0
 3427 0d4a 00       		.byte	0
 3428 0d4b 07       		.uleb128 0x7
 3429 0d4c 04       		.byte	0x4
 3430 0d4d 9D050000 		.4byte	0x59d
 3431 0d51 1E       		.uleb128 0x1e
 3432 0d52 9A020000 		.4byte	.LASF289
 3433 0d56 01       		.byte	0x1
 3434 0d57 EC       		.byte	0xec
 3435 0d58 C5000000 		.4byte	0xc5
 3436 0d5c 00000000 		.4byte	.LFB1
 3437 0d60 10000000 		.4byte	.LFE1-.LFB1
 3438 0d64 01       		.uleb128 0x1
 3439 0d65 9C       		.byte	0x9c
 3440 0d66 1F       		.uleb128 0x1f
 3441 0d67 DE0D0000 		.4byte	.LASF212
 3442 0d6b 01       		.byte	0x1
 3443 0d6c 1A01     		.2byte	0x11a
 3444 0d6e E6000000 		.4byte	0xe6
 3445 0d72 00000000 		.4byte	.LFB2
 3446 0d76 40000000 		.4byte	.LFE2-.LFB2
 3447 0d7a 01       		.uleb128 0x1
 3448 0d7b 9C       		.byte	0x9c
 3449 0d7c AA0D0000 		.4byte	0xdaa
 3450 0d80 18       		.uleb128 0x18
 3451 0d81 D5120000 		.4byte	.LASF210
 3452 0d85 01       		.byte	0x1
 3453 0d86 1A01     		.2byte	0x11a
 3454 0d88 C5000000 		.4byte	0xc5
 3455 0d8c 00020000 		.4byte	.LLST14
 3456 0d90 19       		.uleb128 0x19
 3457 0d91 AC120000 		.4byte	.LASF211
 3458 0d95 01       		.byte	0x1
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 123


 3459 0d96 1C01     		.2byte	0x11c
 3460 0d98 E6000000 		.4byte	0xe6
 3461 0d9c 21020000 		.4byte	.LLST15
 3462 0da0 20       		.uleb128 0x20
 3463 0da1 38000000 		.4byte	.LVL38
 3464 0da5 FF150000 		.4byte	0x15ff
 3465 0da9 00       		.byte	0
 3466 0daa 1F       		.uleb128 0x1f
 3467 0dab 070A0000 		.4byte	.LASF213
 3468 0daf 01       		.byte	0x1
 3469 0db0 6D01     		.2byte	0x16d
 3470 0db2 E6000000 		.4byte	0xe6
 3471 0db6 00000000 		.4byte	.LFB3
 3472 0dba 2C000000 		.4byte	.LFE3-.LFB3
 3473 0dbe 01       		.uleb128 0x1
 3474 0dbf 9C       		.byte	0x9c
 3475 0dc0 DE0D0000 		.4byte	0xdde
 3476 0dc4 19       		.uleb128 0x19
 3477 0dc5 7D000000 		.4byte	.LASF214
 3478 0dc9 01       		.byte	0x1
 3479 0dca 6F01     		.2byte	0x16f
 3480 0dcc E6000000 		.4byte	0xe6
 3481 0dd0 3F020000 		.4byte	.LLST16
 3482 0dd4 20       		.uleb128 0x20
 3483 0dd5 16000000 		.4byte	.LVL41
 3484 0dd9 0A160000 		.4byte	0x160a
 3485 0ddd 00       		.byte	0
 3486 0dde 1F       		.uleb128 0x1f
 3487 0ddf C2100000 		.4byte	.LASF215
 3488 0de3 01       		.byte	0x1
 3489 0de4 AB01     		.2byte	0x1ab
 3490 0de6 E6000000 		.4byte	0xe6
 3491 0dea 00000000 		.4byte	.LFB4
 3492 0dee 3C000000 		.4byte	.LFE4-.LFB4
 3493 0df2 01       		.uleb128 0x1
 3494 0df3 9C       		.byte	0x9c
 3495 0df4 360E0000 		.4byte	0xe36
 3496 0df8 19       		.uleb128 0x19
 3497 0df9 7D000000 		.4byte	.LASF214
 3498 0dfd 01       		.byte	0x1
 3499 0dfe AD01     		.2byte	0x1ad
 3500 0e00 E6000000 		.4byte	0xe6
 3501 0e04 5E020000 		.4byte	.LLST17
 3502 0e08 19       		.uleb128 0x19
 3503 0e09 070C0000 		.4byte	.LASF208
 3504 0e0d 01       		.byte	0x1
 3505 0e0e AF01     		.2byte	0x1af
 3506 0e10 C5000000 		.4byte	0xc5
 3507 0e14 AC020000 		.4byte	.LLST18
 3508 0e18 1B       		.uleb128 0x1b
 3509 0e19 18000000 		.4byte	.LVL46
 3510 0e1d 660D0000 		.4byte	0xd66
 3511 0e21 2C0E0000 		.4byte	0xe2c
 3512 0e25 1C       		.uleb128 0x1c
 3513 0e26 01       		.uleb128 0x1
 3514 0e27 50       		.byte	0x50
 3515 0e28 02       		.uleb128 0x2
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 124


 3516 0e29 74       		.byte	0x74
 3517 0e2a 00       		.sleb128 0
 3518 0e2b 00       		.byte	0
 3519 0e2c 20       		.uleb128 0x20
 3520 0e2d 26000000 		.4byte	.LVL47
 3521 0e31 AA0D0000 		.4byte	0xdaa
 3522 0e35 00       		.byte	0
 3523 0e36 1F       		.uleb128 0x1f
 3524 0e37 9A000000 		.4byte	.LASF216
 3525 0e3b 01       		.byte	0x1
 3526 0e3c 1702     		.2byte	0x217
 3527 0e3e E6000000 		.4byte	0xe6
 3528 0e42 00000000 		.4byte	.LFB5
 3529 0e46 58000000 		.4byte	.LFE5-.LFB5
 3530 0e4a 01       		.uleb128 0x1
 3531 0e4b 9C       		.byte	0x9c
 3532 0e4c 8A0E0000 		.4byte	0xe8a
 3533 0e50 18       		.uleb128 0x18
 3534 0e51 D5120000 		.4byte	.LASF210
 3535 0e55 01       		.byte	0x1
 3536 0e56 1702     		.2byte	0x217
 3537 0e58 C5000000 		.4byte	0xc5
 3538 0e5c BF020000 		.4byte	.LLST19
 3539 0e60 18       		.uleb128 0x18
 3540 0e61 D7030000 		.4byte	.LASF217
 3541 0e65 01       		.byte	0x1
 3542 0e66 1702     		.2byte	0x217
 3543 0e68 C5000000 		.4byte	0xc5
 3544 0e6c E0020000 		.4byte	.LLST20
 3545 0e70 19       		.uleb128 0x19
 3546 0e71 AC120000 		.4byte	.LASF211
 3547 0e75 01       		.byte	0x1
 3548 0e76 1902     		.2byte	0x219
 3549 0e78 E6000000 		.4byte	0xe6
 3550 0e7c 01030000 		.4byte	.LLST21
 3551 0e80 20       		.uleb128 0x20
 3552 0e81 4C000000 		.4byte	.LVL53
 3553 0e85 15160000 		.4byte	0x1615
 3554 0e89 00       		.byte	0
 3555 0e8a 1F       		.uleb128 0x1f
 3556 0e8b C50F0000 		.4byte	.LASF218
 3557 0e8f 01       		.byte	0x1
 3558 0e90 8102     		.2byte	0x281
 3559 0e92 E6000000 		.4byte	0xe6
 3560 0e96 00000000 		.4byte	.LFB6
 3561 0e9a 2C000000 		.4byte	.LFE6-.LFB6
 3562 0e9e 01       		.uleb128 0x1
 3563 0e9f 9C       		.byte	0x9c
 3564 0ea0 BE0E0000 		.4byte	0xebe
 3565 0ea4 19       		.uleb128 0x19
 3566 0ea5 7D000000 		.4byte	.LASF214
 3567 0ea9 01       		.byte	0x1
 3568 0eaa 8302     		.2byte	0x283
 3569 0eac E6000000 		.4byte	0xe6
 3570 0eb0 1F030000 		.4byte	.LLST22
 3571 0eb4 20       		.uleb128 0x20
 3572 0eb5 16000000 		.4byte	.LVL56
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 125


 3573 0eb9 20160000 		.4byte	0x1620
 3574 0ebd 00       		.byte	0
 3575 0ebe 21       		.uleb128 0x21
 3576 0ebf EF0F0000 		.4byte	.LASF225
 3577 0ec3 01       		.byte	0x1
 3578 0ec4 4803     		.2byte	0x348
 3579 0ec6 00000000 		.4byte	.LFB8
 3580 0eca E8000000 		.4byte	.LFE8-.LFB8
 3581 0ece 01       		.uleb128 0x1
 3582 0ecf 9C       		.byte	0x9c
 3583 0ed0 9C0F0000 		.4byte	0xf9c
 3584 0ed4 18       		.uleb128 0x18
 3585 0ed5 D5120000 		.4byte	.LASF210
 3586 0ed9 01       		.byte	0x1
 3587 0eda 4803     		.2byte	0x348
 3588 0edc C5000000 		.4byte	0xc5
 3589 0ee0 3E030000 		.4byte	.LLST23
 3590 0ee4 18       		.uleb128 0x18
 3591 0ee5 3B000000 		.4byte	.LASF219
 3592 0ee9 01       		.byte	0x1
 3593 0eea 4803     		.2byte	0x348
 3594 0eec C5000000 		.4byte	0xc5
 3595 0ef0 5F030000 		.4byte	.LLST24
 3596 0ef4 18       		.uleb128 0x18
 3597 0ef5 B2100000 		.4byte	.LASF220
 3598 0ef9 01       		.byte	0x1
 3599 0efa 4803     		.2byte	0x348
 3600 0efc C5000000 		.4byte	0xc5
 3601 0f00 80030000 		.4byte	.LLST25
 3602 0f04 22       		.uleb128 0x22
 3603 0f05 38070000 		.4byte	.LASF221
 3604 0f09 01       		.byte	0x1
 3605 0f0a 4A03     		.2byte	0x34a
 3606 0f0c C5000000 		.4byte	0xc5
 3607 0f10 01       		.byte	0x1
 3608 0f11 19       		.uleb128 0x19
 3609 0f12 B8100000 		.4byte	.LASF222
 3610 0f16 01       		.byte	0x1
 3611 0f17 4B03     		.2byte	0x34b
 3612 0f19 C5000000 		.4byte	0xc5
 3613 0f1d AC030000 		.4byte	.LLST26
 3614 0f21 19       		.uleb128 0x19
 3615 0f22 C20C0000 		.4byte	.LASF223
 3616 0f26 01       		.byte	0x1
 3617 0f27 4C03     		.2byte	0x34c
 3618 0f29 AD000000 		.4byte	0xad
 3619 0f2d CB030000 		.4byte	.LLST27
 3620 0f31 19       		.uleb128 0x19
 3621 0f32 3C100000 		.4byte	.LASF224
 3622 0f36 01       		.byte	0x1
 3623 0f37 4D03     		.2byte	0x34d
 3624 0f39 9C0F0000 		.4byte	0xf9c
 3625 0f3d 0A040000 		.4byte	.LLST28
 3626 0f41 20       		.uleb128 0x20
 3627 0f42 1E000000 		.4byte	.LVL64
 3628 0f46 2B160000 		.4byte	0x162b
 3629 0f4a 20       		.uleb128 0x20
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 126


 3630 0f4b 3E000000 		.4byte	.LVL65
 3631 0f4f 36160000 		.4byte	0x1636
 3632 0f53 20       		.uleb128 0x20
 3633 0f54 54000000 		.4byte	.LVL66
 3634 0f58 2B160000 		.4byte	0x162b
 3635 0f5c 20       		.uleb128 0x20
 3636 0f5d 74000000 		.4byte	.LVL67
 3637 0f61 36160000 		.4byte	0x1636
 3638 0f65 20       		.uleb128 0x20
 3639 0f66 7A000000 		.4byte	.LVL68
 3640 0f6a 2B160000 		.4byte	0x162b
 3641 0f6e 20       		.uleb128 0x20
 3642 0f6f 8C000000 		.4byte	.LVL69
 3643 0f73 36160000 		.4byte	0x1636
 3644 0f77 20       		.uleb128 0x20
 3645 0f78 92000000 		.4byte	.LVL70
 3646 0f7c 2B160000 		.4byte	0x162b
 3647 0f80 20       		.uleb128 0x20
 3648 0f81 B2000000 		.4byte	.LVL71
 3649 0f85 36160000 		.4byte	0x1636
 3650 0f89 20       		.uleb128 0x20
 3651 0f8a B8000000 		.4byte	.LVL72
 3652 0f8e 2B160000 		.4byte	0x162b
 3653 0f92 20       		.uleb128 0x20
 3654 0f93 D8000000 		.4byte	.LVL73
 3655 0f97 36160000 		.4byte	0x1636
 3656 0f9b 00       		.byte	0
 3657 0f9c 07       		.uleb128 0x7
 3658 0f9d 04       		.byte	0x4
 3659 0f9e A20F0000 		.4byte	0xfa2
 3660 0fa2 23       		.uleb128 0x23
 3661 0fa3 79090000 		.4byte	0x979
 3662 0fa7 21       		.uleb128 0x21
 3663 0fa8 800D0000 		.4byte	.LASF226
 3664 0fac 01       		.byte	0x1
 3665 0fad 8E04     		.2byte	0x48e
 3666 0faf 00000000 		.4byte	.LFB11
 3667 0fb3 80000000 		.4byte	.LFE11-.LFB11
 3668 0fb7 01       		.uleb128 0x1
 3669 0fb8 9C       		.byte	0x9c
 3670 0fb9 50100000 		.4byte	0x1050
 3671 0fbd 18       		.uleb128 0x18
 3672 0fbe B2100000 		.4byte	.LASF220
 3673 0fc2 01       		.byte	0x1
 3674 0fc3 8E04     		.2byte	0x48e
 3675 0fc5 C5000000 		.4byte	0xc5
 3676 0fc9 1D040000 		.4byte	.LLST29
 3677 0fcd 19       		.uleb128 0x19
 3678 0fce C20C0000 		.4byte	.LASF223
 3679 0fd2 01       		.byte	0x1
 3680 0fd3 9004     		.2byte	0x490
 3681 0fd5 AD000000 		.4byte	0xad
 3682 0fd9 3E040000 		.4byte	.LLST30
 3683 0fdd 19       		.uleb128 0x19
 3684 0fde 59040000 		.4byte	.LASF227
 3685 0fe2 01       		.byte	0x1
 3686 0fe3 9204     		.2byte	0x492
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 127


 3687 0fe5 C5000000 		.4byte	0xc5
 3688 0fe9 51040000 		.4byte	.LLST31
 3689 0fed 19       		.uleb128 0x19
 3690 0fee FA060000 		.4byte	.LASF228
 3691 0ff2 01       		.byte	0x1
 3692 0ff3 9404     		.2byte	0x494
 3693 0ff5 C5000000 		.4byte	0xc5
 3694 0ff9 70040000 		.4byte	.LLST32
 3695 0ffd 19       		.uleb128 0x19
 3696 0ffe 29060000 		.4byte	.LASF229
 3697 1002 01       		.byte	0x1
 3698 1003 9504     		.2byte	0x495
 3699 1005 C5000000 		.4byte	0xc5
 3700 1009 8F040000 		.4byte	.LLST33
 3701 100d 19       		.uleb128 0x19
 3702 100e 2F080000 		.4byte	.LASF230
 3703 1012 01       		.byte	0x1
 3704 1013 9704     		.2byte	0x497
 3705 1015 C5000000 		.4byte	0xc5
 3706 1019 AE040000 		.4byte	.LLST34
 3707 101d 19       		.uleb128 0x19
 3708 101e 2C0A0000 		.4byte	.LASF231
 3709 1022 01       		.byte	0x1
 3710 1023 9804     		.2byte	0x498
 3711 1025 C5000000 		.4byte	0xc5
 3712 1029 D8040000 		.4byte	.LLST35
 3713 102d 19       		.uleb128 0x19
 3714 102e 7E050000 		.4byte	.LASF232
 3715 1032 01       		.byte	0x1
 3716 1033 9A04     		.2byte	0x49a
 3717 1035 9C0F0000 		.4byte	0xf9c
 3718 1039 EB040000 		.4byte	.LLST36
 3719 103d 20       		.uleb128 0x20
 3720 103e 34000000 		.4byte	.LVL84
 3721 1042 2B160000 		.4byte	0x162b
 3722 1046 20       		.uleb128 0x20
 3723 1047 6C000000 		.4byte	.LVL95
 3724 104b 36160000 		.4byte	0x1636
 3725 104f 00       		.byte	0
 3726 1050 24       		.uleb128 0x24
 3727 1051 C9110000 		.4byte	.LASF290
 3728 1055 01       		.byte	0x1
 3729 1056 2405     		.2byte	0x524
 3730 1058 00000000 		.4byte	.LFB12
 3731 105c 02000000 		.4byte	.LFE12-.LFB12
 3732 1060 01       		.uleb128 0x1
 3733 1061 9C       		.byte	0x9c
 3734 1062 21       		.uleb128 0x21
 3735 1063 110D0000 		.4byte	.LASF233
 3736 1067 01       		.byte	0x1
 3737 1068 7105     		.2byte	0x571
 3738 106a 00000000 		.4byte	.LFB13
 3739 106e 08000000 		.4byte	.LFE13-.LFB13
 3740 1072 01       		.uleb128 0x1
 3741 1073 9C       		.byte	0x9c
 3742 1074 9A100000 		.4byte	0x109a
 3743 1078 18       		.uleb128 0x18
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 128


 3744 1079 260F0000 		.4byte	.LASF234
 3745 107d 01       		.byte	0x1
 3746 107e 7105     		.2byte	0x571
 3747 1080 08010000 		.4byte	0x108
 3748 1084 FE040000 		.4byte	.LLST37
 3749 1088 1D       		.uleb128 0x1d
 3750 1089 06000000 		.4byte	.LVL103
 3751 108d 41160000 		.4byte	0x1641
 3752 1091 1C       		.uleb128 0x1c
 3753 1092 01       		.uleb128 0x1
 3754 1093 50       		.byte	0x50
 3755 1094 03       		.uleb128 0x3
 3756 1095 F3       		.byte	0xf3
 3757 1096 01       		.uleb128 0x1
 3758 1097 50       		.byte	0x50
 3759 1098 00       		.byte	0
 3760 1099 00       		.byte	0
 3761 109a 21       		.uleb128 0x21
 3762 109b B3020000 		.4byte	.LASF235
 3763 109f 01       		.byte	0x1
 3764 10a0 8805     		.2byte	0x588
 3765 10a2 00000000 		.4byte	.LFB14
 3766 10a6 30000000 		.4byte	.LFE14-.LFB14
 3767 10aa 01       		.uleb128 0x1
 3768 10ab 9C       		.byte	0x9c
 3769 10ac C1100000 		.4byte	0x10c1
 3770 10b0 18       		.uleb128 0x18
 3771 10b1 F3060000 		.4byte	.LASF236
 3772 10b5 01       		.byte	0x1
 3773 10b6 8805     		.2byte	0x588
 3774 10b8 C5000000 		.4byte	0xc5
 3775 10bc 1F050000 		.4byte	.LLST38
 3776 10c0 00       		.byte	0
 3777 10c1 21       		.uleb128 0x21
 3778 10c2 EE080000 		.4byte	.LASF237
 3779 10c6 01       		.byte	0x1
 3780 10c7 CC05     		.2byte	0x5cc
 3781 10c9 00000000 		.4byte	.LFB15
 3782 10cd 14000000 		.4byte	.LFE15-.LFB15
 3783 10d1 01       		.uleb128 0x1
 3784 10d2 9C       		.byte	0x9c
 3785 10d3 F8100000 		.4byte	0x10f8
 3786 10d7 18       		.uleb128 0x18
 3787 10d8 EE100000 		.4byte	.LASF238
 3788 10dc 01       		.byte	0x1
 3789 10dd CC05     		.2byte	0x5cc
 3790 10df C5000000 		.4byte	0xc5
 3791 10e3 4D050000 		.4byte	.LLST39
 3792 10e7 19       		.uleb128 0x19
 3793 10e8 0F120000 		.4byte	.LASF239
 3794 10ec 01       		.byte	0x1
 3795 10ed CF05     		.2byte	0x5cf
 3796 10ef C5000000 		.4byte	0xc5
 3797 10f3 7B050000 		.4byte	.LLST40
 3798 10f7 00       		.byte	0
 3799 10f8 21       		.uleb128 0x21
 3800 10f9 750B0000 		.4byte	.LASF240
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 129


 3801 10fd 01       		.byte	0x1
 3802 10fe 2006     		.2byte	0x620
 3803 1100 00000000 		.4byte	.LFB16
 3804 1104 12000000 		.4byte	.LFE16-.LFB16
 3805 1108 01       		.uleb128 0x1
 3806 1109 9C       		.byte	0x9c
 3807 110a 54110000 		.4byte	0x1154
 3808 110e 18       		.uleb128 0x18
 3809 110f EE100000 		.4byte	.LASF238
 3810 1113 01       		.byte	0x1
 3811 1114 2006     		.2byte	0x620
 3812 1116 C5000000 		.4byte	0xc5
 3813 111a A4050000 		.4byte	.LLST41
 3814 111e 18       		.uleb128 0x18
 3815 111f F3060000 		.4byte	.LASF236
 3816 1123 01       		.byte	0x1
 3817 1124 2006     		.2byte	0x620
 3818 1126 C5000000 		.4byte	0xc5
 3819 112a D0050000 		.4byte	.LLST42
 3820 112e 1B       		.uleb128 0x1b
 3821 112f 0A000000 		.4byte	.LVL115
 3822 1133 9A100000 		.4byte	0x109a
 3823 1137 43110000 		.4byte	0x1143
 3824 113b 1C       		.uleb128 0x1c
 3825 113c 01       		.uleb128 0x1
 3826 113d 50       		.byte	0x50
 3827 113e 03       		.uleb128 0x3
 3828 113f F3       		.byte	0xf3
 3829 1140 01       		.uleb128 0x1
 3830 1141 51       		.byte	0x51
 3831 1142 00       		.byte	0
 3832 1143 1D       		.uleb128 0x1d
 3833 1144 10000000 		.4byte	.LVL116
 3834 1148 C1100000 		.4byte	0x10c1
 3835 114c 1C       		.uleb128 0x1c
 3836 114d 01       		.uleb128 0x1
 3837 114e 50       		.byte	0x50
 3838 114f 02       		.uleb128 0x2
 3839 1150 74       		.byte	0x74
 3840 1151 00       		.sleb128 0
 3841 1152 00       		.byte	0
 3842 1153 00       		.byte	0
 3843 1154 1F       		.uleb128 0x1f
 3844 1155 B1080000 		.4byte	.LASF241
 3845 1159 01       		.byte	0x1
 3846 115a 5406     		.2byte	0x654
 3847 115c E6000000 		.4byte	0xe6
 3848 1160 00000000 		.4byte	.LFB17
 3849 1164 1A000000 		.4byte	.LFE17-.LFB17
 3850 1168 01       		.uleb128 0x1
 3851 1169 9C       		.byte	0x9c
 3852 116a A6110000 		.4byte	0x11a6
 3853 116e 18       		.uleb128 0x18
 3854 116f D5120000 		.4byte	.LASF210
 3855 1173 01       		.byte	0x1
 3856 1174 5406     		.2byte	0x654
 3857 1176 C5000000 		.4byte	0xc5
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 130


 3858 117a F1050000 		.4byte	.LLST43
 3859 117e 19       		.uleb128 0x19
 3860 117f B7090000 		.4byte	.LASF242
 3861 1183 01       		.byte	0x1
 3862 1184 5606     		.2byte	0x656
 3863 1186 E6000000 		.4byte	0xe6
 3864 118a 33060000 		.4byte	.LLST44
 3865 118e 1D       		.uleb128 0x1d
 3866 118f 18000000 		.4byte	.LVL124
 3867 1193 4C160000 		.4byte	0x164c
 3868 1197 1C       		.uleb128 0x1c
 3869 1198 01       		.uleb128 0x1
 3870 1199 50       		.byte	0x50
 3871 119a 03       		.uleb128 0x3
 3872 119b F3       		.byte	0xf3
 3873 119c 01       		.uleb128 0x1
 3874 119d 50       		.byte	0x50
 3875 119e 1C       		.uleb128 0x1c
 3876 119f 01       		.uleb128 0x1
 3877 11a0 51       		.byte	0x51
 3878 11a1 02       		.uleb128 0x2
 3879 11a2 08       		.byte	0x8
 3880 11a3 28       		.byte	0x28
 3881 11a4 00       		.byte	0
 3882 11a5 00       		.byte	0
 3883 11a6 1F       		.uleb128 0x1f
 3884 11a7 73020000 		.4byte	.LASF243
 3885 11ab 01       		.byte	0x1
 3886 11ac C906     		.2byte	0x6c9
 3887 11ae E6000000 		.4byte	0xe6
 3888 11b2 00000000 		.4byte	.LFB18
 3889 11b6 1A000000 		.4byte	.LFE18-.LFB18
 3890 11ba 01       		.uleb128 0x1
 3891 11bb 9C       		.byte	0x9c
 3892 11bc F1110000 		.4byte	0x11f1
 3893 11c0 19       		.uleb128 0x19
 3894 11c1 B7090000 		.4byte	.LASF242
 3895 11c5 01       		.byte	0x1
 3896 11c6 CB06     		.2byte	0x6cb
 3897 11c8 E6000000 		.4byte	0xe6
 3898 11cc 5D060000 		.4byte	.LLST45
 3899 11d0 19       		.uleb128 0x19
 3900 11d1 070C0000 		.4byte	.LASF208
 3901 11d5 01       		.byte	0x1
 3902 11d6 CC06     		.2byte	0x6cc
 3903 11d8 C5000000 		.4byte	0xc5
 3904 11dc 87060000 		.4byte	.LLST46
 3905 11e0 1D       		.uleb128 0x1d
 3906 11e1 0E000000 		.4byte	.LVL127
 3907 11e5 54110000 		.4byte	0x1154
 3908 11e9 1C       		.uleb128 0x1c
 3909 11ea 01       		.uleb128 0x1
 3910 11eb 50       		.byte	0x50
 3911 11ec 02       		.uleb128 0x2
 3912 11ed 74       		.byte	0x74
 3913 11ee 00       		.sleb128 0
 3914 11ef 00       		.byte	0
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 131


 3915 11f0 00       		.byte	0
 3916 11f1 21       		.uleb128 0x21
 3917 11f2 FC120000 		.4byte	.LASF244
 3918 11f6 01       		.byte	0x1
 3919 11f7 6409     		.2byte	0x964
 3920 11f9 00000000 		.4byte	.LFB19
 3921 11fd 24000000 		.4byte	.LFE19-.LFB19
 3922 1201 01       		.uleb128 0x1
 3923 1202 9C       		.byte	0x9c
 3924 1203 38120000 		.4byte	0x1238
 3925 1207 19       		.uleb128 0x19
 3926 1208 070C0000 		.4byte	.LASF208
 3927 120c 01       		.byte	0x1
 3928 120d 6609     		.2byte	0x966
 3929 120f C5000000 		.4byte	0xc5
 3930 1213 A6060000 		.4byte	.LLST47
 3931 1217 19       		.uleb128 0x19
 3932 1218 24040000 		.4byte	.LASF209
 3933 121c 01       		.byte	0x1
 3934 121d 6709     		.2byte	0x967
 3935 121f 4B0D0000 		.4byte	0xd4b
 3936 1223 C5060000 		.4byte	.LLST48
 3937 1227 1D       		.uleb128 0x1d
 3938 1228 18000000 		.4byte	.LVL135
 3939 122c 8F0C0000 		.4byte	0xc8f
 3940 1230 1C       		.uleb128 0x1c
 3941 1231 01       		.uleb128 0x1
 3942 1232 50       		.byte	0x50
 3943 1233 02       		.uleb128 0x2
 3944 1234 74       		.byte	0x74
 3945 1235 00       		.sleb128 0
 3946 1236 00       		.byte	0
 3947 1237 00       		.byte	0
 3948 1238 21       		.uleb128 0x21
 3949 1239 0F080000 		.4byte	.LASF245
 3950 123d 01       		.byte	0x1
 3951 123e 7A0B     		.2byte	0xb7a
 3952 1240 00000000 		.4byte	.LFB23
 3953 1244 D4000000 		.4byte	.LFE23-.LFB23
 3954 1248 01       		.uleb128 0x1
 3955 1249 9C       		.byte	0x9c
 3956 124a 31130000 		.4byte	0x1331
 3957 124e 18       		.uleb128 0x18
 3958 124f 11070000 		.4byte	.LASF246
 3959 1253 01       		.byte	0x1
 3960 1254 7A0B     		.2byte	0xb7a
 3961 1256 C5000000 		.4byte	0xc5
 3962 125a D8060000 		.4byte	.LLST49
 3963 125e 19       		.uleb128 0x19
 3964 125f AA020000 		.4byte	.LASF247
 3965 1263 01       		.byte	0x1
 3966 1264 7C0B     		.2byte	0xb7c
 3967 1266 C5000000 		.4byte	0xc5
 3968 126a 05070000 		.4byte	.LLST50
 3969 126e 19       		.uleb128 0x19
 3970 126f 29020000 		.4byte	.LASF248
 3971 1273 01       		.byte	0x1
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 132


 3972 1274 7D0B     		.2byte	0xb7d
 3973 1276 C5000000 		.4byte	0xc5
 3974 127a 24070000 		.4byte	.LLST51
 3975 127e 19       		.uleb128 0x19
 3976 127f 1D060000 		.4byte	.LASF249
 3977 1283 01       		.byte	0x1
 3978 1284 7E0B     		.2byte	0xb7e
 3979 1286 C5000000 		.4byte	0xc5
 3980 128a 42070000 		.4byte	.LLST52
 3981 128e 19       		.uleb128 0x19
 3982 128f 0F120000 		.4byte	.LASF239
 3983 1293 01       		.byte	0x1
 3984 1294 7F0B     		.2byte	0xb7f
 3985 1296 C5000000 		.4byte	0xc5
 3986 129a 60070000 		.4byte	.LLST53
 3987 129e 19       		.uleb128 0x19
 3988 129f C20C0000 		.4byte	.LASF223
 3989 12a3 01       		.byte	0x1
 3990 12a4 800B     		.2byte	0xb80
 3991 12a6 AD000000 		.4byte	0xad
 3992 12aa CB070000 		.4byte	.LLST54
 3993 12ae 20       		.uleb128 0x20
 3994 12af 38000000 		.4byte	.LVL143
 3995 12b3 2B160000 		.4byte	0x162b
 3996 12b7 20       		.uleb128 0x20
 3997 12b8 46000000 		.4byte	.LVL147
 3998 12bc 36160000 		.4byte	0x1636
 3999 12c0 20       		.uleb128 0x20
 4000 12c1 4A000000 		.4byte	.LVL148
 4001 12c5 2B160000 		.4byte	0x162b
 4002 12c9 20       		.uleb128 0x20
 4003 12ca 56000000 		.4byte	.LVL151
 4004 12ce 36160000 		.4byte	0x1636
 4005 12d2 20       		.uleb128 0x20
 4006 12d3 5A000000 		.4byte	.LVL152
 4007 12d7 2B160000 		.4byte	0x162b
 4008 12db 20       		.uleb128 0x20
 4009 12dc 6C000000 		.4byte	.LVL157
 4010 12e0 36160000 		.4byte	0x1636
 4011 12e4 1B       		.uleb128 0x1b
 4012 12e5 74000000 		.4byte	.LVL158
 4013 12e9 57160000 		.4byte	0x1657
 4014 12ed FA120000 		.4byte	0x12fa
 4015 12f1 1C       		.uleb128 0x1c
 4016 12f2 01       		.uleb128 0x1
 4017 12f3 50       		.byte	0x50
 4018 12f4 04       		.uleb128 0x4
 4019 12f5 7D       		.byte	0x7d
 4020 12f6 04       		.sleb128 4
 4021 12f7 94       		.byte	0x94
 4022 12f8 02       		.byte	0x2
 4023 12f9 00       		.byte	0
 4024 12fa 20       		.uleb128 0x20
 4025 12fb 78000000 		.4byte	.LVL159
 4026 12ff 2B160000 		.4byte	0x162b
 4027 1303 20       		.uleb128 0x20
 4028 1304 86000000 		.4byte	.LVL163
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 133


 4029 1308 36160000 		.4byte	0x1636
 4030 130c 20       		.uleb128 0x20
 4031 130d 8A000000 		.4byte	.LVL164
 4032 1311 2B160000 		.4byte	0x162b
 4033 1315 20       		.uleb128 0x20
 4034 1316 9A000000 		.4byte	.LVL168
 4035 131a 36160000 		.4byte	0x1636
 4036 131e 20       		.uleb128 0x20
 4037 131f 9E000000 		.4byte	.LVL169
 4038 1323 2B160000 		.4byte	0x162b
 4039 1327 20       		.uleb128 0x20
 4040 1328 B0000000 		.4byte	.LVL173
 4041 132c 36160000 		.4byte	0x1636
 4042 1330 00       		.byte	0
 4043 1331 1F       		.uleb128 0x1f
 4044 1332 27090000 		.4byte	.LASF250
 4045 1336 01       		.byte	0x1
 4046 1337 840C     		.2byte	0xc84
 4047 1339 A2000000 		.4byte	0xa2
 4048 133d 00000000 		.4byte	.LFB24
 4049 1341 24000000 		.4byte	.LFE24-.LFB24
 4050 1345 01       		.uleb128 0x1
 4051 1346 9C       		.byte	0x9c
 4052 1347 8B130000 		.4byte	0x138b
 4053 134b 18       		.uleb128 0x18
 4054 134c DC060000 		.4byte	.LASF251
 4055 1350 01       		.byte	0x1
 4056 1351 840C     		.2byte	0xc84
 4057 1353 A20B0000 		.4byte	0xba2
 4058 1357 15080000 		.4byte	.LLST55
 4059 135b 18       		.uleb128 0x18
 4060 135c B2100000 		.4byte	.LASF220
 4061 1360 01       		.byte	0x1
 4062 1361 840C     		.2byte	0xc84
 4063 1363 A2000000 		.4byte	0xa2
 4064 1367 4F080000 		.4byte	.LLST56
 4065 136b 19       		.uleb128 0x19
 4066 136c 1F0F0000 		.4byte	.LASF252
 4067 1370 01       		.byte	0x1
 4068 1371 860C     		.2byte	0xc86
 4069 1373 A2000000 		.4byte	0xa2
 4070 1377 70080000 		.4byte	.LLST57
 4071 137b 1D       		.uleb128 0x1d
 4072 137c 16000000 		.4byte	.LVL182
 4073 1380 62160000 		.4byte	0x1662
 4074 1384 1C       		.uleb128 0x1c
 4075 1385 01       		.uleb128 0x1
 4076 1386 50       		.byte	0x50
 4077 1387 01       		.uleb128 0x1
 4078 1388 30       		.byte	0x30
 4079 1389 00       		.byte	0
 4080 138a 00       		.byte	0
 4081 138b 21       		.uleb128 0x21
 4082 138c 150A0000 		.4byte	.LASF253
 4083 1390 01       		.byte	0x1
 4084 1391 D90C     		.2byte	0xcd9
 4085 1393 00000000 		.4byte	.LFB25
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 134


 4086 1397 1C000000 		.4byte	.LFE25-.LFB25
 4087 139b 01       		.uleb128 0x1
 4088 139c 9C       		.byte	0x9c
 4089 139d F4130000 		.4byte	0x13f4
 4090 13a1 18       		.uleb128 0x18
 4091 13a2 7D030000 		.4byte	.LASF254
 4092 13a6 01       		.byte	0x1
 4093 13a7 D90C     		.2byte	0xcd9
 4094 13a9 73090000 		.4byte	0x973
 4095 13ad 9B080000 		.4byte	.LLST58
 4096 13b1 18       		.uleb128 0x18
 4097 13b2 4D0B0000 		.4byte	.LASF160
 4098 13b6 01       		.byte	0x1
 4099 13b7 D90C     		.2byte	0xcd9
 4100 13b9 C5000000 		.4byte	0xc5
 4101 13bd C7080000 		.4byte	.LLST59
 4102 13c1 18       		.uleb128 0x18
 4103 13c2 23060000 		.4byte	.LASF255
 4104 13c6 01       		.byte	0x1
 4105 13c7 D90C     		.2byte	0xcd9
 4106 13c9 C5000000 		.4byte	0xc5
 4107 13cd F3080000 		.4byte	.LLST60
 4108 13d1 19       		.uleb128 0x19
 4109 13d2 C20C0000 		.4byte	.LASF223
 4110 13d6 01       		.byte	0x1
 4111 13d7 DB0C     		.2byte	0xcdb
 4112 13d9 AD000000 		.4byte	0xad
 4113 13dd 1F090000 		.4byte	.LLST61
 4114 13e1 20       		.uleb128 0x20
 4115 13e2 0C000000 		.4byte	.LVL185
 4116 13e6 2B160000 		.4byte	0x162b
 4117 13ea 20       		.uleb128 0x20
 4118 13eb 1A000000 		.4byte	.LVL187
 4119 13ef 36160000 		.4byte	0x1636
 4120 13f3 00       		.byte	0
 4121 13f4 1A       		.uleb128 0x1a
 4122 13f5 1A050000 		.4byte	.LASF257
 4123 13f9 01       		.byte	0x1
 4124 13fa E903     		.2byte	0x3e9
 4125 13fc 00000000 		.4byte	.LFB9
 4126 1400 28000000 		.4byte	.LFE9-.LFB9
 4127 1404 01       		.uleb128 0x1
 4128 1405 9C       		.byte	0x9c
 4129 1406 54140000 		.4byte	0x1454
 4130 140a 1B       		.uleb128 0x1b
 4131 140b 10000000 		.4byte	.LVL190
 4132 140f 8B130000 		.4byte	0x138b
 4133 1413 2A140000 		.4byte	0x142a
 4134 1417 1C       		.uleb128 0x1c
 4135 1418 01       		.uleb128 0x1
 4136 1419 50       		.byte	0x50
 4137 141a 02       		.uleb128 0x2
 4138 141b 74       		.byte	0x74
 4139 141c 00       		.sleb128 0
 4140 141d 1C       		.uleb128 0x1c
 4141 141e 01       		.uleb128 0x1
 4142 141f 51       		.byte	0x51
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 135


 4143 1420 03       		.uleb128 0x3
 4144 1421 0A       		.byte	0xa
 4145 1422 000F     		.2byte	0xf00
 4146 1424 1C       		.uleb128 0x1c
 4147 1425 01       		.uleb128 0x1
 4148 1426 52       		.byte	0x52
 4149 1427 01       		.uleb128 0x1
 4150 1428 30       		.byte	0x30
 4151 1429 00       		.byte	0
 4152 142a 1B       		.uleb128 0x1b
 4153 142b 1C000000 		.4byte	.LVL191
 4154 142f 8B130000 		.4byte	0x138b
 4155 1433 4A140000 		.4byte	0x144a
 4156 1437 1C       		.uleb128 0x1c
 4157 1438 01       		.uleb128 0x1
 4158 1439 50       		.byte	0x50
 4159 143a 02       		.uleb128 0x2
 4160 143b 74       		.byte	0x74
 4161 143c 00       		.sleb128 0
 4162 143d 1C       		.uleb128 0x1c
 4163 143e 01       		.uleb128 0x1
 4164 143f 51       		.byte	0x51
 4165 1440 03       		.uleb128 0x3
 4166 1441 0A       		.byte	0xa
 4167 1442 00F0     		.2byte	0xf000
 4168 1444 1C       		.uleb128 0x1c
 4169 1445 01       		.uleb128 0x1
 4170 1446 52       		.byte	0x52
 4171 1447 01       		.uleb128 0x1
 4172 1448 30       		.byte	0x30
 4173 1449 00       		.byte	0
 4174 144a 20       		.uleb128 0x20
 4175 144b 20000000 		.4byte	.LVL192
 4176 144f 6D160000 		.4byte	0x166d
 4177 1453 00       		.byte	0
 4178 1454 21       		.uleb128 0x21
 4179 1455 F5100000 		.4byte	.LASF258
 4180 1459 01       		.byte	0x1
 4181 145a 2B04     		.2byte	0x42b
 4182 145c 00000000 		.4byte	.LFB10
 4183 1460 40000000 		.4byte	.LFE10-.LFB10
 4184 1464 01       		.uleb128 0x1
 4185 1465 9C       		.byte	0x9c
 4186 1466 8D140000 		.4byte	0x148d
 4187 146a 18       		.uleb128 0x18
 4188 146b DC060000 		.4byte	.LASF251
 4189 146f 01       		.byte	0x1
 4190 1470 2B04     		.2byte	0x42b
 4191 1472 11050000 		.4byte	0x511
 4192 1476 32090000 		.4byte	.LLST62
 4193 147a 20       		.uleb128 0x20
 4194 147b 18000000 		.4byte	.LVL194
 4195 147f F4130000 		.4byte	0x13f4
 4196 1483 20       		.uleb128 0x20
 4197 1484 24000000 		.4byte	.LVL195
 4198 1488 78160000 		.4byte	0x1678
 4199 148c 00       		.byte	0
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 136


 4200 148d 1F       		.uleb128 0x1f
 4201 148e 63120000 		.4byte	.LASF259
 4202 1492 01       		.byte	0x1
 4203 1493 C302     		.2byte	0x2c3
 4204 1495 E6000000 		.4byte	0xe6
 4205 1499 00000000 		.4byte	.LFB7
 4206 149d 2C000000 		.4byte	.LFE7-.LFB7
 4207 14a1 01       		.uleb128 0x1
 4208 14a2 9C       		.byte	0x9c
 4209 14a3 F3140000 		.4byte	0x14f3
 4210 14a7 22       		.uleb128 0x22
 4211 14a8 9F110000 		.4byte	.LASF260
 4212 14ac 01       		.byte	0x1
 4213 14ad C502     		.2byte	0x2c5
 4214 14af E6000000 		.4byte	0xe6
 4215 14b3 00       		.byte	0
 4216 14b4 20       		.uleb128 0x20
 4217 14b5 06000000 		.4byte	.LVL197
 4218 14b9 F1110000 		.4byte	0x11f1
 4219 14bd 1B       		.uleb128 0x1b
 4220 14be 0C000000 		.4byte	.LVL198
 4221 14c2 A70F0000 		.4byte	0xfa7
 4222 14c6 D0140000 		.4byte	0x14d0
 4223 14ca 1C       		.uleb128 0x1c
 4224 14cb 01       		.uleb128 0x1
 4225 14cc 50       		.byte	0x50
 4226 14cd 01       		.uleb128 0x1
 4227 14ce 30       		.byte	0x30
 4228 14cf 00       		.byte	0
 4229 14d0 1B       		.uleb128 0x1b
 4230 14d1 1A000000 		.4byte	.LVL199
 4231 14d5 54140000 		.4byte	0x1454
 4232 14d9 E3140000 		.4byte	0x14e3
 4233 14dd 1C       		.uleb128 0x1c
 4234 14de 01       		.uleb128 0x1
 4235 14df 50       		.byte	0x50
 4236 14e0 01       		.uleb128 0x1
 4237 14e1 30       		.byte	0x30
 4238 14e2 00       		.byte	0
 4239 14e3 1D       		.uleb128 0x1d
 4240 14e4 20000000 		.4byte	.LVL200
 4241 14e8 54140000 		.4byte	0x1454
 4242 14ec 1C       		.uleb128 0x1c
 4243 14ed 01       		.uleb128 0x1
 4244 14ee 50       		.byte	0x50
 4245 14ef 01       		.uleb128 0x1
 4246 14f0 32       		.byte	0x32
 4247 14f1 00       		.byte	0
 4248 14f2 00       		.byte	0
 4249 14f3 25       		.uleb128 0x25
 4250 14f4 88080000 		.4byte	.LASF261
 4251 14f8 07       		.byte	0x7
 4252 14f9 D204     		.2byte	0x4d2
 4253 14fb E8080000 		.4byte	0x8e8
 4254 14ff 25       		.uleb128 0x25
 4255 1500 370E0000 		.4byte	.LASF262
 4256 1504 07       		.byte	0x7
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 137


 4257 1505 D304     		.2byte	0x4d3
 4258 1507 0B150000 		.4byte	0x150b
 4259 150b 23       		.uleb128 0x23
 4260 150c 640B0000 		.4byte	0xb64
 4261 1510 10       		.uleb128 0x10
 4262 1511 A20F0000 		.4byte	0xfa2
 4263 1515 20150000 		.4byte	0x1520
 4264 1519 11       		.uleb128 0x11
 4265 151a 9B060000 		.4byte	0x69b
 4266 151e 0D       		.byte	0xd
 4267 151f 00       		.byte	0
 4268 1520 25       		.uleb128 0x25
 4269 1521 B9110000 		.4byte	.LASF263
 4270 1525 07       		.byte	0x7
 4271 1526 D404     		.2byte	0x4d4
 4272 1528 2C150000 		.4byte	0x152c
 4273 152c 23       		.uleb128 0x23
 4274 152d 10150000 		.4byte	0x1510
 4275 1531 26       		.uleb128 0x26
 4276 1532 B2000000 		.4byte	.LASF264
 4277 1536 01       		.byte	0x1
 4278 1537 BC       		.byte	0xbc
 4279 1538 F2000000 		.4byte	0xf2
 4280 153c 05       		.uleb128 0x5
 4281 153d 03       		.byte	0x3
 4282 153e 00000000 		.4byte	CapSense_widgetIndex
 4283 1542 26       		.uleb128 0x26
 4284 1543 A6050000 		.4byte	.LASF265
 4285 1547 01       		.byte	0x1
 4286 1548 BD       		.byte	0xbd
 4287 1549 F2000000 		.4byte	0xf2
 4288 154d 05       		.uleb128 0x5
 4289 154e 03       		.byte	0x3
 4290 154f 00000000 		.4byte	CapSense_sensorIndex
 4291 1553 26       		.uleb128 0x26
 4292 1554 DE120000 		.4byte	.LASF266
 4293 1558 01       		.byte	0x1
 4294 1559 BE       		.byte	0xbe
 4295 155a AD000000 		.4byte	0xad
 4296 155e 05       		.uleb128 0x5
 4297 155f 03       		.byte	0x3
 4298 1560 00000000 		.4byte	CapSense_requestScanAllWidget
 4299 1564 26       		.uleb128 0x26
 4300 1565 29110000 		.4byte	.LASF267
 4301 1569 01       		.byte	0x1
 4302 156a C1       		.byte	0xc1
 4303 156b 1F0B0000 		.4byte	0xb1f
 4304 156f 05       		.uleb128 0x5
 4305 1570 03       		.byte	0x3
 4306 1571 00000000 		.4byte	CapSense_curRamSnsPtr
 4307 1575 26       		.uleb128 0x26
 4308 1576 BD0E0000 		.4byte	.LASF268
 4309 157a 01       		.byte	0x1
 4310 157b AF       		.byte	0xaf
 4311 157c 11050000 		.4byte	0x511
 4312 1580 05       		.uleb128 0x5
 4313 1581 03       		.byte	0x3
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 138


 4314 1582 00000000 		.4byte	CapSense_currentSenseMethod
 4315 1586 26       		.uleb128 0x26
 4316 1587 4B110000 		.4byte	.LASF269
 4317 158b 01       		.byte	0x1
 4318 158c B8       		.byte	0xb8
 4319 158d 97150000 		.4byte	0x1597
 4320 1591 05       		.uleb128 0x5
 4321 1592 03       		.byte	0x3
 4322 1593 00000000 		.4byte	CapSense_scanFreqIndex
 4323 1597 23       		.uleb128 0x23
 4324 1598 AD000000 		.4byte	0xad
 4325 159c 26       		.uleb128 0x26
 4326 159d 4D0C0000 		.4byte	.LASF270
 4327 15a1 01       		.byte	0x1
 4328 15a2 C7       		.byte	0xc7
 4329 15a3 AD150000 		.4byte	0x15ad
 4330 15a7 05       		.uleb128 0x5
 4331 15a8 03       		.byte	0x3
 4332 15a9 00000000 		.4byte	CapSense_curFlashWdgtPtr
 4333 15ad 07       		.uleb128 0x7
 4334 15ae 04       		.byte	0x4
 4335 15af B3150000 		.4byte	0x15b3
 4336 15b3 23       		.uleb128 0x23
 4337 15b4 310B0000 		.4byte	0xb31
 4338 15b8 26       		.uleb128 0x26
 4339 15b9 380B0000 		.4byte	.LASF271
 4340 15bd 01       		.byte	0x1
 4341 15be D0       		.byte	0xd0
 4342 15bf 9C0F0000 		.4byte	0xf9c
 4343 15c3 05       		.uleb128 0x5
 4344 15c4 03       		.byte	0x3
 4345 15c5 00000000 		.4byte	CapSense_curSnsIOPtr
 4346 15c9 10       		.uleb128 0x10
 4347 15ca D9150000 		.4byte	0x15d9
 4348 15ce D9150000 		.4byte	0x15d9
 4349 15d2 11       		.uleb128 0x11
 4350 15d3 9B060000 		.4byte	0x69b
 4351 15d7 05       		.byte	0x5
 4352 15d8 00       		.byte	0
 4353 15d9 23       		.uleb128 0x23
 4354 15da CE0B0000 		.4byte	0xbce
 4355 15de 26       		.uleb128 0x26
 4356 15df 20130000 		.4byte	.LASF272
 4357 15e3 01       		.byte	0x1
 4358 15e4 D2       		.byte	0xd2
 4359 15e5 EF150000 		.4byte	0x15ef
 4360 15e9 05       		.uleb128 0x5
 4361 15ea 03       		.byte	0x3
 4362 15eb 00000000 		.4byte	CapSense_idacGainTable
 4363 15ef 23       		.uleb128 0x23
 4364 15f0 C9150000 		.4byte	0x15c9
 4365 15f4 27       		.uleb128 0x27
 4366 15f5 1B120000 		.4byte	.LASF273
 4367 15f9 1B120000 		.4byte	.LASF273
 4368 15fd 09       		.byte	0x9
 4369 15fe 56       		.byte	0x56
 4370 15ff 27       		.uleb128 0x27
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 139


 4371 1600 75100000 		.4byte	.LASF274
 4372 1604 75100000 		.4byte	.LASF274
 4373 1608 09       		.byte	0x9
 4374 1609 3A       		.byte	0x3a
 4375 160a 27       		.uleb128 0x27
 4376 160b 60060000 		.4byte	.LASF275
 4377 160f 60060000 		.4byte	.LASF275
 4378 1613 09       		.byte	0x9
 4379 1614 3C       		.byte	0x3c
 4380 1615 27       		.uleb128 0x27
 4381 1616 EC0B0000 		.4byte	.LASF276
 4382 161a EC0B0000 		.4byte	.LASF276
 4383 161e 09       		.byte	0x9
 4384 161f 3B       		.byte	0x3b
 4385 1620 27       		.uleb128 0x27
 4386 1621 C7000000 		.4byte	.LASF277
 4387 1625 C7000000 		.4byte	.LASF277
 4388 1629 09       		.byte	0x9
 4389 162a 3D       		.byte	0x3d
 4390 162b 27       		.uleb128 0x27
 4391 162c 12110000 		.4byte	.LASF278
 4392 1630 12110000 		.4byte	.LASF278
 4393 1634 0A       		.byte	0xa
 4394 1635 F8       		.byte	0xf8
 4395 1636 27       		.uleb128 0x27
 4396 1637 F9070000 		.4byte	.LASF279
 4397 163b F9070000 		.4byte	.LASF279
 4398 163f 0A       		.byte	0xa
 4399 1640 F9       		.byte	0xf9
 4400 1641 27       		.uleb128 0x27
 4401 1642 2E0F0000 		.4byte	.LASF280
 4402 1646 2E0F0000 		.4byte	.LASF280
 4403 164a 0B       		.byte	0xb
 4404 164b 18       		.byte	0x18
 4405 164c 27       		.uleb128 0x27
 4406 164d C20B0000 		.4byte	.LASF281
 4407 1651 C20B0000 		.4byte	.LASF281
 4408 1655 09       		.byte	0x9
 4409 1656 40       		.byte	0x40
 4410 1657 27       		.uleb128 0x27
 4411 1658 AE0B0000 		.4byte	.LASF282
 4412 165c AE0B0000 		.4byte	.LASF282
 4413 1660 0A       		.byte	0xa
 4414 1661 ED       		.byte	0xed
 4415 1662 27       		.uleb128 0x27
 4416 1663 BF010000 		.4byte	.LASF283
 4417 1667 BF010000 		.4byte	.LASF283
 4418 166b 0A       		.byte	0xa
 4419 166c FA       		.byte	0xfa
 4420 166d 27       		.uleb128 0x27
 4421 166e FC0A0000 		.4byte	.LASF284
 4422 1672 FC0A0000 		.4byte	.LASF284
 4423 1676 09       		.byte	0x9
 4424 1677 55       		.byte	0x55
 4425 1678 27       		.uleb128 0x27
 4426 1679 520B0000 		.4byte	.LASF285
 4427 167d 520B0000 		.4byte	.LASF285
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 140


 4428 1681 09       		.byte	0x9
 4429 1682 54       		.byte	0x54
 4430 1683 00       		.byte	0
 4431              		.section	.debug_abbrev,"",%progbits
 4432              	.Ldebug_abbrev0:
 4433 0000 01       		.uleb128 0x1
 4434 0001 11       		.uleb128 0x11
 4435 0002 01       		.byte	0x1
 4436 0003 25       		.uleb128 0x25
 4437 0004 0E       		.uleb128 0xe
 4438 0005 13       		.uleb128 0x13
 4439 0006 0B       		.uleb128 0xb
 4440 0007 03       		.uleb128 0x3
 4441 0008 0E       		.uleb128 0xe
 4442 0009 1B       		.uleb128 0x1b
 4443 000a 0E       		.uleb128 0xe
 4444 000b 55       		.uleb128 0x55
 4445 000c 17       		.uleb128 0x17
 4446 000d 11       		.uleb128 0x11
 4447 000e 01       		.uleb128 0x1
 4448 000f 10       		.uleb128 0x10
 4449 0010 17       		.uleb128 0x17
 4450 0011 00       		.byte	0
 4451 0012 00       		.byte	0
 4452 0013 02       		.uleb128 0x2
 4453 0014 24       		.uleb128 0x24
 4454 0015 00       		.byte	0
 4455 0016 0B       		.uleb128 0xb
 4456 0017 0B       		.uleb128 0xb
 4457 0018 3E       		.uleb128 0x3e
 4458 0019 0B       		.uleb128 0xb
 4459 001a 03       		.uleb128 0x3
 4460 001b 0E       		.uleb128 0xe
 4461 001c 00       		.byte	0
 4462 001d 00       		.byte	0
 4463 001e 03       		.uleb128 0x3
 4464 001f 16       		.uleb128 0x16
 4465 0020 00       		.byte	0
 4466 0021 03       		.uleb128 0x3
 4467 0022 0E       		.uleb128 0xe
 4468 0023 3A       		.uleb128 0x3a
 4469 0024 0B       		.uleb128 0xb
 4470 0025 3B       		.uleb128 0x3b
 4471 0026 0B       		.uleb128 0xb
 4472 0027 49       		.uleb128 0x49
 4473 0028 13       		.uleb128 0x13
 4474 0029 00       		.byte	0
 4475 002a 00       		.byte	0
 4476 002b 04       		.uleb128 0x4
 4477 002c 24       		.uleb128 0x24
 4478 002d 00       		.byte	0
 4479 002e 0B       		.uleb128 0xb
 4480 002f 0B       		.uleb128 0xb
 4481 0030 3E       		.uleb128 0x3e
 4482 0031 0B       		.uleb128 0xb
 4483 0032 03       		.uleb128 0x3
 4484 0033 08       		.uleb128 0x8
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 141


 4485 0034 00       		.byte	0
 4486 0035 00       		.byte	0
 4487 0036 05       		.uleb128 0x5
 4488 0037 16       		.uleb128 0x16
 4489 0038 00       		.byte	0
 4490 0039 03       		.uleb128 0x3
 4491 003a 0E       		.uleb128 0xe
 4492 003b 3A       		.uleb128 0x3a
 4493 003c 0B       		.uleb128 0xb
 4494 003d 3B       		.uleb128 0x3b
 4495 003e 05       		.uleb128 0x5
 4496 003f 49       		.uleb128 0x49
 4497 0040 13       		.uleb128 0x13
 4498 0041 00       		.byte	0
 4499 0042 00       		.byte	0
 4500 0043 06       		.uleb128 0x6
 4501 0044 35       		.uleb128 0x35
 4502 0045 00       		.byte	0
 4503 0046 49       		.uleb128 0x49
 4504 0047 13       		.uleb128 0x13
 4505 0048 00       		.byte	0
 4506 0049 00       		.byte	0
 4507 004a 07       		.uleb128 0x7
 4508 004b 0F       		.uleb128 0xf
 4509 004c 00       		.byte	0
 4510 004d 0B       		.uleb128 0xb
 4511 004e 0B       		.uleb128 0xb
 4512 004f 49       		.uleb128 0x49
 4513 0050 13       		.uleb128 0x13
 4514 0051 00       		.byte	0
 4515 0052 00       		.byte	0
 4516 0053 08       		.uleb128 0x8
 4517 0054 15       		.uleb128 0x15
 4518 0055 00       		.byte	0
 4519 0056 27       		.uleb128 0x27
 4520 0057 19       		.uleb128 0x19
 4521 0058 00       		.byte	0
 4522 0059 00       		.byte	0
 4523 005a 09       		.uleb128 0x9
 4524 005b 13       		.uleb128 0x13
 4525 005c 01       		.byte	0x1
 4526 005d 0B       		.uleb128 0xb
 4527 005e 0B       		.uleb128 0xb
 4528 005f 3A       		.uleb128 0x3a
 4529 0060 0B       		.uleb128 0xb
 4530 0061 3B       		.uleb128 0x3b
 4531 0062 0B       		.uleb128 0xb
 4532 0063 01       		.uleb128 0x1
 4533 0064 13       		.uleb128 0x13
 4534 0065 00       		.byte	0
 4535 0066 00       		.byte	0
 4536 0067 0A       		.uleb128 0xa
 4537 0068 0D       		.uleb128 0xd
 4538 0069 00       		.byte	0
 4539 006a 03       		.uleb128 0x3
 4540 006b 0E       		.uleb128 0xe
 4541 006c 3A       		.uleb128 0x3a
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 142


 4542 006d 0B       		.uleb128 0xb
 4543 006e 3B       		.uleb128 0x3b
 4544 006f 0B       		.uleb128 0xb
 4545 0070 49       		.uleb128 0x49
 4546 0071 13       		.uleb128 0x13
 4547 0072 38       		.uleb128 0x38
 4548 0073 0B       		.uleb128 0xb
 4549 0074 00       		.byte	0
 4550 0075 00       		.byte	0
 4551 0076 0B       		.uleb128 0xb
 4552 0077 0D       		.uleb128 0xd
 4553 0078 00       		.byte	0
 4554 0079 03       		.uleb128 0x3
 4555 007a 0E       		.uleb128 0xe
 4556 007b 3A       		.uleb128 0x3a
 4557 007c 0B       		.uleb128 0xb
 4558 007d 3B       		.uleb128 0x3b
 4559 007e 05       		.uleb128 0x5
 4560 007f 49       		.uleb128 0x49
 4561 0080 13       		.uleb128 0x13
 4562 0081 38       		.uleb128 0x38
 4563 0082 0B       		.uleb128 0xb
 4564 0083 00       		.byte	0
 4565 0084 00       		.byte	0
 4566 0085 0C       		.uleb128 0xc
 4567 0086 04       		.uleb128 0x4
 4568 0087 01       		.byte	0x1
 4569 0088 0B       		.uleb128 0xb
 4570 0089 0B       		.uleb128 0xb
 4571 008a 49       		.uleb128 0x49
 4572 008b 13       		.uleb128 0x13
 4573 008c 3A       		.uleb128 0x3a
 4574 008d 0B       		.uleb128 0xb
 4575 008e 3B       		.uleb128 0x3b
 4576 008f 0B       		.uleb128 0xb
 4577 0090 01       		.uleb128 0x1
 4578 0091 13       		.uleb128 0x13
 4579 0092 00       		.byte	0
 4580 0093 00       		.byte	0
 4581 0094 0D       		.uleb128 0xd
 4582 0095 28       		.uleb128 0x28
 4583 0096 00       		.byte	0
 4584 0097 03       		.uleb128 0x3
 4585 0098 0E       		.uleb128 0xe
 4586 0099 1C       		.uleb128 0x1c
 4587 009a 0B       		.uleb128 0xb
 4588 009b 00       		.byte	0
 4589 009c 00       		.byte	0
 4590 009d 0E       		.uleb128 0xe
 4591 009e 0D       		.uleb128 0xd
 4592 009f 00       		.byte	0
 4593 00a0 03       		.uleb128 0x3
 4594 00a1 08       		.uleb128 0x8
 4595 00a2 3A       		.uleb128 0x3a
 4596 00a3 0B       		.uleb128 0xb
 4597 00a4 3B       		.uleb128 0x3b
 4598 00a5 0B       		.uleb128 0xb
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 143


 4599 00a6 49       		.uleb128 0x49
 4600 00a7 13       		.uleb128 0x13
 4601 00a8 38       		.uleb128 0x38
 4602 00a9 0B       		.uleb128 0xb
 4603 00aa 00       		.byte	0
 4604 00ab 00       		.byte	0
 4605 00ac 0F       		.uleb128 0xf
 4606 00ad 13       		.uleb128 0x13
 4607 00ae 01       		.byte	0x1
 4608 00af 0B       		.uleb128 0xb
 4609 00b0 0B       		.uleb128 0xb
 4610 00b1 3A       		.uleb128 0x3a
 4611 00b2 0B       		.uleb128 0xb
 4612 00b3 3B       		.uleb128 0x3b
 4613 00b4 05       		.uleb128 0x5
 4614 00b5 01       		.uleb128 0x1
 4615 00b6 13       		.uleb128 0x13
 4616 00b7 00       		.byte	0
 4617 00b8 00       		.byte	0
 4618 00b9 10       		.uleb128 0x10
 4619 00ba 01       		.uleb128 0x1
 4620 00bb 01       		.byte	0x1
 4621 00bc 49       		.uleb128 0x49
 4622 00bd 13       		.uleb128 0x13
 4623 00be 01       		.uleb128 0x1
 4624 00bf 13       		.uleb128 0x13
 4625 00c0 00       		.byte	0
 4626 00c1 00       		.byte	0
 4627 00c2 11       		.uleb128 0x11
 4628 00c3 21       		.uleb128 0x21
 4629 00c4 00       		.byte	0
 4630 00c5 49       		.uleb128 0x49
 4631 00c6 13       		.uleb128 0x13
 4632 00c7 2F       		.uleb128 0x2f
 4633 00c8 0B       		.uleb128 0xb
 4634 00c9 00       		.byte	0
 4635 00ca 00       		.byte	0
 4636 00cb 12       		.uleb128 0x12
 4637 00cc 0D       		.uleb128 0xd
 4638 00cd 00       		.byte	0
 4639 00ce 03       		.uleb128 0x3
 4640 00cf 08       		.uleb128 0x8
 4641 00d0 3A       		.uleb128 0x3a
 4642 00d1 0B       		.uleb128 0xb
 4643 00d2 3B       		.uleb128 0x3b
 4644 00d3 05       		.uleb128 0x5
 4645 00d4 49       		.uleb128 0x49
 4646 00d5 13       		.uleb128 0x13
 4647 00d6 38       		.uleb128 0x38
 4648 00d7 0B       		.uleb128 0xb
 4649 00d8 00       		.byte	0
 4650 00d9 00       		.byte	0
 4651 00da 13       		.uleb128 0x13
 4652 00db 13       		.uleb128 0x13
 4653 00dc 01       		.byte	0x1
 4654 00dd 0B       		.uleb128 0xb
 4655 00de 05       		.uleb128 0x5
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 144


 4656 00df 3A       		.uleb128 0x3a
 4657 00e0 0B       		.uleb128 0xb
 4658 00e1 3B       		.uleb128 0x3b
 4659 00e2 05       		.uleb128 0x5
 4660 00e3 01       		.uleb128 0x1
 4661 00e4 13       		.uleb128 0x13
 4662 00e5 00       		.byte	0
 4663 00e6 00       		.byte	0
 4664 00e7 14       		.uleb128 0x14
 4665 00e8 0D       		.uleb128 0xd
 4666 00e9 00       		.byte	0
 4667 00ea 03       		.uleb128 0x3
 4668 00eb 0E       		.uleb128 0xe
 4669 00ec 3A       		.uleb128 0x3a
 4670 00ed 0B       		.uleb128 0xb
 4671 00ee 3B       		.uleb128 0x3b
 4672 00ef 05       		.uleb128 0x5
 4673 00f0 49       		.uleb128 0x49
 4674 00f1 13       		.uleb128 0x13
 4675 00f2 38       		.uleb128 0x38
 4676 00f3 05       		.uleb128 0x5
 4677 00f4 00       		.byte	0
 4678 00f5 00       		.byte	0
 4679 00f6 15       		.uleb128 0x15
 4680 00f7 26       		.uleb128 0x26
 4681 00f8 00       		.byte	0
 4682 00f9 00       		.byte	0
 4683 00fa 00       		.byte	0
 4684 00fb 16       		.uleb128 0x16
 4685 00fc 0F       		.uleb128 0xf
 4686 00fd 00       		.byte	0
 4687 00fe 0B       		.uleb128 0xb
 4688 00ff 0B       		.uleb128 0xb
 4689 0100 00       		.byte	0
 4690 0101 00       		.byte	0
 4691 0102 17       		.uleb128 0x17
 4692 0103 2E       		.uleb128 0x2e
 4693 0104 01       		.byte	0x1
 4694 0105 03       		.uleb128 0x3
 4695 0106 0E       		.uleb128 0xe
 4696 0107 3A       		.uleb128 0x3a
 4697 0108 0B       		.uleb128 0xb
 4698 0109 3B       		.uleb128 0x3b
 4699 010a 05       		.uleb128 0x5
 4700 010b 27       		.uleb128 0x27
 4701 010c 19       		.uleb128 0x19
 4702 010d 49       		.uleb128 0x49
 4703 010e 13       		.uleb128 0x13
 4704 010f 11       		.uleb128 0x11
 4705 0110 01       		.uleb128 0x1
 4706 0111 12       		.uleb128 0x12
 4707 0112 06       		.uleb128 0x6
 4708 0113 40       		.uleb128 0x40
 4709 0114 18       		.uleb128 0x18
 4710 0115 9642     		.uleb128 0x2116
 4711 0117 19       		.uleb128 0x19
 4712 0118 01       		.uleb128 0x1
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 145


 4713 0119 13       		.uleb128 0x13
 4714 011a 00       		.byte	0
 4715 011b 00       		.byte	0
 4716 011c 18       		.uleb128 0x18
 4717 011d 05       		.uleb128 0x5
 4718 011e 00       		.byte	0
 4719 011f 03       		.uleb128 0x3
 4720 0120 0E       		.uleb128 0xe
 4721 0121 3A       		.uleb128 0x3a
 4722 0122 0B       		.uleb128 0xb
 4723 0123 3B       		.uleb128 0x3b
 4724 0124 05       		.uleb128 0x5
 4725 0125 49       		.uleb128 0x49
 4726 0126 13       		.uleb128 0x13
 4727 0127 02       		.uleb128 0x2
 4728 0128 17       		.uleb128 0x17
 4729 0129 00       		.byte	0
 4730 012a 00       		.byte	0
 4731 012b 19       		.uleb128 0x19
 4732 012c 34       		.uleb128 0x34
 4733 012d 00       		.byte	0
 4734 012e 03       		.uleb128 0x3
 4735 012f 0E       		.uleb128 0xe
 4736 0130 3A       		.uleb128 0x3a
 4737 0131 0B       		.uleb128 0xb
 4738 0132 3B       		.uleb128 0x3b
 4739 0133 05       		.uleb128 0x5
 4740 0134 49       		.uleb128 0x49
 4741 0135 13       		.uleb128 0x13
 4742 0136 02       		.uleb128 0x2
 4743 0137 17       		.uleb128 0x17
 4744 0138 00       		.byte	0
 4745 0139 00       		.byte	0
 4746 013a 1A       		.uleb128 0x1a
 4747 013b 2E       		.uleb128 0x2e
 4748 013c 01       		.byte	0x1
 4749 013d 03       		.uleb128 0x3
 4750 013e 0E       		.uleb128 0xe
 4751 013f 3A       		.uleb128 0x3a
 4752 0140 0B       		.uleb128 0xb
 4753 0141 3B       		.uleb128 0x3b
 4754 0142 05       		.uleb128 0x5
 4755 0143 27       		.uleb128 0x27
 4756 0144 19       		.uleb128 0x19
 4757 0145 11       		.uleb128 0x11
 4758 0146 01       		.uleb128 0x1
 4759 0147 12       		.uleb128 0x12
 4760 0148 06       		.uleb128 0x6
 4761 0149 40       		.uleb128 0x40
 4762 014a 18       		.uleb128 0x18
 4763 014b 9742     		.uleb128 0x2117
 4764 014d 19       		.uleb128 0x19
 4765 014e 01       		.uleb128 0x1
 4766 014f 13       		.uleb128 0x13
 4767 0150 00       		.byte	0
 4768 0151 00       		.byte	0
 4769 0152 1B       		.uleb128 0x1b
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 146


 4770 0153 898201   		.uleb128 0x4109
 4771 0156 01       		.byte	0x1
 4772 0157 11       		.uleb128 0x11
 4773 0158 01       		.uleb128 0x1
 4774 0159 31       		.uleb128 0x31
 4775 015a 13       		.uleb128 0x13
 4776 015b 01       		.uleb128 0x1
 4777 015c 13       		.uleb128 0x13
 4778 015d 00       		.byte	0
 4779 015e 00       		.byte	0
 4780 015f 1C       		.uleb128 0x1c
 4781 0160 8A8201   		.uleb128 0x410a
 4782 0163 00       		.byte	0
 4783 0164 02       		.uleb128 0x2
 4784 0165 18       		.uleb128 0x18
 4785 0166 9142     		.uleb128 0x2111
 4786 0168 18       		.uleb128 0x18
 4787 0169 00       		.byte	0
 4788 016a 00       		.byte	0
 4789 016b 1D       		.uleb128 0x1d
 4790 016c 898201   		.uleb128 0x4109
 4791 016f 01       		.byte	0x1
 4792 0170 11       		.uleb128 0x11
 4793 0171 01       		.uleb128 0x1
 4794 0172 31       		.uleb128 0x31
 4795 0173 13       		.uleb128 0x13
 4796 0174 00       		.byte	0
 4797 0175 00       		.byte	0
 4798 0176 1E       		.uleb128 0x1e
 4799 0177 2E       		.uleb128 0x2e
 4800 0178 00       		.byte	0
 4801 0179 3F       		.uleb128 0x3f
 4802 017a 19       		.uleb128 0x19
 4803 017b 03       		.uleb128 0x3
 4804 017c 0E       		.uleb128 0xe
 4805 017d 3A       		.uleb128 0x3a
 4806 017e 0B       		.uleb128 0xb
 4807 017f 3B       		.uleb128 0x3b
 4808 0180 0B       		.uleb128 0xb
 4809 0181 27       		.uleb128 0x27
 4810 0182 19       		.uleb128 0x19
 4811 0183 49       		.uleb128 0x49
 4812 0184 13       		.uleb128 0x13
 4813 0185 11       		.uleb128 0x11
 4814 0186 01       		.uleb128 0x1
 4815 0187 12       		.uleb128 0x12
 4816 0188 06       		.uleb128 0x6
 4817 0189 40       		.uleb128 0x40
 4818 018a 18       		.uleb128 0x18
 4819 018b 9742     		.uleb128 0x2117
 4820 018d 19       		.uleb128 0x19
 4821 018e 00       		.byte	0
 4822 018f 00       		.byte	0
 4823 0190 1F       		.uleb128 0x1f
 4824 0191 2E       		.uleb128 0x2e
 4825 0192 01       		.byte	0x1
 4826 0193 3F       		.uleb128 0x3f
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 147


 4827 0194 19       		.uleb128 0x19
 4828 0195 03       		.uleb128 0x3
 4829 0196 0E       		.uleb128 0xe
 4830 0197 3A       		.uleb128 0x3a
 4831 0198 0B       		.uleb128 0xb
 4832 0199 3B       		.uleb128 0x3b
 4833 019a 05       		.uleb128 0x5
 4834 019b 27       		.uleb128 0x27
 4835 019c 19       		.uleb128 0x19
 4836 019d 49       		.uleb128 0x49
 4837 019e 13       		.uleb128 0x13
 4838 019f 11       		.uleb128 0x11
 4839 01a0 01       		.uleb128 0x1
 4840 01a1 12       		.uleb128 0x12
 4841 01a2 06       		.uleb128 0x6
 4842 01a3 40       		.uleb128 0x40
 4843 01a4 18       		.uleb128 0x18
 4844 01a5 9742     		.uleb128 0x2117
 4845 01a7 19       		.uleb128 0x19
 4846 01a8 01       		.uleb128 0x1
 4847 01a9 13       		.uleb128 0x13
 4848 01aa 00       		.byte	0
 4849 01ab 00       		.byte	0
 4850 01ac 20       		.uleb128 0x20
 4851 01ad 898201   		.uleb128 0x4109
 4852 01b0 00       		.byte	0
 4853 01b1 11       		.uleb128 0x11
 4854 01b2 01       		.uleb128 0x1
 4855 01b3 31       		.uleb128 0x31
 4856 01b4 13       		.uleb128 0x13
 4857 01b5 00       		.byte	0
 4858 01b6 00       		.byte	0
 4859 01b7 21       		.uleb128 0x21
 4860 01b8 2E       		.uleb128 0x2e
 4861 01b9 01       		.byte	0x1
 4862 01ba 3F       		.uleb128 0x3f
 4863 01bb 19       		.uleb128 0x19
 4864 01bc 03       		.uleb128 0x3
 4865 01bd 0E       		.uleb128 0xe
 4866 01be 3A       		.uleb128 0x3a
 4867 01bf 0B       		.uleb128 0xb
 4868 01c0 3B       		.uleb128 0x3b
 4869 01c1 05       		.uleb128 0x5
 4870 01c2 27       		.uleb128 0x27
 4871 01c3 19       		.uleb128 0x19
 4872 01c4 11       		.uleb128 0x11
 4873 01c5 01       		.uleb128 0x1
 4874 01c6 12       		.uleb128 0x12
 4875 01c7 06       		.uleb128 0x6
 4876 01c8 40       		.uleb128 0x40
 4877 01c9 18       		.uleb128 0x18
 4878 01ca 9742     		.uleb128 0x2117
 4879 01cc 19       		.uleb128 0x19
 4880 01cd 01       		.uleb128 0x1
 4881 01ce 13       		.uleb128 0x13
 4882 01cf 00       		.byte	0
 4883 01d0 00       		.byte	0
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 148


 4884 01d1 22       		.uleb128 0x22
 4885 01d2 34       		.uleb128 0x34
 4886 01d3 00       		.byte	0
 4887 01d4 03       		.uleb128 0x3
 4888 01d5 0E       		.uleb128 0xe
 4889 01d6 3A       		.uleb128 0x3a
 4890 01d7 0B       		.uleb128 0xb
 4891 01d8 3B       		.uleb128 0x3b
 4892 01d9 05       		.uleb128 0x5
 4893 01da 49       		.uleb128 0x49
 4894 01db 13       		.uleb128 0x13
 4895 01dc 1C       		.uleb128 0x1c
 4896 01dd 0B       		.uleb128 0xb
 4897 01de 00       		.byte	0
 4898 01df 00       		.byte	0
 4899 01e0 23       		.uleb128 0x23
 4900 01e1 26       		.uleb128 0x26
 4901 01e2 00       		.byte	0
 4902 01e3 49       		.uleb128 0x49
 4903 01e4 13       		.uleb128 0x13
 4904 01e5 00       		.byte	0
 4905 01e6 00       		.byte	0
 4906 01e7 24       		.uleb128 0x24
 4907 01e8 2E       		.uleb128 0x2e
 4908 01e9 00       		.byte	0
 4909 01ea 3F       		.uleb128 0x3f
 4910 01eb 19       		.uleb128 0x19
 4911 01ec 03       		.uleb128 0x3
 4912 01ed 0E       		.uleb128 0xe
 4913 01ee 3A       		.uleb128 0x3a
 4914 01ef 0B       		.uleb128 0xb
 4915 01f0 3B       		.uleb128 0x3b
 4916 01f1 05       		.uleb128 0x5
 4917 01f2 27       		.uleb128 0x27
 4918 01f3 19       		.uleb128 0x19
 4919 01f4 11       		.uleb128 0x11
 4920 01f5 01       		.uleb128 0x1
 4921 01f6 12       		.uleb128 0x12
 4922 01f7 06       		.uleb128 0x6
 4923 01f8 40       		.uleb128 0x40
 4924 01f9 18       		.uleb128 0x18
 4925 01fa 9742     		.uleb128 0x2117
 4926 01fc 19       		.uleb128 0x19
 4927 01fd 00       		.byte	0
 4928 01fe 00       		.byte	0
 4929 01ff 25       		.uleb128 0x25
 4930 0200 34       		.uleb128 0x34
 4931 0201 00       		.byte	0
 4932 0202 03       		.uleb128 0x3
 4933 0203 0E       		.uleb128 0xe
 4934 0204 3A       		.uleb128 0x3a
 4935 0205 0B       		.uleb128 0xb
 4936 0206 3B       		.uleb128 0x3b
 4937 0207 05       		.uleb128 0x5
 4938 0208 49       		.uleb128 0x49
 4939 0209 13       		.uleb128 0x13
 4940 020a 3F       		.uleb128 0x3f
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 149


 4941 020b 19       		.uleb128 0x19
 4942 020c 3C       		.uleb128 0x3c
 4943 020d 19       		.uleb128 0x19
 4944 020e 00       		.byte	0
 4945 020f 00       		.byte	0
 4946 0210 26       		.uleb128 0x26
 4947 0211 34       		.uleb128 0x34
 4948 0212 00       		.byte	0
 4949 0213 03       		.uleb128 0x3
 4950 0214 0E       		.uleb128 0xe
 4951 0215 3A       		.uleb128 0x3a
 4952 0216 0B       		.uleb128 0xb
 4953 0217 3B       		.uleb128 0x3b
 4954 0218 0B       		.uleb128 0xb
 4955 0219 49       		.uleb128 0x49
 4956 021a 13       		.uleb128 0x13
 4957 021b 3F       		.uleb128 0x3f
 4958 021c 19       		.uleb128 0x19
 4959 021d 02       		.uleb128 0x2
 4960 021e 18       		.uleb128 0x18
 4961 021f 00       		.byte	0
 4962 0220 00       		.byte	0
 4963 0221 27       		.uleb128 0x27
 4964 0222 2E       		.uleb128 0x2e
 4965 0223 00       		.byte	0
 4966 0224 3F       		.uleb128 0x3f
 4967 0225 19       		.uleb128 0x19
 4968 0226 3C       		.uleb128 0x3c
 4969 0227 19       		.uleb128 0x19
 4970 0228 6E       		.uleb128 0x6e
 4971 0229 0E       		.uleb128 0xe
 4972 022a 03       		.uleb128 0x3
 4973 022b 0E       		.uleb128 0xe
 4974 022c 3A       		.uleb128 0x3a
 4975 022d 0B       		.uleb128 0xb
 4976 022e 3B       		.uleb128 0x3b
 4977 022f 0B       		.uleb128 0xb
 4978 0230 00       		.byte	0
 4979 0231 00       		.byte	0
 4980 0232 00       		.byte	0
 4981              		.section	.debug_loc,"",%progbits
 4982              	.Ldebug_loc0:
 4983              	.LLST0:
 4984 0000 00000000 		.4byte	.LVL0
 4985 0004 14000000 		.4byte	.LVL3
 4986 0008 0100     		.2byte	0x1
 4987 000a 50       		.byte	0x50
 4988 000b 14000000 		.4byte	.LVL3
 4989 000f 76000000 		.4byte	.LVL9
 4990 0013 0100     		.2byte	0x1
 4991 0015 54       		.byte	0x54
 4992 0016 76000000 		.4byte	.LVL9
 4993 001a 84000000 		.4byte	.LFE21
 4994 001e 0400     		.2byte	0x4
 4995 0020 F3       		.byte	0xf3
 4996 0021 01       		.uleb128 0x1
 4997 0022 50       		.byte	0x50
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 150


 4998 0023 9F       		.byte	0x9f
 4999 0024 00000000 		.4byte	0
 5000 0028 00000000 		.4byte	0
 5001              	.LLST1:
 5002 002c 00000000 		.4byte	.LVL0
 5003 0030 12000000 		.4byte	.LVL2
 5004 0034 0100     		.2byte	0x1
 5005 0036 51       		.byte	0x51
 5006 0037 12000000 		.4byte	.LVL2
 5007 003b 76000000 		.4byte	.LVL10
 5008 003f 0100     		.2byte	0x1
 5009 0041 55       		.byte	0x55
 5010 0042 76000000 		.4byte	.LVL10
 5011 0046 84000000 		.4byte	.LFE21
 5012 004a 0400     		.2byte	0x4
 5013 004c F3       		.byte	0xf3
 5014 004d 01       		.uleb128 0x1
 5015 004e 51       		.byte	0x51
 5016 004f 9F       		.byte	0x9f
 5017 0050 00000000 		.4byte	0
 5018 0054 00000000 		.4byte	0
 5019              	.LLST2:
 5020 0058 06000000 		.4byte	.LVL1
 5021 005c 76000000 		.4byte	.LVL8
 5022 0060 0200     		.2byte	0x2
 5023 0062 30       		.byte	0x30
 5024 0063 9F       		.byte	0x9f
 5025 0064 76000000 		.4byte	.LVL8
 5026 0068 84000000 		.4byte	.LFE21
 5027 006c 0100     		.2byte	0x1
 5028 006e 50       		.byte	0x50
 5029 006f 00000000 		.4byte	0
 5030 0073 00000000 		.4byte	0
 5031              	.LLST3:
 5032 0077 00000000 		.4byte	.LVL11
 5033 007b 20000000 		.4byte	.LVL15
 5034 007f 0100     		.2byte	0x1
 5035 0081 50       		.byte	0x50
 5036 0082 20000000 		.4byte	.LVL15
 5037 0086 23000000 		.4byte	.LVL16-1
 5038 008a 0100     		.2byte	0x1
 5039 008c 51       		.byte	0x51
 5040 008d 23000000 		.4byte	.LVL16-1
 5041 0091 38000000 		.4byte	.LVL21
 5042 0095 0400     		.2byte	0x4
 5043 0097 F3       		.byte	0xf3
 5044 0098 01       		.uleb128 0x1
 5045 0099 50       		.byte	0x50
 5046 009a 9F       		.byte	0x9f
 5047 009b 38000000 		.4byte	.LVL21
 5048 009f 3E000000 		.4byte	.LVL24
 5049 00a3 0100     		.2byte	0x1
 5050 00a5 50       		.byte	0x50
 5051 00a6 3E000000 		.4byte	.LVL24
 5052 00aa 42000000 		.4byte	.LFE22
 5053 00ae 0400     		.2byte	0x4
 5054 00b0 F3       		.byte	0xf3
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 151


 5055 00b1 01       		.uleb128 0x1
 5056 00b2 50       		.byte	0x50
 5057 00b3 9F       		.byte	0x9f
 5058 00b4 00000000 		.4byte	0
 5059 00b8 00000000 		.4byte	0
 5060              	.LLST4:
 5061 00bc 00000000 		.4byte	.LVL11
 5062 00c0 1E000000 		.4byte	.LVL14
 5063 00c4 0100     		.2byte	0x1
 5064 00c6 51       		.byte	0x51
 5065 00c7 1E000000 		.4byte	.LVL14
 5066 00cb 38000000 		.4byte	.LVL21
 5067 00cf 0400     		.2byte	0x4
 5068 00d1 F3       		.byte	0xf3
 5069 00d2 01       		.uleb128 0x1
 5070 00d3 51       		.byte	0x51
 5071 00d4 9F       		.byte	0x9f
 5072 00d5 38000000 		.4byte	.LVL21
 5073 00d9 3E000000 		.4byte	.LVL24
 5074 00dd 0100     		.2byte	0x1
 5075 00df 51       		.byte	0x51
 5076 00e0 3E000000 		.4byte	.LVL24
 5077 00e4 42000000 		.4byte	.LFE22
 5078 00e8 0400     		.2byte	0x4
 5079 00ea F3       		.byte	0xf3
 5080 00eb 01       		.uleb128 0x1
 5081 00ec 51       		.byte	0x51
 5082 00ed 9F       		.byte	0x9f
 5083 00ee 00000000 		.4byte	0
 5084 00f2 00000000 		.4byte	0
 5085              	.LLST5:
 5086 00f6 24000000 		.4byte	.LVL16
 5087 00fa 28000000 		.4byte	.LVL17
 5088 00fe 0200     		.2byte	0x2
 5089 0100 30       		.byte	0x30
 5090 0101 9F       		.byte	0x9f
 5091 0102 28000000 		.4byte	.LVL17
 5092 0106 38000000 		.4byte	.LVL21
 5093 010a 0100     		.2byte	0x1
 5094 010c 53       		.byte	0x53
 5095 010d 3E000000 		.4byte	.LVL24
 5096 0111 42000000 		.4byte	.LFE22
 5097 0115 0100     		.2byte	0x1
 5098 0117 53       		.byte	0x53
 5099 0118 00000000 		.4byte	0
 5100 011c 00000000 		.4byte	0
 5101              	.LLST6:
 5102 0120 10000000 		.4byte	.LVL12
 5103 0124 1C000000 		.4byte	.LVL13
 5104 0128 0100     		.2byte	0x1
 5105 012a 53       		.byte	0x53
 5106 012b 38000000 		.4byte	.LVL21
 5107 012f 3A000000 		.4byte	.LVL22
 5108 0133 0100     		.2byte	0x1
 5109 0135 53       		.byte	0x53
 5110 0136 3C000000 		.4byte	.LVL23
 5111 013a 3E000000 		.4byte	.LVL24
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 152


 5112 013e 0100     		.2byte	0x1
 5113 0140 53       		.byte	0x53
 5114 0141 00000000 		.4byte	0
 5115 0145 00000000 		.4byte	0
 5116              	.LLST7:
 5117 0149 24000000 		.4byte	.LVL16
 5118 014d 38000000 		.4byte	.LVL21
 5119 0151 0100     		.2byte	0x1
 5120 0153 50       		.byte	0x50
 5121 0154 00000000 		.4byte	0
 5122 0158 00000000 		.4byte	0
 5123              	.LLST8:
 5124 015c 00000000 		.4byte	.LVL25
 5125 0160 09000000 		.4byte	.LVL27-1
 5126 0164 0100     		.2byte	0x1
 5127 0166 50       		.byte	0x50
 5128 0167 09000000 		.4byte	.LVL27-1
 5129 016b 26000000 		.4byte	.LFE20
 5130 016f 0400     		.2byte	0x4
 5131 0171 F3       		.byte	0xf3
 5132 0172 01       		.uleb128 0x1
 5133 0173 50       		.byte	0x50
 5134 0174 9F       		.byte	0x9f
 5135 0175 00000000 		.4byte	0
 5136 0179 00000000 		.4byte	0
 5137              	.LLST9:
 5138 017d 00000000 		.4byte	.LVL25
 5139 0181 09000000 		.4byte	.LVL27-1
 5140 0185 0100     		.2byte	0x1
 5141 0187 51       		.byte	0x51
 5142 0188 09000000 		.4byte	.LVL27-1
 5143 018c 24000000 		.4byte	.LVL34
 5144 0190 0100     		.2byte	0x1
 5145 0192 55       		.byte	0x55
 5146 0193 24000000 		.4byte	.LVL34
 5147 0197 26000000 		.4byte	.LFE20
 5148 019b 0400     		.2byte	0x4
 5149 019d F3       		.byte	0xf3
 5150 019e 01       		.uleb128 0x1
 5151 019f 51       		.byte	0x51
 5152 01a0 9F       		.byte	0x9f
 5153 01a1 00000000 		.4byte	0
 5154 01a5 00000000 		.4byte	0
 5155              	.LLST10:
 5156 01a9 14000000 		.4byte	.LVL30
 5157 01ad 18000000 		.4byte	.LVL31
 5158 01b1 0100     		.2byte	0x1
 5159 01b3 50       		.byte	0x50
 5160 01b4 00000000 		.4byte	0
 5161 01b8 00000000 		.4byte	0
 5162              	.LLST11:
 5163 01bc 1C000000 		.4byte	.LVL32
 5164 01c0 1E000000 		.4byte	.LVL33
 5165 01c4 0100     		.2byte	0x1
 5166 01c6 50       		.byte	0x50
 5167 01c7 00000000 		.4byte	0
 5168 01cb 00000000 		.4byte	0
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 153


 5169              	.LLST12:
 5170 01cf 06000000 		.4byte	.LVL26
 5171 01d3 14000000 		.4byte	.LVL30
 5172 01d7 0100     		.2byte	0x1
 5173 01d9 54       		.byte	0x54
 5174 01da 00000000 		.4byte	0
 5175 01de 00000000 		.4byte	0
 5176              	.LLST13:
 5177 01e2 0C000000 		.4byte	.LVL28
 5178 01e6 11000000 		.4byte	.LVL29-1
 5179 01ea 0100     		.2byte	0x1
 5180 01ec 50       		.byte	0x50
 5181 01ed 11000000 		.4byte	.LVL29-1
 5182 01f1 24000000 		.4byte	.LVL35
 5183 01f5 0100     		.2byte	0x1
 5184 01f7 56       		.byte	0x56
 5185 01f8 00000000 		.4byte	0
 5186 01fc 00000000 		.4byte	0
 5187              	.LLST14:
 5188 0200 00000000 		.4byte	.LVL36
 5189 0204 37000000 		.4byte	.LVL38-1
 5190 0208 0100     		.2byte	0x1
 5191 020a 50       		.byte	0x50
 5192 020b 37000000 		.4byte	.LVL38-1
 5193 020f 40000000 		.4byte	.LFE2
 5194 0213 0400     		.2byte	0x4
 5195 0215 F3       		.byte	0xf3
 5196 0216 01       		.uleb128 0x1
 5197 0217 50       		.byte	0x50
 5198 0218 9F       		.byte	0x9f
 5199 0219 00000000 		.4byte	0
 5200 021d 00000000 		.4byte	0
 5201              	.LLST15:
 5202 0221 30000000 		.4byte	.LVL37
 5203 0225 3A000000 		.4byte	.LVL39
 5204 0229 0100     		.2byte	0x1
 5205 022b 54       		.byte	0x54
 5206 022c 3A000000 		.4byte	.LVL39
 5207 0230 40000000 		.4byte	.LFE2
 5208 0234 0100     		.2byte	0x1
 5209 0236 50       		.byte	0x50
 5210 0237 00000000 		.4byte	0
 5211 023b 00000000 		.4byte	0
 5212              	.LLST16:
 5213 023f 02000000 		.4byte	.LVL40
 5214 0243 22000000 		.4byte	.LVL42
 5215 0247 0200     		.2byte	0x2
 5216 0249 30       		.byte	0x30
 5217 024a 9F       		.byte	0x9f
 5218 024b 22000000 		.4byte	.LVL42
 5219 024f 2C000000 		.4byte	.LFE3
 5220 0253 0100     		.2byte	0x1
 5221 0255 50       		.byte	0x50
 5222 0256 00000000 		.4byte	0
 5223 025a 00000000 		.4byte	0
 5224              	.LLST17:
 5225 025e 02000000 		.4byte	.LVL43
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 154


 5226 0262 12000000 		.4byte	.LVL44
 5227 0266 0300     		.2byte	0x3
 5228 0268 09       		.byte	0x9
 5229 0269 FF       		.byte	0xff
 5230 026a 9F       		.byte	0x9f
 5231 026b 12000000 		.4byte	.LVL44
 5232 026f 14000000 		.4byte	.LVL45
 5233 0273 0100     		.2byte	0x1
 5234 0275 50       		.byte	0x50
 5235 0276 18000000 		.4byte	.LVL46
 5236 027a 25000000 		.4byte	.LVL47-1
 5237 027e 0100     		.2byte	0x1
 5238 0280 50       		.byte	0x50
 5239 0281 26000000 		.4byte	.LVL47
 5240 0285 30000000 		.4byte	.LVL49
 5241 0289 0100     		.2byte	0x1
 5242 028b 50       		.byte	0x50
 5243 028c 30000000 		.4byte	.LVL49
 5244 0290 32000000 		.4byte	.LVL50
 5245 0294 0300     		.2byte	0x3
 5246 0296 09       		.byte	0x9
 5247 0297 FF       		.byte	0xff
 5248 0298 9F       		.byte	0x9f
 5249 0299 32000000 		.4byte	.LVL50
 5250 029d 3C000000 		.4byte	.LFE4
 5251 02a1 0100     		.2byte	0x1
 5252 02a3 50       		.byte	0x50
 5253 02a4 00000000 		.4byte	0
 5254 02a8 00000000 		.4byte	0
 5255              	.LLST18:
 5256 02ac 12000000 		.4byte	.LVL44
 5257 02b0 30000000 		.4byte	.LVL49
 5258 02b4 0100     		.2byte	0x1
 5259 02b6 54       		.byte	0x54
 5260 02b7 00000000 		.4byte	0
 5261 02bb 00000000 		.4byte	0
 5262              	.LLST19:
 5263 02bf 00000000 		.4byte	.LVL51
 5264 02c3 4B000000 		.4byte	.LVL53-1
 5265 02c7 0100     		.2byte	0x1
 5266 02c9 50       		.byte	0x50
 5267 02ca 4B000000 		.4byte	.LVL53-1
 5268 02ce 58000000 		.4byte	.LFE5
 5269 02d2 0400     		.2byte	0x4
 5270 02d4 F3       		.byte	0xf3
 5271 02d5 01       		.uleb128 0x1
 5272 02d6 50       		.byte	0x50
 5273 02d7 9F       		.byte	0x9f
 5274 02d8 00000000 		.4byte	0
 5275 02dc 00000000 		.4byte	0
 5276              	.LLST20:
 5277 02e0 00000000 		.4byte	.LVL51
 5278 02e4 4B000000 		.4byte	.LVL53-1
 5279 02e8 0100     		.2byte	0x1
 5280 02ea 51       		.byte	0x51
 5281 02eb 4B000000 		.4byte	.LVL53-1
 5282 02ef 58000000 		.4byte	.LFE5
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 155


 5283 02f3 0400     		.2byte	0x4
 5284 02f5 F3       		.byte	0xf3
 5285 02f6 01       		.uleb128 0x1
 5286 02f7 51       		.byte	0x51
 5287 02f8 9F       		.byte	0x9f
 5288 02f9 00000000 		.4byte	0
 5289 02fd 00000000 		.4byte	0
 5290              	.LLST21:
 5291 0301 44000000 		.4byte	.LVL52
 5292 0305 4E000000 		.4byte	.LVL54
 5293 0309 0100     		.2byte	0x1
 5294 030b 54       		.byte	0x54
 5295 030c 4E000000 		.4byte	.LVL54
 5296 0310 58000000 		.4byte	.LFE5
 5297 0314 0100     		.2byte	0x1
 5298 0316 50       		.byte	0x50
 5299 0317 00000000 		.4byte	0
 5300 031b 00000000 		.4byte	0
 5301              	.LLST22:
 5302 031f 02000000 		.4byte	.LVL55
 5303 0323 22000000 		.4byte	.LVL57
 5304 0327 0200     		.2byte	0x2
 5305 0329 30       		.byte	0x30
 5306 032a 9F       		.byte	0x9f
 5307 032b 22000000 		.4byte	.LVL57
 5308 032f 2C000000 		.4byte	.LFE6
 5309 0333 0100     		.2byte	0x1
 5310 0335 50       		.byte	0x50
 5311 0336 00000000 		.4byte	0
 5312 033a 00000000 		.4byte	0
 5313              	.LLST23:
 5314 033e 00000000 		.4byte	.LVL58
 5315 0342 08000000 		.4byte	.LVL59
 5316 0346 0100     		.2byte	0x1
 5317 0348 50       		.byte	0x50
 5318 0349 08000000 		.4byte	.LVL59
 5319 034d E8000000 		.4byte	.LFE8
 5320 0351 0400     		.2byte	0x4
 5321 0353 F3       		.byte	0xf3
 5322 0354 01       		.uleb128 0x1
 5323 0355 50       		.byte	0x50
 5324 0356 9F       		.byte	0x9f
 5325 0357 00000000 		.4byte	0
 5326 035b 00000000 		.4byte	0
 5327              	.LLST24:
 5328 035f 00000000 		.4byte	.LVL58
 5329 0363 12000000 		.4byte	.LVL61
 5330 0367 0100     		.2byte	0x1
 5331 0369 51       		.byte	0x51
 5332 036a 12000000 		.4byte	.LVL61
 5333 036e E8000000 		.4byte	.LFE8
 5334 0372 0400     		.2byte	0x4
 5335 0374 F3       		.byte	0xf3
 5336 0375 01       		.uleb128 0x1
 5337 0376 51       		.byte	0x51
 5338 0377 9F       		.byte	0x9f
 5339 0378 00000000 		.4byte	0
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 156


 5340 037c 00000000 		.4byte	0
 5341              	.LLST25:
 5342 0380 00000000 		.4byte	.LVL58
 5343 0384 0C000000 		.4byte	.LVL60
 5344 0388 0100     		.2byte	0x1
 5345 038a 52       		.byte	0x52
 5346 038b 0C000000 		.4byte	.LVL60
 5347 038f E0000000 		.4byte	.LVL78
 5348 0393 0100     		.2byte	0x1
 5349 0395 56       		.byte	0x56
 5350 0396 E0000000 		.4byte	.LVL78
 5351 039a E8000000 		.4byte	.LFE8
 5352 039e 0400     		.2byte	0x4
 5353 03a0 F3       		.byte	0xf3
 5354 03a1 01       		.uleb128 0x1
 5355 03a2 52       		.byte	0x52
 5356 03a3 9F       		.byte	0x9f
 5357 03a4 00000000 		.4byte	0
 5358 03a8 00000000 		.4byte	0
 5359              	.LLST26:
 5360 03ac 16000000 		.4byte	.LVL62
 5361 03b0 1A000000 		.4byte	.LVL63
 5362 03b4 0200     		.2byte	0x2
 5363 03b6 30       		.byte	0x30
 5364 03b7 9F       		.byte	0x9f
 5365 03b8 1A000000 		.4byte	.LVL63
 5366 03bc E0000000 		.4byte	.LVL77
 5367 03c0 0100     		.2byte	0x1
 5368 03c2 55       		.byte	0x55
 5369 03c3 00000000 		.4byte	0
 5370 03c7 00000000 		.4byte	0
 5371              	.LLST27:
 5372 03cb 1E000000 		.4byte	.LVL64
 5373 03cf 3D000000 		.4byte	.LVL65-1
 5374 03d3 0100     		.2byte	0x1
 5375 03d5 50       		.byte	0x50
 5376 03d6 54000000 		.4byte	.LVL66
 5377 03da 73000000 		.4byte	.LVL67-1
 5378 03de 0100     		.2byte	0x1
 5379 03e0 50       		.byte	0x50
 5380 03e1 7A000000 		.4byte	.LVL68
 5381 03e5 8B000000 		.4byte	.LVL69-1
 5382 03e9 0100     		.2byte	0x1
 5383 03eb 50       		.byte	0x50
 5384 03ec 92000000 		.4byte	.LVL70
 5385 03f0 B1000000 		.4byte	.LVL71-1
 5386 03f4 0100     		.2byte	0x1
 5387 03f6 50       		.byte	0x50
 5388 03f7 B8000000 		.4byte	.LVL72
 5389 03fb D7000000 		.4byte	.LVL73-1
 5390 03ff 0100     		.2byte	0x1
 5391 0401 50       		.byte	0x50
 5392 0402 00000000 		.4byte	0
 5393 0406 00000000 		.4byte	0
 5394              	.LLST28:
 5395 040a 16000000 		.4byte	.LVL62
 5396 040e E0000000 		.4byte	.LVL76
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 157


 5397 0412 0100     		.2byte	0x1
 5398 0414 54       		.byte	0x54
 5399 0415 00000000 		.4byte	0
 5400 0419 00000000 		.4byte	0
 5401              	.LLST29:
 5402 041d 00000000 		.4byte	.LVL79
 5403 0421 30000000 		.4byte	.LVL83
 5404 0425 0100     		.2byte	0x1
 5405 0427 50       		.byte	0x50
 5406 0428 30000000 		.4byte	.LVL83
 5407 042c 80000000 		.4byte	.LFE11
 5408 0430 0400     		.2byte	0x4
 5409 0432 F3       		.byte	0xf3
 5410 0433 01       		.uleb128 0x1
 5411 0434 50       		.byte	0x50
 5412 0435 9F       		.byte	0x9f
 5413 0436 00000000 		.4byte	0
 5414 043a 00000000 		.4byte	0
 5415              	.LLST30:
 5416 043e 34000000 		.4byte	.LVL84
 5417 0442 6B000000 		.4byte	.LVL95-1
 5418 0446 0100     		.2byte	0x1
 5419 0448 50       		.byte	0x50
 5420 0449 00000000 		.4byte	0
 5421 044d 00000000 		.4byte	0
 5422              	.LLST31:
 5423 0451 2A000000 		.4byte	.LVL82
 5424 0455 30000000 		.4byte	.LVL83
 5425 0459 0200     		.2byte	0x2
 5426 045b 30       		.byte	0x30
 5427 045c 9F       		.byte	0x9f
 5428 045d 30000000 		.4byte	.LVL83
 5429 0461 74000000 		.4byte	.LVL99
 5430 0465 0100     		.2byte	0x1
 5431 0467 55       		.byte	0x55
 5432 0468 00000000 		.4byte	0
 5433 046c 00000000 		.4byte	0
 5434              	.LLST32:
 5435 0470 1A000000 		.4byte	.LVL80
 5436 0474 24000000 		.4byte	.LVL81
 5437 0478 0200     		.2byte	0x2
 5438 047a 30       		.byte	0x30
 5439 047b 9F       		.byte	0x9f
 5440 047c 2A000000 		.4byte	.LVL82
 5441 0480 74000000 		.4byte	.LVL100
 5442 0484 0100     		.2byte	0x1
 5443 0486 58       		.byte	0x58
 5444 0487 00000000 		.4byte	0
 5445 048b 00000000 		.4byte	0
 5446              	.LLST33:
 5447 048f 1A000000 		.4byte	.LVL80
 5448 0493 24000000 		.4byte	.LVL81
 5449 0497 0200     		.2byte	0x2
 5450 0499 35       		.byte	0x35
 5451 049a 9F       		.byte	0x9f
 5452 049b 2A000000 		.4byte	.LVL82
 5453 049f 74000000 		.4byte	.LVL101
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 158


 5454 04a3 0100     		.2byte	0x1
 5455 04a5 59       		.byte	0x59
 5456 04a6 00000000 		.4byte	0
 5457 04aa 00000000 		.4byte	0
 5458              	.LLST34:
 5459 04ae 42000000 		.4byte	.LVL87
 5460 04b2 54000000 		.4byte	.LVL90
 5461 04b6 0100     		.2byte	0x1
 5462 04b8 52       		.byte	0x52
 5463 04b9 54000000 		.4byte	.LVL90
 5464 04bd 5E000000 		.4byte	.LVL92
 5465 04c1 0200     		.2byte	0x2
 5466 04c3 76       		.byte	0x76
 5467 04c4 00       		.sleb128 0
 5468 04c5 62000000 		.4byte	.LVL93
 5469 04c9 6B000000 		.4byte	.LVL95-1
 5470 04cd 0100     		.2byte	0x1
 5471 04cf 53       		.byte	0x53
 5472 04d0 00000000 		.4byte	0
 5473 04d4 00000000 		.4byte	0
 5474              	.LLST35:
 5475 04d8 38000000 		.4byte	.LVL85
 5476 04dc 62000000 		.4byte	.LVL93
 5477 04e0 0100     		.2byte	0x1
 5478 04e2 53       		.byte	0x53
 5479 04e3 00000000 		.4byte	0
 5480 04e7 00000000 		.4byte	0
 5481              	.LLST36:
 5482 04eb 30000000 		.4byte	.LVL83
 5483 04ef 74000000 		.4byte	.LVL98
 5484 04f3 0100     		.2byte	0x1
 5485 04f5 54       		.byte	0x54
 5486 04f6 00000000 		.4byte	0
 5487 04fa 00000000 		.4byte	0
 5488              	.LLST37:
 5489 04fe 00000000 		.4byte	.LVL102
 5490 0502 05000000 		.4byte	.LVL103-1
 5491 0506 0100     		.2byte	0x1
 5492 0508 50       		.byte	0x50
 5493 0509 05000000 		.4byte	.LVL103-1
 5494 050d 08000000 		.4byte	.LFE13
 5495 0511 0400     		.2byte	0x4
 5496 0513 F3       		.byte	0xf3
 5497 0514 01       		.uleb128 0x1
 5498 0515 50       		.byte	0x50
 5499 0516 9F       		.byte	0x9f
 5500 0517 00000000 		.4byte	0
 5501 051b 00000000 		.4byte	0
 5502              	.LLST38:
 5503 051f 00000000 		.4byte	.LVL104
 5504 0523 08000000 		.4byte	.LVL105
 5505 0527 0100     		.2byte	0x1
 5506 0529 50       		.byte	0x50
 5507 052a 08000000 		.4byte	.LVL105
 5508 052e 0A000000 		.4byte	.LVL106
 5509 0532 0300     		.2byte	0x3
 5510 0534 70       		.byte	0x70
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 159


 5511 0535 01       		.sleb128 1
 5512 0536 9F       		.byte	0x9f
 5513 0537 0A000000 		.4byte	.LVL106
 5514 053b 30000000 		.4byte	.LFE14
 5515 053f 0400     		.2byte	0x4
 5516 0541 F3       		.byte	0xf3
 5517 0542 01       		.uleb128 0x1
 5518 0543 50       		.byte	0x50
 5519 0544 9F       		.byte	0x9f
 5520 0545 00000000 		.4byte	0
 5521 0549 00000000 		.4byte	0
 5522              	.LLST39:
 5523 054d 00000000 		.4byte	.LVL107
 5524 0551 0A000000 		.4byte	.LVL111
 5525 0555 0100     		.2byte	0x1
 5526 0557 50       		.byte	0x50
 5527 0558 0A000000 		.4byte	.LVL111
 5528 055c 0C000000 		.4byte	.LVL112
 5529 0560 0300     		.2byte	0x3
 5530 0562 70       		.byte	0x70
 5531 0563 01       		.sleb128 1
 5532 0564 9F       		.byte	0x9f
 5533 0565 0C000000 		.4byte	.LVL112
 5534 0569 14000000 		.4byte	.LFE15
 5535 056d 0400     		.2byte	0x4
 5536 056f F3       		.byte	0xf3
 5537 0570 01       		.uleb128 0x1
 5538 0571 50       		.byte	0x50
 5539 0572 9F       		.byte	0x9f
 5540 0573 00000000 		.4byte	0
 5541 0577 00000000 		.4byte	0
 5542              	.LLST40:
 5543 057b 04000000 		.4byte	.LVL108
 5544 057f 06000000 		.4byte	.LVL109
 5545 0583 0100     		.2byte	0x1
 5546 0585 53       		.byte	0x53
 5547 0586 08000000 		.4byte	.LVL110
 5548 058a 0C000000 		.4byte	.LVL112
 5549 058e 0100     		.2byte	0x1
 5550 0590 53       		.byte	0x53
 5551 0591 0C000000 		.4byte	.LVL112
 5552 0595 14000000 		.4byte	.LFE15
 5553 0599 0100     		.2byte	0x1
 5554 059b 50       		.byte	0x50
 5555 059c 00000000 		.4byte	0
 5556 05a0 00000000 		.4byte	0
 5557              	.LLST41:
 5558 05a4 00000000 		.4byte	.LVL113
 5559 05a8 06000000 		.4byte	.LVL114
 5560 05ac 0100     		.2byte	0x1
 5561 05ae 50       		.byte	0x50
 5562 05af 06000000 		.4byte	.LVL114
 5563 05b3 10000000 		.4byte	.LVL117
 5564 05b7 0100     		.2byte	0x1
 5565 05b9 54       		.byte	0x54
 5566 05ba 10000000 		.4byte	.LVL117
 5567 05be 12000000 		.4byte	.LFE16
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 160


 5568 05c2 0400     		.2byte	0x4
 5569 05c4 F3       		.byte	0xf3
 5570 05c5 01       		.uleb128 0x1
 5571 05c6 50       		.byte	0x50
 5572 05c7 9F       		.byte	0x9f
 5573 05c8 00000000 		.4byte	0
 5574 05cc 00000000 		.4byte	0
 5575              	.LLST42:
 5576 05d0 00000000 		.4byte	.LVL113
 5577 05d4 09000000 		.4byte	.LVL115-1
 5578 05d8 0100     		.2byte	0x1
 5579 05da 51       		.byte	0x51
 5580 05db 09000000 		.4byte	.LVL115-1
 5581 05df 12000000 		.4byte	.LFE16
 5582 05e3 0400     		.2byte	0x4
 5583 05e5 F3       		.byte	0xf3
 5584 05e6 01       		.uleb128 0x1
 5585 05e7 51       		.byte	0x51
 5586 05e8 9F       		.byte	0x9f
 5587 05e9 00000000 		.4byte	0
 5588 05ed 00000000 		.4byte	0
 5589              	.LLST43:
 5590 05f1 00000000 		.4byte	.LVL118
 5591 05f5 08000000 		.4byte	.LVL120
 5592 05f9 0100     		.2byte	0x1
 5593 05fb 50       		.byte	0x50
 5594 05fc 08000000 		.4byte	.LVL120
 5595 0600 0A000000 		.4byte	.LVL121
 5596 0604 0100     		.2byte	0x1
 5597 0606 53       		.byte	0x53
 5598 0607 0A000000 		.4byte	.LVL121
 5599 060b 0C000000 		.4byte	.LVL122
 5600 060f 0100     		.2byte	0x1
 5601 0611 50       		.byte	0x50
 5602 0612 0C000000 		.4byte	.LVL122
 5603 0616 17000000 		.4byte	.LVL124-1
 5604 061a 0100     		.2byte	0x1
 5605 061c 53       		.byte	0x53
 5606 061d 17000000 		.4byte	.LVL124-1
 5607 0621 1A000000 		.4byte	.LFE17
 5608 0625 0400     		.2byte	0x4
 5609 0627 F3       		.byte	0xf3
 5610 0628 01       		.uleb128 0x1
 5611 0629 50       		.byte	0x50
 5612 062a 9F       		.byte	0x9f
 5613 062b 00000000 		.4byte	0
 5614 062f 00000000 		.4byte	0
 5615              	.LLST44:
 5616 0633 04000000 		.4byte	.LVL119
 5617 0637 0C000000 		.4byte	.LVL122
 5618 063b 0200     		.2byte	0x2
 5619 063d 30       		.byte	0x30
 5620 063e 9F       		.byte	0x9f
 5621 063f 0C000000 		.4byte	.LVL122
 5622 0643 14000000 		.4byte	.LVL123
 5623 0647 0100     		.2byte	0x1
 5624 0649 50       		.byte	0x50
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 161


 5625 064a 18000000 		.4byte	.LVL124
 5626 064e 1A000000 		.4byte	.LFE17
 5627 0652 0100     		.2byte	0x1
 5628 0654 50       		.byte	0x50
 5629 0655 00000000 		.4byte	0
 5630 0659 00000000 		.4byte	0
 5631              	.LLST45:
 5632 065d 02000000 		.4byte	.LVL125
 5633 0661 08000000 		.4byte	.LVL126
 5634 0665 0200     		.2byte	0x2
 5635 0667 30       		.byte	0x30
 5636 0668 9F       		.byte	0x9f
 5637 0669 08000000 		.4byte	.LVL126
 5638 066d 18000000 		.4byte	.LVL131
 5639 0671 0100     		.2byte	0x1
 5640 0673 55       		.byte	0x55
 5641 0674 18000000 		.4byte	.LVL131
 5642 0678 1A000000 		.4byte	.LFE18
 5643 067c 0100     		.2byte	0x1
 5644 067e 50       		.byte	0x50
 5645 067f 00000000 		.4byte	0
 5646 0683 00000000 		.4byte	0
 5647              	.LLST46:
 5648 0687 02000000 		.4byte	.LVL125
 5649 068b 08000000 		.4byte	.LVL126
 5650 068f 0200     		.2byte	0x2
 5651 0691 30       		.byte	0x30
 5652 0692 9F       		.byte	0x9f
 5653 0693 08000000 		.4byte	.LVL126
 5654 0697 18000000 		.4byte	.LVL130
 5655 069b 0100     		.2byte	0x1
 5656 069d 54       		.byte	0x54
 5657 069e 00000000 		.4byte	0
 5658 06a2 00000000 		.4byte	0
 5659              	.LLST47:
 5660 06a6 02000000 		.4byte	.LVL132
 5661 06aa 06000000 		.4byte	.LVL133
 5662 06ae 0200     		.2byte	0x2
 5663 06b0 30       		.byte	0x30
 5664 06b1 9F       		.byte	0x9f
 5665 06b2 06000000 		.4byte	.LVL133
 5666 06b6 1E000000 		.4byte	.LVL137
 5667 06ba 0100     		.2byte	0x1
 5668 06bc 54       		.byte	0x54
 5669 06bd 00000000 		.4byte	0
 5670 06c1 00000000 		.4byte	0
 5671              	.LLST48:
 5672 06c5 12000000 		.4byte	.LVL134
 5673 06c9 17000000 		.4byte	.LVL135-1
 5674 06cd 0100     		.2byte	0x1
 5675 06cf 51       		.byte	0x51
 5676 06d0 00000000 		.4byte	0
 5677 06d4 00000000 		.4byte	0
 5678              	.LLST49:
 5679 06d8 00000000 		.4byte	.LVL138
 5680 06dc 37000000 		.4byte	.LVL143-1
 5681 06e0 0100     		.2byte	0x1
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 162


 5682 06e2 50       		.byte	0x50
 5683 06e3 37000000 		.4byte	.LVL143-1
 5684 06e7 42000000 		.4byte	.LVL146
 5685 06eb 0200     		.2byte	0x2
 5686 06ed 91       		.byte	0x91
 5687 06ee 54       		.sleb128 -44
 5688 06ef 42000000 		.4byte	.LVL146
 5689 06f3 D4000000 		.4byte	.LFE23
 5690 06f7 0400     		.2byte	0x4
 5691 06f9 F3       		.byte	0xf3
 5692 06fa 01       		.uleb128 0x1
 5693 06fb 50       		.byte	0x50
 5694 06fc 9F       		.byte	0x9f
 5695 06fd 00000000 		.4byte	0
 5696 0701 00000000 		.4byte	0
 5697              	.LLST50:
 5698 0705 1C000000 		.4byte	.LVL139
 5699 0709 2A000000 		.4byte	.LVL141
 5700 070d 0100     		.2byte	0x1
 5701 070f 54       		.byte	0x54
 5702 0710 2A000000 		.4byte	.LVL141
 5703 0714 42000000 		.4byte	.LVL146
 5704 0718 0200     		.2byte	0x2
 5705 071a 7D       		.byte	0x7d
 5706 071b 00       		.sleb128 0
 5707 071c 00000000 		.4byte	0
 5708 0720 00000000 		.4byte	0
 5709              	.LLST51:
 5710 0724 28000000 		.4byte	.LVL140
 5711 0728 37000000 		.4byte	.LVL143-1
 5712 072c 0100     		.2byte	0x1
 5713 072e 52       		.byte	0x52
 5714 072f 37000000 		.4byte	.LVL143-1
 5715 0733 B2000000 		.4byte	.LVL175
 5716 0737 0100     		.2byte	0x1
 5717 0739 59       		.byte	0x59
 5718 073a 00000000 		.4byte	0
 5719 073e 00000000 		.4byte	0
 5720              	.LLST52:
 5721 0742 34000000 		.4byte	.LVL142
 5722 0746 5E000000 		.4byte	.LVL154
 5723 074a 0100     		.2byte	0x1
 5724 074c 55       		.byte	0x55
 5725 074d 5E000000 		.4byte	.LVL154
 5726 0751 B2000000 		.4byte	.LVL176
 5727 0755 0100     		.2byte	0x1
 5728 0757 5B       		.byte	0x5b
 5729 0758 00000000 		.4byte	0
 5730 075c 00000000 		.4byte	0
 5731              	.LLST53:
 5732 0760 3A000000 		.4byte	.LVL144
 5733 0764 45000000 		.4byte	.LVL147-1
 5734 0768 0100     		.2byte	0x1
 5735 076a 53       		.byte	0x53
 5736 076b 4C000000 		.4byte	.LVL149
 5737 076f 55000000 		.4byte	.LVL151-1
 5738 0773 0100     		.2byte	0x1
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 163


 5739 0775 53       		.byte	0x53
 5740 0776 5C000000 		.4byte	.LVL153
 5741 077a 6B000000 		.4byte	.LVL157-1
 5742 077e 0100     		.2byte	0x1
 5743 0780 53       		.byte	0x53
 5744 0781 7A000000 		.4byte	.LVL160
 5745 0785 7C000000 		.4byte	.LVL161
 5746 0789 0100     		.2byte	0x1
 5747 078b 53       		.byte	0x53
 5748 078c 7C000000 		.4byte	.LVL161
 5749 0790 8C000000 		.4byte	.LVL165
 5750 0794 0100     		.2byte	0x1
 5751 0796 55       		.byte	0x55
 5752 0797 8C000000 		.4byte	.LVL165
 5753 079b 99000000 		.4byte	.LVL168-1
 5754 079f 0100     		.2byte	0x1
 5755 07a1 53       		.byte	0x53
 5756 07a2 A0000000 		.4byte	.LVL170
 5757 07a6 A6000000 		.4byte	.LVL171
 5758 07aa 0100     		.2byte	0x1
 5759 07ac 53       		.byte	0x53
 5760 07ad A6000000 		.4byte	.LVL171
 5761 07b1 AA000000 		.4byte	.LVL172
 5762 07b5 0100     		.2byte	0x1
 5763 07b7 52       		.byte	0x52
 5764 07b8 AA000000 		.4byte	.LVL172
 5765 07bc B2000000 		.4byte	.LVL174
 5766 07c0 0100     		.2byte	0x1
 5767 07c2 54       		.byte	0x54
 5768 07c3 00000000 		.4byte	0
 5769 07c7 00000000 		.4byte	0
 5770              	.LLST54:
 5771 07cb 38000000 		.4byte	.LVL143
 5772 07cf 45000000 		.4byte	.LVL147-1
 5773 07d3 0100     		.2byte	0x1
 5774 07d5 50       		.byte	0x50
 5775 07d6 4A000000 		.4byte	.LVL148
 5776 07da 55000000 		.4byte	.LVL151-1
 5777 07de 0100     		.2byte	0x1
 5778 07e0 50       		.byte	0x50
 5779 07e1 5A000000 		.4byte	.LVL152
 5780 07e5 6B000000 		.4byte	.LVL157-1
 5781 07e9 0100     		.2byte	0x1
 5782 07eb 50       		.byte	0x50
 5783 07ec 78000000 		.4byte	.LVL159
 5784 07f0 85000000 		.4byte	.LVL163-1
 5785 07f4 0100     		.2byte	0x1
 5786 07f6 50       		.byte	0x50
 5787 07f7 8A000000 		.4byte	.LVL164
 5788 07fb 99000000 		.4byte	.LVL168-1
 5789 07ff 0100     		.2byte	0x1
 5790 0801 50       		.byte	0x50
 5791 0802 9E000000 		.4byte	.LVL169
 5792 0806 AF000000 		.4byte	.LVL173-1
 5793 080a 0100     		.2byte	0x1
 5794 080c 50       		.byte	0x50
 5795 080d 00000000 		.4byte	0
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 164


 5796 0811 00000000 		.4byte	0
 5797              	.LLST55:
 5798 0815 00000000 		.4byte	.LVL177
 5799 0819 0E000000 		.4byte	.LVL179
 5800 081d 0100     		.2byte	0x1
 5801 081f 50       		.byte	0x50
 5802 0820 0E000000 		.4byte	.LVL179
 5803 0824 10000000 		.4byte	.LVL180
 5804 0828 0400     		.2byte	0x4
 5805 082a F3       		.byte	0xf3
 5806 082b 01       		.uleb128 0x1
 5807 082c 50       		.byte	0x50
 5808 082d 9F       		.byte	0x9f
 5809 082e 10000000 		.4byte	.LVL180
 5810 0832 12000000 		.4byte	.LVL181
 5811 0836 0100     		.2byte	0x1
 5812 0838 50       		.byte	0x50
 5813 0839 12000000 		.4byte	.LVL181
 5814 083d 24000000 		.4byte	.LFE24
 5815 0841 0400     		.2byte	0x4
 5816 0843 F3       		.byte	0xf3
 5817 0844 01       		.uleb128 0x1
 5818 0845 50       		.byte	0x50
 5819 0846 9F       		.byte	0x9f
 5820 0847 00000000 		.4byte	0
 5821 084b 00000000 		.4byte	0
 5822              	.LLST56:
 5823 084f 00000000 		.4byte	.LVL177
 5824 0853 15000000 		.4byte	.LVL182-1
 5825 0857 0100     		.2byte	0x1
 5826 0859 51       		.byte	0x51
 5827 085a 15000000 		.4byte	.LVL182-1
 5828 085e 24000000 		.4byte	.LFE24
 5829 0862 0400     		.2byte	0x4
 5830 0864 F3       		.byte	0xf3
 5831 0865 01       		.uleb128 0x1
 5832 0866 51       		.byte	0x51
 5833 0867 9F       		.byte	0x9f
 5834 0868 00000000 		.4byte	0
 5835 086c 00000000 		.4byte	0
 5836              	.LLST57:
 5837 0870 02000000 		.4byte	.LVL178
 5838 0874 16000000 		.4byte	.LVL182
 5839 0878 0200     		.2byte	0x2
 5840 087a 30       		.byte	0x30
 5841 087b 9F       		.byte	0x9f
 5842 087c 16000000 		.4byte	.LVL182
 5843 0880 18000000 		.4byte	.LVL183
 5844 0884 0200     		.2byte	0x2
 5845 0886 31       		.byte	0x31
 5846 0887 9F       		.byte	0x9f
 5847 0888 18000000 		.4byte	.LVL183
 5848 088c 24000000 		.4byte	.LFE24
 5849 0890 0100     		.2byte	0x1
 5850 0892 50       		.byte	0x50
 5851 0893 00000000 		.4byte	0
 5852 0897 00000000 		.4byte	0
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 165


 5853              	.LLST58:
 5854 089b 00000000 		.4byte	.LVL184
 5855 089f 0B000000 		.4byte	.LVL185-1
 5856 08a3 0100     		.2byte	0x1
 5857 08a5 50       		.byte	0x50
 5858 08a6 0B000000 		.4byte	.LVL185-1
 5859 08aa 1A000000 		.4byte	.LVL188
 5860 08ae 0100     		.2byte	0x1
 5861 08b0 55       		.byte	0x55
 5862 08b1 1A000000 		.4byte	.LVL188
 5863 08b5 1C000000 		.4byte	.LFE25
 5864 08b9 0400     		.2byte	0x4
 5865 08bb F3       		.byte	0xf3
 5866 08bc 01       		.uleb128 0x1
 5867 08bd 50       		.byte	0x50
 5868 08be 9F       		.byte	0x9f
 5869 08bf 00000000 		.4byte	0
 5870 08c3 00000000 		.4byte	0
 5871              	.LLST59:
 5872 08c7 00000000 		.4byte	.LVL184
 5873 08cb 0B000000 		.4byte	.LVL185-1
 5874 08cf 0100     		.2byte	0x1
 5875 08d1 51       		.byte	0x51
 5876 08d2 0B000000 		.4byte	.LVL185-1
 5877 08d6 1A000000 		.4byte	.LVL189
 5878 08da 0100     		.2byte	0x1
 5879 08dc 56       		.byte	0x56
 5880 08dd 1A000000 		.4byte	.LVL189
 5881 08e1 1C000000 		.4byte	.LFE25
 5882 08e5 0400     		.2byte	0x4
 5883 08e7 F3       		.byte	0xf3
 5884 08e8 01       		.uleb128 0x1
 5885 08e9 51       		.byte	0x51
 5886 08ea 9F       		.byte	0x9f
 5887 08eb 00000000 		.4byte	0
 5888 08ef 00000000 		.4byte	0
 5889              	.LLST60:
 5890 08f3 00000000 		.4byte	.LVL184
 5891 08f7 0B000000 		.4byte	.LVL185-1
 5892 08fb 0100     		.2byte	0x1
 5893 08fd 52       		.byte	0x52
 5894 08fe 0B000000 		.4byte	.LVL185-1
 5895 0902 10000000 		.4byte	.LVL186
 5896 0906 0100     		.2byte	0x1
 5897 0908 54       		.byte	0x54
 5898 0909 10000000 		.4byte	.LVL186
 5899 090d 1C000000 		.4byte	.LFE25
 5900 0911 0400     		.2byte	0x4
 5901 0913 F3       		.byte	0xf3
 5902 0914 01       		.uleb128 0x1
 5903 0915 52       		.byte	0x52
 5904 0916 9F       		.byte	0x9f
 5905 0917 00000000 		.4byte	0
 5906 091b 00000000 		.4byte	0
 5907              	.LLST61:
 5908 091f 0C000000 		.4byte	.LVL185
 5909 0923 19000000 		.4byte	.LVL187-1
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 166


 5910 0927 0100     		.2byte	0x1
 5911 0929 50       		.byte	0x50
 5912 092a 00000000 		.4byte	0
 5913 092e 00000000 		.4byte	0
 5914              	.LLST62:
 5915 0932 00000000 		.4byte	.LVL193
 5916 0936 17000000 		.4byte	.LVL194-1
 5917 093a 0100     		.2byte	0x1
 5918 093c 50       		.byte	0x50
 5919 093d 17000000 		.4byte	.LVL194-1
 5920 0941 40000000 		.4byte	.LFE10
 5921 0945 0400     		.2byte	0x4
 5922 0947 F3       		.byte	0xf3
 5923 0948 01       		.uleb128 0x1
 5924 0949 50       		.byte	0x50
 5925 094a 9F       		.byte	0x9f
 5926 094b 00000000 		.4byte	0
 5927 094f 00000000 		.4byte	0
 5928              		.section	.debug_aranges,"",%progbits
 5929 0000 DC000000 		.4byte	0xdc
 5930 0004 0200     		.2byte	0x2
 5931 0006 00000000 		.4byte	.Ldebug_info0
 5932 000a 04       		.byte	0x4
 5933 000b 00       		.byte	0
 5934 000c 0000     		.2byte	0
 5935 000e 0000     		.2byte	0
 5936 0010 00000000 		.4byte	.LFB21
 5937 0014 84000000 		.4byte	.LFE21-.LFB21
 5938 0018 00000000 		.4byte	.LFB22
 5939 001c 42000000 		.4byte	.LFE22-.LFB22
 5940 0020 00000000 		.4byte	.LFB20
 5941 0024 26000000 		.4byte	.LFE20-.LFB20
 5942 0028 00000000 		.4byte	.LFB1
 5943 002c 10000000 		.4byte	.LFE1-.LFB1
 5944 0030 00000000 		.4byte	.LFB2
 5945 0034 40000000 		.4byte	.LFE2-.LFB2
 5946 0038 00000000 		.4byte	.LFB3
 5947 003c 2C000000 		.4byte	.LFE3-.LFB3
 5948 0040 00000000 		.4byte	.LFB4
 5949 0044 3C000000 		.4byte	.LFE4-.LFB4
 5950 0048 00000000 		.4byte	.LFB5
 5951 004c 58000000 		.4byte	.LFE5-.LFB5
 5952 0050 00000000 		.4byte	.LFB6
 5953 0054 2C000000 		.4byte	.LFE6-.LFB6
 5954 0058 00000000 		.4byte	.LFB8
 5955 005c E8000000 		.4byte	.LFE8-.LFB8
 5956 0060 00000000 		.4byte	.LFB11
 5957 0064 80000000 		.4byte	.LFE11-.LFB11
 5958 0068 00000000 		.4byte	.LFB12
 5959 006c 02000000 		.4byte	.LFE12-.LFB12
 5960 0070 00000000 		.4byte	.LFB13
 5961 0074 08000000 		.4byte	.LFE13-.LFB13
 5962 0078 00000000 		.4byte	.LFB14
 5963 007c 30000000 		.4byte	.LFE14-.LFB14
 5964 0080 00000000 		.4byte	.LFB15
 5965 0084 14000000 		.4byte	.LFE15-.LFB15
 5966 0088 00000000 		.4byte	.LFB16
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 167


 5967 008c 12000000 		.4byte	.LFE16-.LFB16
 5968 0090 00000000 		.4byte	.LFB17
 5969 0094 1A000000 		.4byte	.LFE17-.LFB17
 5970 0098 00000000 		.4byte	.LFB18
 5971 009c 1A000000 		.4byte	.LFE18-.LFB18
 5972 00a0 00000000 		.4byte	.LFB19
 5973 00a4 24000000 		.4byte	.LFE19-.LFB19
 5974 00a8 00000000 		.4byte	.LFB23
 5975 00ac D4000000 		.4byte	.LFE23-.LFB23
 5976 00b0 00000000 		.4byte	.LFB24
 5977 00b4 24000000 		.4byte	.LFE24-.LFB24
 5978 00b8 00000000 		.4byte	.LFB25
 5979 00bc 1C000000 		.4byte	.LFE25-.LFB25
 5980 00c0 00000000 		.4byte	.LFB9
 5981 00c4 28000000 		.4byte	.LFE9-.LFB9
 5982 00c8 00000000 		.4byte	.LFB10
 5983 00cc 40000000 		.4byte	.LFE10-.LFB10
 5984 00d0 00000000 		.4byte	.LFB7
 5985 00d4 2C000000 		.4byte	.LFE7-.LFB7
 5986 00d8 00000000 		.4byte	0
 5987 00dc 00000000 		.4byte	0
 5988              		.section	.debug_ranges,"",%progbits
 5989              	.Ldebug_ranges0:
 5990 0000 00000000 		.4byte	.LFB21
 5991 0004 84000000 		.4byte	.LFE21
 5992 0008 00000000 		.4byte	.LFB22
 5993 000c 42000000 		.4byte	.LFE22
 5994 0010 00000000 		.4byte	.LFB20
 5995 0014 26000000 		.4byte	.LFE20
 5996 0018 00000000 		.4byte	.LFB1
 5997 001c 10000000 		.4byte	.LFE1
 5998 0020 00000000 		.4byte	.LFB2
 5999 0024 40000000 		.4byte	.LFE2
 6000 0028 00000000 		.4byte	.LFB3
 6001 002c 2C000000 		.4byte	.LFE3
 6002 0030 00000000 		.4byte	.LFB4
 6003 0034 3C000000 		.4byte	.LFE4
 6004 0038 00000000 		.4byte	.LFB5
 6005 003c 58000000 		.4byte	.LFE5
 6006 0040 00000000 		.4byte	.LFB6
 6007 0044 2C000000 		.4byte	.LFE6
 6008 0048 00000000 		.4byte	.LFB8
 6009 004c E8000000 		.4byte	.LFE8
 6010 0050 00000000 		.4byte	.LFB11
 6011 0054 80000000 		.4byte	.LFE11
 6012 0058 00000000 		.4byte	.LFB12
 6013 005c 02000000 		.4byte	.LFE12
 6014 0060 00000000 		.4byte	.LFB13
 6015 0064 08000000 		.4byte	.LFE13
 6016 0068 00000000 		.4byte	.LFB14
 6017 006c 30000000 		.4byte	.LFE14
 6018 0070 00000000 		.4byte	.LFB15
 6019 0074 14000000 		.4byte	.LFE15
 6020 0078 00000000 		.4byte	.LFB16
 6021 007c 12000000 		.4byte	.LFE16
 6022 0080 00000000 		.4byte	.LFB17
 6023 0084 1A000000 		.4byte	.LFE17
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 168


 6024 0088 00000000 		.4byte	.LFB18
 6025 008c 1A000000 		.4byte	.LFE18
 6026 0090 00000000 		.4byte	.LFB19
 6027 0094 24000000 		.4byte	.LFE19
 6028 0098 00000000 		.4byte	.LFB23
 6029 009c D4000000 		.4byte	.LFE23
 6030 00a0 00000000 		.4byte	.LFB24
 6031 00a4 24000000 		.4byte	.LFE24
 6032 00a8 00000000 		.4byte	.LFB25
 6033 00ac 1C000000 		.4byte	.LFE25
 6034 00b0 00000000 		.4byte	.LFB9
 6035 00b4 28000000 		.4byte	.LFE9
 6036 00b8 00000000 		.4byte	.LFB10
 6037 00bc 40000000 		.4byte	.LFE10
 6038 00c0 00000000 		.4byte	.LFB7
 6039 00c4 2C000000 		.4byte	.LFE7
 6040 00c8 00000000 		.4byte	0
 6041 00cc 00000000 		.4byte	0
 6042              		.section	.debug_line,"",%progbits
 6043              	.Ldebug_line0:
 6044 0000 93050000 		.section	.debug_str,"MS",%progbits,1
 6044      0200DF01 
 6044      00000201 
 6044      FB0E0D00 
 6044      01010101 
 6045              	.LASF83:
 6046 0000 65646765 		.ascii	"edgeSwipeTimeout\000"
 6046      53776970 
 6046      6554696D 
 6046      656F7574 
 6046      00
 6047              	.LASF31:
 6048 0011 666C6963 		.ascii	"flickActiveDistanceX\000"
 6048      6B416374 
 6048      69766544 
 6048      69737461 
 6048      6E636558 
 6049              	.LASF32:
 6050 0026 666C6963 		.ascii	"flickActiveDistanceY\000"
 6050      6B416374 
 6050      69766544 
 6050      69737461 
 6050      6E636559 
 6051              	.LASF219:
 6052 003b 73656E73 		.ascii	"sensorElement\000"
 6052      6F72456C 
 6052      656D656E 
 6052      7400
 6053              	.LASF27:
 6054 0049 70616E41 		.ascii	"panActiveDistanceX\000"
 6054      63746976 
 6054      65446973 
 6054      74616E63 
 6054      655800
 6055              	.LASF28:
 6056 005c 70616E41 		.ascii	"panActiveDistanceY\000"
 6056      63746976 
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 169


 6056      65446973 
 6056      74616E63 
 6056      655900
 6057              	.LASF70:
 6058 006f 53545061 		.ascii	"STPanDebounce\000"
 6058      6E446562 
 6058      6F756E63 
 6058      6500
 6059              	.LASF214:
 6060 007d 7363616E 		.ascii	"scanStatus\000"
 6060      53746174 
 6060      757300
 6061              	.LASF62:
 6062 0088 7374496E 		.ascii	"stInScrCountLevel\000"
 6062      53637243 
 6062      6F756E74 
 6062      4C657665 
 6062      6C00
 6063              	.LASF216:
 6064 009a 43617053 		.ascii	"CapSense_SetupWidgetExt\000"
 6064      656E7365 
 6064      5F536574 
 6064      75705769 
 6064      64676574 
 6065              	.LASF264:
 6066 00b2 43617053 		.ascii	"CapSense_widgetIndex\000"
 6066      656E7365 
 6066      5F776964 
 6066      67657449 
 6066      6E646578 
 6067              	.LASF277:
 6068 00c7 43617053 		.ascii	"CapSense_CSXScanExt\000"
 6068      656E7365 
 6068      5F435358 
 6068      5363616E 
 6068      45787400 
 6069              	.LASF148:
 6070 00db 736E7254 		.ascii	"snrTestWidgetId\000"
 6070      65737457 
 6070      69646765 
 6070      74496400 
 6071              	.LASF63:
 6072 00eb 6474496E 		.ascii	"dtInScrActiveDistanceX\000"
 6072      53637241 
 6072      63746976 
 6072      65446973 
 6072      74616E63 
 6073              	.LASF64:
 6074 0102 6474496E 		.ascii	"dtInScrActiveDistanceY\000"
 6074      53637241 
 6074      63746976 
 6074      65446973 
 6074      74616E63 
 6075              	.LASF100:
 6076 0119 43617053 		.ascii	"CapSense_UNDEFINED_E\000"
 6076      656E7365 
 6076      5F554E44 
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 170


 6076      4546494E 
 6076      45445F45 
 6077              	.LASF35:
 6078 012e 73745363 		.ascii	"stScrollThreshold3X\000"
 6078      726F6C6C 
 6078      54687265 
 6078      73686F6C 
 6078      64335800 
 6079              	.LASF39:
 6080 0142 73745363 		.ascii	"stScrollThreshold3Y\000"
 6080      726F6C6C 
 6080      54687265 
 6080      73686F6C 
 6080      64335900 
 6081              	.LASF79:
 6082 0156 73657474 		.ascii	"settlingTimeout\000"
 6082      6C696E67 
 6082      54696D65 
 6082      6F757400 
 6083              	.LASF11:
 6084 0166 756E7369 		.ascii	"unsigned int\000"
 6084      676E6564 
 6084      20696E74 
 6084      00
 6085              	.LASF135:
 6086 0173 7363616E 		.ascii	"scanCounter\000"
 6086      436F756E 
 6086      74657200 
 6087              	.LASF133:
 6088 017f 6877436C 		.ascii	"hwClock\000"
 6088      6F636B00 
 6089              	.LASF41:
 6090 0187 73745363 		.ascii	"stScrollStep1\000"
 6090      726F6C6C 
 6090      53746570 
 6090      3100
 6091              	.LASF42:
 6092 0195 73745363 		.ascii	"stScrollStep2\000"
 6092      726F6C6C 
 6092      53746570 
 6092      3200
 6093              	.LASF43:
 6094 01a3 73745363 		.ascii	"stScrollStep3\000"
 6094      726F6C6C 
 6094      53746570 
 6094      3300
 6095              	.LASF44:
 6096 01b1 73745363 		.ascii	"stScrollStep4\000"
 6096      726F6C6C 
 6096      53746570 
 6096      3400
 6097              	.LASF283:
 6098 01bf 43794861 		.ascii	"CyHalt\000"
 6098      6C7400
 6099              	.LASF195:
 6100 01c6 43617053 		.ascii	"CapSense_BIST_CSD_SH_CAP_E\000"
 6100      656E7365 
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 171


 6100      5F424953 
 6100      545F4353 
 6100      445F5348 
 6101              	.LASF46:
 6102 01e1 64745363 		.ascii	"dtScrollThreshold1X\000"
 6102      726F6C6C 
 6102      54687265 
 6102      73686F6C 
 6102      64315800 
 6103              	.LASF50:
 6104 01f5 64745363 		.ascii	"dtScrollThreshold1Y\000"
 6104      726F6C6C 
 6104      54687265 
 6104      73686F6C 
 6104      64315900 
 6105              	.LASF192:
 6106 0209 43617053 		.ascii	"CapSense_SCAN_CSX_E\000"
 6106      656E7365 
 6106      5F534341 
 6106      4E5F4353 
 6106      585F4500 
 6107              	.LASF93:
 6108 021d 67726F75 		.ascii	"group2Start\000"
 6108      70325374 
 6108      61727400 
 6109              	.LASF248:
 6110 0229 64725265 		.ascii	"drReg\000"
 6110      6700
 6111              	.LASF36:
 6112 022f 73745363 		.ascii	"stScrollThreshold4X\000"
 6112      726F6C6C 
 6112      54687265 
 6112      73686F6C 
 6112      64345800 
 6113              	.LASF40:
 6114 0243 73745363 		.ascii	"stScrollThreshold4Y\000"
 6114      726F6C6C 
 6114      54687265 
 6114      73686F6C 
 6114      64345900 
 6115              	.LASF84:
 6116 0257 4454436C 		.ascii	"DTClickTimeoutMax\000"
 6116      69636B54 
 6116      696D656F 
 6116      75744D61 
 6116      7800
 6117              	.LASF206:
 6118 0269 6C667372 		.ascii	"lfsrRange\000"
 6118      52616E67 
 6118      6500
 6119              	.LASF243:
 6120 0273 43617053 		.ascii	"CapSense_CalibrateAllWidgets\000"
 6120      656E7365 
 6120      5F43616C 
 6120      69627261 
 6120      7465416C 
 6121              	.LASF205:
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 172


 6122 0290 6C667372 		.ascii	"lfsrScale\000"
 6122      5363616C 
 6122      6500
 6123              	.LASF289:
 6124 029a 43617053 		.ascii	"CapSense_IsBusy\000"
 6124      656E7365 
 6124      5F497342 
 6124      75737900 
 6125              	.LASF247:
 6126 02aa 6873696F 		.ascii	"hsiomReg\000"
 6126      6D526567 
 6126      00
 6127              	.LASF235:
 6128 02b3 43617053 		.ascii	"CapSense_SsSetModClkClockDivider\000"
 6128      656E7365 
 6128      5F537353 
 6128      65744D6F 
 6128      64436C6B 
 6129              	.LASF288:
 6130 02d4 433A5C55 		.ascii	"C:\\Users\\inspiron\\Documents\\PSoC Creator\\Proje"
 6130      73657273 
 6130      5C696E73 
 6130      7069726F 
 6130      6E5C446F 
 6131 0302 6374735C 		.ascii	"cts\\CE224821_PSoC4_CapSense_Touchpad_Gestures_CSX0"
 6131      43453232 
 6131      34383231 
 6131      5F50536F 
 6131      43345F43 
 6132 0334 315C4345 		.ascii	"1\\CE224821_PSoC4_CapSense_Touchpad_Gestures_CSX01."
 6132      32323438 
 6132      32315F50 
 6132      536F4334 
 6132      5F436170 
 6133 0366 63796473 		.ascii	"cydsn\000"
 6133      6E00
 6134              	.LASF58:
 6135 036c 64745363 		.ascii	"dtScrollDebounce\000"
 6135      726F6C6C 
 6135      4465626F 
 6135      756E6365 
 6135      00
 6136              	.LASF254:
 6137 037d 72656750 		.ascii	"regPtr\000"
 6137      747200
 6138              	.LASF47:
 6139 0384 64745363 		.ascii	"dtScrollThreshold2X\000"
 6139      726F6C6C 
 6139      54687265 
 6139      73686F6C 
 6139      64325800 
 6140              	.LASF51:
 6141 0398 64745363 		.ascii	"dtScrollThreshold2Y\000"
 6141      726F6C6C 
 6141      54687265 
 6141      73686F6C 
 6141      64325900 
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 173


 6142              	.LASF94:
 6143 03ac 67726F75 		.ascii	"group2End\000"
 6143      7032456E 
 6143      6400
 6144              	.LASF186:
 6145 03b6 69697246 		.ascii	"iirFilterCoeff\000"
 6145      696C7465 
 6145      72436F65 
 6145      666600
 6146              	.LASF76:
 6147 03c5 646F7562 		.ascii	"doubleClickRadius\000"
 6147      6C65436C 
 6147      69636B52 
 6147      61646975 
 6147      7300
 6148              	.LASF217:
 6149 03d7 73656E73 		.ascii	"sensorId\000"
 6149      6F724964 
 6149      00
 6150              	.LASF90:
 6151 03e0 67726F75 		.ascii	"groupMask\000"
 6151      704D6173 
 6151      6B00
 6152              	.LASF29:
 6153 03ea 7A6F6F6D 		.ascii	"zoomActiveDistanceX\000"
 6153      41637469 
 6153      76654469 
 6153      7374616E 
 6153      63655800 
 6154              	.LASF30:
 6155 03fe 7A6F6F6D 		.ascii	"zoomActiveDistanceY\000"
 6155      41637469 
 6155      76654469 
 6155      7374616E 
 6155      63655900 
 6156              	.LASF146:
 6157 0412 74696D65 		.ascii	"timestampInterval\000"
 6157      7374616D 
 6157      70496E74 
 6157      65727661 
 6157      6C00
 6158              	.LASF209:
 6159 0424 70747257 		.ascii	"ptrWdgt\000"
 6159      64677400 
 6160              	.LASF14:
 6161 042c 75696E74 		.ascii	"uint32_t\000"
 6161      33325F74 
 6161      00
 6162              	.LASF73:
 6163 0435 44545061 		.ascii	"DTPanToZoomDebounce\000"
 6163      6E546F5A 
 6163      6F6F6D44 
 6163      65626F75 
 6163      6E636500 
 6164              	.LASF82:
 6165 0449 666C6963 		.ascii	"flickSampleTime\000"
 6165      6B53616D 
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 174


 6165      706C6554 
 6165      696D6500 
 6166              	.LASF227:
 6167 0459 6C6F6F70 		.ascii	"loopIndex\000"
 6167      496E6465 
 6167      7800
 6168              	.LASF203:
 6169 0463 43617053 		.ascii	"CapSense_SsCalcLfsrScale\000"
 6169      656E7365 
 6169      5F537343 
 6169      616C634C 
 6169      66737253 
 6170              	.LASF18:
 6171 047c 666C6F61 		.ascii	"float\000"
 6171      7400
 6172              	.LASF163:
 6173 0482 73686966 		.ascii	"shift\000"
 6173      7400
 6174              	.LASF286:
 6175 0488 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 6175      43313120 
 6175      352E342E 
 6175      31203230 
 6175      31363036 
 6176 04bb 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 6176      20726576 
 6176      6973696F 
 6176      6E203233 
 6176      37373135 
 6177 04ee 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 6177      67202D66 
 6177      66756E63 
 6177      74696F6E 
 6177      2D736563 
 6178              	.LASF257:
 6179 051a 43617053 		.ascii	"CapSense_SsDisableCSXMode\000"
 6179      656E7365 
 6179      5F537344 
 6179      69736162 
 6179      6C654353 
 6180              	.LASF169:
 6181 0534 43617053 		.ascii	"CapSense_CSX_TOUCHPAD_DATA_STRUCT\000"
 6181      656E7365 
 6181      5F435358 
 6181      5F544F55 
 6181      43485041 
 6182              	.LASF48:
 6183 0556 64745363 		.ascii	"dtScrollThreshold3X\000"
 6183      726F6C6C 
 6183      54687265 
 6183      73686F6C 
 6183      64335800 
 6184              	.LASF52:
 6185 056a 64745363 		.ascii	"dtScrollThreshold3Y\000"
 6185      726F6C6C 
 6185      54687265 
 6185      73686F6C 
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 175


 6185      64335900 
 6186              	.LASF232:
 6187 057e 736E7349 		.ascii	"snsIoPtr\000"
 6187      6F507472 
 6187      00
 6188              	.LASF144:
 6189 0587 736E734C 		.ascii	"snsList\000"
 6189      69737400 
 6190              	.LASF10:
 6191 058f 6C6F6E67 		.ascii	"long long unsigned int\000"
 6191      206C6F6E 
 6191      6720756E 
 6191      7369676E 
 6191      65642069 
 6192              	.LASF265:
 6193 05a6 43617053 		.ascii	"CapSense_sensorIndex\000"
 6193      656E7365 
 6193      5F73656E 
 6193      736F7249 
 6193      6E646578 
 6194              	.LASF65:
 6195 05bb 6474496E 		.ascii	"dtInScrCountLevel\000"
 6195      53637243 
 6195      6F756E74 
 6195      4C657665 
 6195      6C00
 6196              	.LASF122:
 6197 05cd 746F7563 		.ascii	"touchpad0\000"
 6197      68706164 
 6197      3000
 6198              	.LASF164:
 6199 05d7 43617053 		.ascii	"CapSense_FLASH_IO_STRUCT\000"
 6199      656E7365 
 6199      5F464C41 
 6199      53485F49 
 6199      4F5F5354 
 6200              	.LASF149:
 6201 05f0 736E7254 		.ascii	"snrTestSensorId\000"
 6201      65737453 
 6201      656E736F 
 6201      72496400 
 6202              	.LASF4:
 6203 0600 5F5F7569 		.ascii	"__uint16_t\000"
 6203      6E743136 
 6203      5F7400
 6204              	.LASF177:
 6205 060b 77646774 		.ascii	"wdgtType\000"
 6205      54797065 
 6205      00
 6206              	.LASF204:
 6207 0614 6C667372 		.ascii	"lfsrSize\000"
 6207      53697A65 
 6207      00
 6208              	.LASF249:
 6209 061d 70635265 		.ascii	"pcReg\000"
 6209      6700
 6210              	.LASF255:
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 176


 6211 0623 76616C75 		.ascii	"value\000"
 6211      6500
 6212              	.LASF229:
 6213 0629 6E657750 		.ascii	"newPinHsiomVal\000"
 6213      696E4873 
 6213      696F6D56 
 6213      616C00
 6214              	.LASF49:
 6215 0638 64745363 		.ascii	"dtScrollThreshold4X\000"
 6215      726F6C6C 
 6215      54687265 
 6215      73686F6C 
 6215      64345800 
 6216              	.LASF53:
 6217 064c 64745363 		.ascii	"dtScrollThreshold4Y\000"
 6217      726F6C6C 
 6217      54687265 
 6217      73686F6C 
 6217      64345900 
 6218              	.LASF275:
 6219 0660 43617053 		.ascii	"CapSense_CSXScan\000"
 6219      656E7365 
 6219      5F435358 
 6219      5363616E 
 6219      00
 6220              	.LASF117:
 6221 0671 43617053 		.ascii	"CapSense_CSX_TOUCHPAD_TOUCH_STRUCT\000"
 6221      656E7365 
 6221      5F435358 
 6221      5F544F55 
 6221      43485041 
 6222              	.LASF129:
 6223 0694 43617053 		.ascii	"CapSense_RAM_SNS_STRUCT\000"
 6223      656E7365 
 6223      5F52414D 
 6223      5F534E53 
 6223      5F535452 
 6224              	.LASF98:
 6225 06ac 67726F75 		.ascii	"group4End\000"
 6225      7034456E 
 6225      6400
 6226              	.LASF157:
 6227 06b6 64725074 		.ascii	"drPtr\000"
 6227      7200
 6228              	.LASF199:
 6229 06bc 43617053 		.ascii	"CapSense_IDAC_GAIN_TABLE_STRUCT\000"
 6229      656E7365 
 6229      5F494441 
 6229      435F4741 
 6229      494E5F54 
 6230              	.LASF251:
 6231 06dc 6D6F6465 		.ascii	"mode\000"
 6231      00
 6232              	.LASF87:
 6233 06e1 5354436C 		.ascii	"STClickTimeoutMin\000"
 6233      69636B54 
 6233      696D656F 
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 177


 6233      75744D69 
 6233      6E00
 6234              	.LASF236:
 6235 06f3 6D6F6443 		.ascii	"modClk\000"
 6235      6C6B00
 6236              	.LASF228:
 6237 06fa 6E657750 		.ascii	"newPinPcVal\000"
 6237      696E5063 
 6237      56616C00 
 6238              	.LASF110:
 6239 0706 68797374 		.ascii	"hysteresis\000"
 6239      65726573 
 6239      697300
 6240              	.LASF246:
 6241 0711 64697363 		.ascii	"dischargeTime\000"
 6241      68617267 
 6241      6554696D 
 6241      6500
 6242              	.LASF187:
 6243 071f 43617053 		.ascii	"CapSense_FLASH_WD_STRUCT\000"
 6243      656E7365 
 6243      5F464C41 
 6243      53485F57 
 6243      445F5354 
 6244              	.LASF221:
 6245 0738 656C7464 		.ascii	"eltdNum\000"
 6245      4E756D00 
 6246              	.LASF89:
 6247 0740 5354446F 		.ascii	"STDoubleClickTimeoutMin\000"
 6247      75626C65 
 6247      436C6963 
 6247      6B54696D 
 6247      656F7574 
 6248              	.LASF112:
 6249 0758 6C6F7742 		.ascii	"lowBslnRst\000"
 6249      736C6E52 
 6249      737400
 6250              	.LASF75:
 6251 0763 636F6D70 		.ascii	"completedDebounce\000"
 6251      6C657465 
 6251      64446562 
 6251      6F756E63 
 6251      6500
 6252              	.LASF202:
 6253 0775 43617053 		.ascii	"CapSense_SsCalcLfsrSize\000"
 6253      656E7365 
 6253      5F537343 
 6253      616C634C 
 6253      66737253 
 6254              	.LASF113:
 6255 078d 69646163 		.ascii	"idacGainIndex\000"
 6255      4761696E 
 6255      496E6465 
 6255      7800
 6256              	.LASF59:
 6257 079b 64745363 		.ascii	"dtScrollToZoomDebounce\000"
 6257      726F6C6C 
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 178


 6257      546F5A6F 
 6257      6F6D4465 
 6257      626F756E 
 6258              	.LASF176:
 6259 07b2 746F7461 		.ascii	"totalNumSns\000"
 6259      6C4E756D 
 6259      536E7300 
 6260              	.LASF60:
 6261 07be 7374496E 		.ascii	"stInScrActiveDistanceX\000"
 6261      53637241 
 6261      63746976 
 6261      65446973 
 6261      74616E63 
 6262              	.LASF61:
 6263 07d5 7374496E 		.ascii	"stInScrActiveDistanceY\000"
 6263      53637241 
 6263      63746976 
 6263      65446973 
 6263      74616E63 
 6264              	.LASF108:
 6265 07ec 6E6F6973 		.ascii	"noiseTh\000"
 6265      65546800 
 6266              	.LASF20:
 6267 07f4 63686172 		.ascii	"char\000"
 6267      00
 6268              	.LASF279:
 6269 07f9 43794578 		.ascii	"CyExitCriticalSection\000"
 6269      69744372 
 6269      69746963 
 6269      616C5365 
 6269      6374696F 
 6270              	.LASF245:
 6271 080f 43617053 		.ascii	"CapSense_DischargeExtCapacitors\000"
 6271      656E7365 
 6271      5F446973 
 6271      63686172 
 6271      67654578 
 6272              	.LASF230:
 6273 082f 746D7050 		.ascii	"tmpPcDrRegValue\000"
 6273      63447252 
 6273      65675661 
 6273      6C756500 
 6274              	.LASF193:
 6275 083f 43617053 		.ascii	"CapSense_BIST_CSD_SNS_CAP_E\000"
 6275      656E7365 
 6275      5F424953 
 6275      545F4353 
 6275      445F534E 
 6276              	.LASF97:
 6277 085b 67726F75 		.ascii	"group4Start\000"
 6277      70345374 
 6277      61727400 
 6278              	.LASF161:
 6279 0867 6873696F 		.ascii	"hsiomShift\000"
 6279      6D536869 
 6279      667400
 6280              	.LASF16:
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 179


 6281 0872 75696E74 		.ascii	"uint16\000"
 6281      313600
 6282              	.LASF201:
 6283 0879 636F6E76 		.ascii	"conversionsNum\000"
 6283      65727369 
 6283      6F6E734E 
 6283      756D00
 6284              	.LASF261:
 6285 0888 43617053 		.ascii	"CapSense_dsRam\000"
 6285      656E7365 
 6285      5F647352 
 6285      616D00
 6286              	.LASF106:
 6287 0897 7265736F 		.ascii	"resolution\000"
 6287      6C757469 
 6287      6F6E00
 6288              	.LASF12:
 6289 08a2 75696E74 		.ascii	"uint8_t\000"
 6289      385F7400 
 6290              	.LASF136:
 6291 08aa 73746174 		.ascii	"status\000"
 6291      757300
 6292              	.LASF241:
 6293 08b1 43617053 		.ascii	"CapSense_CalibrateWidget\000"
 6293      656E7365 
 6293      5F43616C 
 6293      69627261 
 6293      74655769 
 6294              	.LASF165:
 6295 08ca 72617743 		.ascii	"rawCount\000"
 6295      6F756E74 
 6295      00
 6296              	.LASF25:
 6297 08d3 43617053 		.ascii	"CapSense_LOW_BSLN_RST_TYPE\000"
 6297      656E7365 
 6297      5F4C4F57 
 6297      5F42534C 
 6297      4E5F5253 
 6298              	.LASF237:
 6299 08ee 43617053 		.ascii	"CapSense_SsSetSnsClockDivider\000"
 6299      656E7365 
 6299      5F537353 
 6299      6574536E 
 6299      73436C6F 
 6300              	.LASF105:
 6301 090c 43617053 		.ascii	"CapSense_SENSE_METHOD_ENUM\000"
 6301      656E7365 
 6301      5F53454E 
 6301      53455F4D 
 6301      4554484F 
 6302              	.LASF250:
 6303 0927 43617053 		.ascii	"CapSense_SetInactiveElectrodeState\000"
 6303      656E7365 
 6303      5F536574 
 6303      496E6163 
 6303      74697665 
 6304              	.LASF68:
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 180


 6305 094a 626F7474 		.ascii	"bottomAngleThreshold\000"
 6305      6F6D416E 
 6305      676C6554 
 6305      68726573 
 6305      686F6C64 
 6306              	.LASF128:
 6307 095f 69646163 		.ascii	"idacComp\000"
 6307      436F6D70 
 6307      00
 6308              	.LASF156:
 6309 0968 70635074 		.ascii	"pcPtr\000"
 6309      7200
 6310              	.LASF69:
 6311 096e 77696474 		.ascii	"widthOfDisambiguation\000"
 6311      684F6644 
 6311      6973616D 
 6311      62696775 
 6311      6174696F 
 6312              	.LASF9:
 6313 0984 6C6F6E67 		.ascii	"long long int\000"
 6313      206C6F6E 
 6313      6720696E 
 6313      7400
 6314              	.LASF178:
 6315 0992 6E756D43 		.ascii	"numCols\000"
 6315      6F6C7300 
 6316              	.LASF111:
 6317 099a 6F6E4465 		.ascii	"onDebounce\000"
 6317      626F756E 
 6317      636500
 6318              	.LASF166:
 6319 09a5 6465626F 		.ascii	"debounce\000"
 6319      756E6365 
 6319      00
 6320              	.LASF168:
 6321 09ae 746F7563 		.ascii	"touchNum\000"
 6321      684E756D 
 6321      00
 6322              	.LASF242:
 6323 09b7 63616C69 		.ascii	"calibrateStatus\000"
 6323      62726174 
 6323      65537461 
 6323      74757300 
 6324              	.LASF143:
 6325 09c7 77646774 		.ascii	"wdgtList\000"
 6325      4C697374 
 6325      00
 6326              	.LASF191:
 6327 09d0 43617053 		.ascii	"CapSense_SCAN_CSD_E\000"
 6327      656E7365 
 6327      5F534341 
 6327      4E5F4353 
 6327      445F4500 
 6328              	.LASF170:
 6329 09e4 70747232 		.ascii	"ptr2SnsFlash\000"
 6329      536E7346 
 6329      6C617368 
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 181


 6329      00
 6330              	.LASF189:
 6331 09f1 43617053 		.ascii	"CapSense_FLASH_STRUCT\000"
 6331      656E7365 
 6331      5F464C41 
 6331      53485F53 
 6331      54525543 
 6332              	.LASF213:
 6333 0a07 43617053 		.ascii	"CapSense_Scan\000"
 6333      656E7365 
 6333      5F536361 
 6333      6E00
 6334              	.LASF253:
 6335 0a15 43617053 		.ascii	"CapSense_WriteBitsSafe\000"
 6335      656E7365 
 6335      5F577269 
 6335      74654269 
 6335      74735361 
 6336              	.LASF231:
 6337 0a2c 746D7048 		.ascii	"tmpHsiomRegValue\000"
 6337      73696F6D 
 6337      52656756 
 6337      616C7565 
 6337      00
 6338              	.LASF118:
 6339 0a3d 76656C6F 		.ascii	"velocity\000"
 6339      63697479 
 6339      00
 6340              	.LASF151:
 6341 0a46 736E7254 		.ascii	"snrTestRawCount\000"
 6341      65737452 
 6341      6177436F 
 6341      756E7400 
 6342              	.LASF167:
 6343 0a56 43617053 		.ascii	"CapSense_CSX_TOUCHPAD_PEAK_STRUCT\000"
 6343      656E7365 
 6343      5F435358 
 6343      5F544F55 
 6343      43485041 
 6344              	.LASF109:
 6345 0a78 6E4E6F69 		.ascii	"nNoiseTh\000"
 6345      73655468 
 6345      00
 6346              	.LASF142:
 6347 0a81 736E7343 		.ascii	"snsCsxClk\000"
 6347      7378436C 
 6347      6B00
 6348              	.LASF140:
 6349 0a8b 63736430 		.ascii	"csd0Config\000"
 6349      436F6E66 
 6349      696700
 6350              	.LASF23:
 6351 0a96 63796973 		.ascii	"cyisraddress\000"
 6351      72616464 
 6351      72657373 
 6351      00
 6352              	.LASF77:
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 182


 6353 0aa3 636C6963 		.ascii	"clickRadiusX\000"
 6353      6B526164 
 6353      69757358 
 6353      00
 6354              	.LASF78:
 6355 0ab0 636C6963 		.ascii	"clickRadiusY\000"
 6355      6B526164 
 6355      69757359 
 6355      00
 6356              	.LASF119:
 6357 0abd 746F7563 		.ascii	"touch\000"
 6357      6800
 6358              	.LASF116:
 6359 0ac3 43617053 		.ascii	"CapSense_RAM_WD_BASE_STRUCT\000"
 6359      656E7365 
 6359      5F52414D 
 6359      5F57445F 
 6359      42415345 
 6360              	.LASF124:
 6361 0adf 62736C6E 		.ascii	"bsln\000"
 6361      00
 6362              	.LASF26:
 6363 0ae4 73697A65 		.ascii	"size\000"
 6363      00
 6364              	.LASF115:
 6365 0ae9 67657374 		.ascii	"gestureId\000"
 6365      75726549 
 6365      6400
 6366              	.LASF155:
 6367 0af3 6873696F 		.ascii	"hsiomPtr\000"
 6367      6D507472 
 6367      00
 6368              	.LASF284:
 6369 0afc 43617053 		.ascii	"CapSense_CSXElectrodeCheck\000"
 6369      656E7365 
 6369      5F435358 
 6369      456C6563 
 6369      74726F64 
 6370              	.LASF17:
 6371 0b17 75696E74 		.ascii	"uint32\000"
 6371      333200
 6372              	.LASF173:
 6373 0b1e 70747232 		.ascii	"ptr2FltrHistory\000"
 6373      466C7472 
 6373      48697374 
 6373      6F727900 
 6374              	.LASF198:
 6375 0b2e 6761696E 		.ascii	"gainValue\000"
 6375      56616C75 
 6375      6500
 6376              	.LASF271:
 6377 0b38 43617053 		.ascii	"CapSense_curSnsIOPtr\000"
 6377      656E7365 
 6377      5F637572 
 6377      536E7349 
 6377      4F507472 
 6378              	.LASF160:
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 183


 6379 0b4d 6D61736B 		.ascii	"mask\000"
 6379      00
 6380              	.LASF285:
 6381 0b52 43617053 		.ascii	"CapSense_CSXInitialize\000"
 6381      656E7365 
 6381      5F435358 
 6381      496E6974 
 6381      69616C69 
 6382              	.LASF91:
 6383 0b69 67726F75 		.ascii	"group1Start\000"
 6383      70315374 
 6383      61727400 
 6384              	.LASF240:
 6385 0b75 43617053 		.ascii	"CapSense_SsSetClockDividers\000"
 6385      656E7365 
 6385      5F537353 
 6385      6574436C 
 6385      6F636B44 
 6386              	.LASF196:
 6387 0b91 43617053 		.ascii	"CapSense_OPERATION_MODE_ENUM\000"
 6387      656E7365 
 6387      5F4F5045 
 6387      52415449 
 6387      4F4E5F4D 
 6388              	.LASF282:
 6389 0bae 43794465 		.ascii	"CyDelayUs\000"
 6389      6C617955 
 6389      7300
 6390              	.LASF92:
 6391 0bb8 67726F75 		.ascii	"group1End\000"
 6391      7031456E 
 6391      6400
 6392              	.LASF281:
 6393 0bc2 43617053 		.ascii	"CapSense_CSXCalibrateWidget\000"
 6393      656E7365 
 6393      5F435358 
 6393      43616C69 
 6393      62726174 
 6394              	.LASF71:
 6395 0bde 44545061 		.ascii	"DTPanDebounce\000"
 6395      6E446562 
 6395      6F756E63 
 6395      6500
 6396              	.LASF276:
 6397 0bec 43617053 		.ascii	"CapSense_CSXSetupWidgetExt\000"
 6397      656E7365 
 6397      5F435358 
 6397      53657475 
 6397      70576964 
 6398              	.LASF208:
 6399 0c07 77646774 		.ascii	"wdgtIndex\000"
 6399      496E6465 
 6399      7800
 6400              	.LASF104:
 6401 0c11 43617053 		.ascii	"CapSense_SENSE_METHOD_ISX_E\000"
 6401      656E7365 
 6401      5F53454E 
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 184


 6401      53455F4D 
 6401      4554484F 
 6402              	.LASF190:
 6403 0c2d 6C6F6E67 		.ascii	"long double\000"
 6403      20646F75 
 6403      626C6500 
 6404              	.LASF152:
 6405 0c39 7363616E 		.ascii	"scanCsxISC\000"
 6405      43737849 
 6405      534300
 6406              	.LASF13:
 6407 0c44 75696E74 		.ascii	"uint16_t\000"
 6407      31365F74 
 6407      00
 6408              	.LASF270:
 6409 0c4d 43617053 		.ascii	"CapSense_curFlashWdgtPtr\000"
 6409      656E7365 
 6409      5F637572 
 6409      466C6173 
 6409      68576467 
 6410              	.LASF22:
 6411 0c66 72656733 		.ascii	"reg32\000"
 6411      3200
 6412              	.LASF150:
 6413 0c6c 736E7254 		.ascii	"snrTestScanCounter\000"
 6413      65737453 
 6413      63616E43 
 6413      6F756E74 
 6413      657200
 6414              	.LASF131:
 6415 0c7f 636F6E66 		.ascii	"configId\000"
 6415      69674964 
 6415      00
 6416              	.LASF172:
 6417 0c88 70747232 		.ascii	"ptr2SnsRam\000"
 6417      536E7352 
 6417      616D00
 6418              	.LASF256:
 6419 0c93 43617053 		.ascii	"CapSense_SsSetWidgetTxClkSrc\000"
 6419      656E7365 
 6419      5F537353 
 6419      65745769 
 6419      64676574 
 6420              	.LASF85:
 6421 0cb0 4454436C 		.ascii	"DTClickTimeoutMin\000"
 6421      69636B54 
 6421      696D656F 
 6421      75744D69 
 6421      6E00
 6422              	.LASF223:
 6423 0cc2 696E7465 		.ascii	"interruptState\000"
 6423      72727570 
 6423      74537461 
 6423      746500
 6424              	.LASF139:
 6425 0cd1 736E7353 		.ascii	"snsStatus\000"
 6425      74617475 
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 185


 6425      7300
 6426              	.LASF114:
 6427 0cdb 736E7343 		.ascii	"snsClkSource\000"
 6427      6C6B536F 
 6427      75726365 
 6427      00
 6428              	.LASF183:
 6429 0ce8 7943656E 		.ascii	"yCentroidMultiplier\000"
 6429      74726F69 
 6429      644D756C 
 6429      7469706C 
 6429      69657200 
 6430              	.LASF120:
 6431 0cfc 73697A65 		.ascii	"sizetype\000"
 6431      74797065 
 6431      00
 6432              	.LASF180:
 6433 0d05 78526573 		.ascii	"xResolution\000"
 6433      6F6C7574 
 6433      696F6E00 
 6434              	.LASF233:
 6435 0d11 43617053 		.ascii	"CapSense_SsIsrInitialize\000"
 6435      656E7365 
 6435      5F537349 
 6435      7372496E 
 6435      69746961 
 6436              	.LASF54:
 6437 0d2a 64745363 		.ascii	"dtScrollStep1\000"
 6437      726F6C6C 
 6437      53746570 
 6437      3100
 6438              	.LASF55:
 6439 0d38 64745363 		.ascii	"dtScrollStep2\000"
 6439      726F6C6C 
 6439      53746570 
 6439      3200
 6440              	.LASF56:
 6441 0d46 64745363 		.ascii	"dtScrollStep3\000"
 6441      726F6C6C 
 6441      53746570 
 6441      3300
 6442              	.LASF57:
 6443 0d54 64745363 		.ascii	"dtScrollStep4\000"
 6443      726F6C6C 
 6443      53746570 
 6443      3400
 6444              	.LASF2:
 6445 0d62 73686F72 		.ascii	"short int\000"
 6445      7420696E 
 6445      7400
 6446              	.LASF154:
 6447 0d6c 43617053 		.ascii	"CapSense_RAM_STRUCT\000"
 6447      656E7365 
 6447      5F52414D 
 6447      5F535452 
 6447      55435400 
 6448              	.LASF226:
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 186


 6449 0d80 43617053 		.ascii	"CapSense_SsSetAllIOsState\000"
 6449      656E7365 
 6449      5F537353 
 6449      6574416C 
 6449      6C494F73 
 6450              	.LASF6:
 6451 0d9a 6C6F6E67 		.ascii	"long int\000"
 6451      20696E74 
 6451      00
 6452              	.LASF137:
 6453 0da3 77646774 		.ascii	"wdgtEnable\000"
 6453      456E6162 
 6453      6C6500
 6454              	.LASF126:
 6455 0dae 64696666 		.ascii	"diff\000"
 6455      00
 6456              	.LASF134:
 6457 0db3 74756E65 		.ascii	"tunerCmd\000"
 6457      72436D64 
 6457      00
 6458              	.LASF102:
 6459 0dbc 43617053 		.ascii	"CapSense_SENSE_METHOD_CSX_E\000"
 6459      656E7365 
 6459      5F53454E 
 6459      53455F4D 
 6459      4554484F 
 6460              	.LASF158:
 6461 0dd8 70735074 		.ascii	"psPtr\000"
 6461      7200
 6462              	.LASF212:
 6463 0dde 43617053 		.ascii	"CapSense_SetupWidget\000"
 6463      656E7365 
 6463      5F536574 
 6463      75705769 
 6463      64676574 
 6464              	.LASF123:
 6465 0df3 43617053 		.ascii	"CapSense_RAM_WD_LIST_STRUCT\000"
 6465      656E7365 
 6465      5F52414D 
 6465      5F57445F 
 6465      4C495354 
 6466              	.LASF197:
 6467 0e0f 6761696E 		.ascii	"gainReg\000"
 6467      52656700 
 6468              	.LASF96:
 6469 0e17 67726F75 		.ascii	"group3End\000"
 6469      7033456E 
 6469      6400
 6470              	.LASF3:
 6471 0e21 5F5F7569 		.ascii	"__uint8_t\000"
 6471      6E74385F 
 6471      7400
 6472              	.LASF95:
 6473 0e2b 67726F75 		.ascii	"group3Start\000"
 6473      70335374 
 6473      61727400 
 6474              	.LASF262:
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 187


 6475 0e37 43617053 		.ascii	"CapSense_dsFlash\000"
 6475      656E7365 
 6475      5F647346 
 6475      6C617368 
 6475      00
 6476              	.LASF138:
 6477 0e48 77646774 		.ascii	"wdgtStatus\000"
 6477      53746174 
 6477      757300
 6478              	.LASF121:
 6479 0e53 43617053 		.ascii	"CapSense_RAM_WD_CSX_TOUCHPAD_STRUCT\000"
 6479      656E7365 
 6479      5F52414D 
 6479      5F57445F 
 6479      4353585F 
 6480              	.LASF287:
 6481 0e77 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_Sensing.c\000"
 6481      72617465 
 6481      645F536F 
 6481      75726365 
 6481      5C50536F 
 6482              	.LASF101:
 6483 0ea1 43617053 		.ascii	"CapSense_SENSE_METHOD_CSD_E\000"
 6483      656E7365 
 6483      5F53454E 
 6483      53455F4D 
 6483      4554484F 
 6484              	.LASF268:
 6485 0ebd 43617053 		.ascii	"CapSense_currentSenseMethod\000"
 6485      656E7365 
 6485      5F637572 
 6485      72656E74 
 6485      53656E73 
 6486              	.LASF99:
 6487 0ed9 43617053 		.ascii	"CapSense_TMG_CONFIG_STRUCT\000"
 6487      656E7365 
 6487      5F544D47 
 6487      5F434F4E 
 6487      4649475F 
 6488              	.LASF45:
 6489 0ef4 73745363 		.ascii	"stScrollDebounce\000"
 6489      726F6C6C 
 6489      4465626F 
 6489      756E6365 
 6489      00
 6490              	.LASF162:
 6491 0f05 64725368 		.ascii	"drShift\000"
 6491      69667400 
 6492              	.LASF8:
 6493 0f0d 6C6F6E67 		.ascii	"long unsigned int\000"
 6493      20756E73 
 6493      69676E65 
 6493      6420696E 
 6493      7400
 6494              	.LASF252:
 6495 0f1f 72657456 		.ascii	"retVal\000"
 6495      616C00
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 188


 6496              	.LASF234:
 6497 0f26 61646472 		.ascii	"address\000"
 6497      65737300 
 6498              	.LASF280:
 6499 0f2e 43617053 		.ascii	"CapSense_ISR_StartEx\000"
 6499      656E7365 
 6499      5F495352 
 6499      5F537461 
 6499      72744578 
 6500              	.LASF174:
 6501 0f43 70747232 		.ascii	"ptr2DebounceArr\000"
 6501      4465626F 
 6501      756E6365 
 6501      41727200 
 6502              	.LASF80:
 6503 0f53 7265736F 		.ascii	"resolutionX\000"
 6503      6C757469 
 6503      6F6E5800 
 6504              	.LASF81:
 6505 0f5f 7265736F 		.ascii	"resolutionY\000"
 6505      6C757469 
 6505      6F6E5900 
 6506              	.LASF207:
 6507 0f6b 6C667372 		.ascii	"lfsrDither\000"
 6507      44697468 
 6507      657200
 6508              	.LASF182:
 6509 0f76 7843656E 		.ascii	"xCentroidMultiplier\000"
 6509      74726F69 
 6509      644D756C 
 6509      7469706C 
 6509      69657200 
 6510              	.LASF107:
 6511 0f8a 66696E67 		.ascii	"fingerTh\000"
 6511      65725468 
 6511      00
 6512              	.LASF125:
 6513 0f93 62736C6E 		.ascii	"bslnExt\000"
 6513      45787400 
 6514              	.LASF185:
 6515 0f9b 70747232 		.ascii	"ptr2PosHistory\000"
 6515      506F7348 
 6515      6973746F 
 6515      727900
 6516              	.LASF86:
 6517 0faa 5354436C 		.ascii	"STClickTimeoutMax\000"
 6517      69636B54 
 6517      696D656F 
 6517      75744D61 
 6517      7800
 6518              	.LASF21:
 6519 0fbc 63797374 		.ascii	"cystatus\000"
 6519      61747573 
 6519      00
 6520              	.LASF218:
 6521 0fc5 43617053 		.ascii	"CapSense_ScanExt\000"
 6521      656E7365 
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 189


 6521      5F536361 
 6521      6E457874 
 6521      00
 6522              	.LASF1:
 6523 0fd6 756E7369 		.ascii	"unsigned char\000"
 6523      676E6564 
 6523      20636861 
 6523      7200
 6524              	.LASF7:
 6525 0fe4 5F5F7569 		.ascii	"__uint32_t\000"
 6525      6E743332 
 6525      5F7400
 6526              	.LASF225:
 6527 0fef 43617053 		.ascii	"CapSense_SetPinState\000"
 6527      656E7365 
 6527      5F536574 
 6527      50696E53 
 6527      74617465 
 6528              	.LASF145:
 6529 1004 67657374 		.ascii	"gestures\000"
 6529      75726573 
 6529      00
 6530              	.LASF175:
 6531 100d 73746174 		.ascii	"staticConfig\000"
 6531      6963436F 
 6531      6E666967 
 6531      00
 6532              	.LASF141:
 6533 101a 6D6F6443 		.ascii	"modCsxClk\000"
 6533      7378436C 
 6533      6B00
 6534              	.LASF88:
 6535 1024 5354446F 		.ascii	"STDoubleClickTimeoutMax\000"
 6535      75626C65 
 6535      436C6963 
 6535      6B54696D 
 6535      656F7574 
 6536              	.LASF224:
 6537 103c 696F5074 		.ascii	"ioPtr\000"
 6537      7200
 6538              	.LASF153:
 6539 1042 7363616E 		.ascii	"scanCurrentISC\000"
 6539      43757272 
 6539      656E7449 
 6539      534300
 6540              	.LASF171:
 6541 1051 70747232 		.ascii	"ptr2WdgtRam\000"
 6541      57646774 
 6541      52616D00 
 6542              	.LASF24:
 6543 105d 43617053 		.ascii	"CapSense_THRESHOLD_TYPE\000"
 6543      656E7365 
 6543      5F544852 
 6543      4553484F 
 6543      4C445F54 
 6544              	.LASF274:
 6545 1075 43617053 		.ascii	"CapSense_CSXSetupWidget\000"
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 190


 6545      656E7365 
 6545      5F435358 
 6545      53657475 
 6545      70576964 
 6546              	.LASF103:
 6547 108d 43617053 		.ascii	"CapSense_SENSE_METHOD_BIST_E\000"
 6547      656E7365 
 6547      5F53454E 
 6547      53455F4D 
 6547      4554484F 
 6548              	.LASF179:
 6549 10aa 6E756D52 		.ascii	"numRows\000"
 6549      6F777300 
 6550              	.LASF220:
 6551 10b2 73746174 		.ascii	"state\000"
 6551      6500
 6552              	.LASF222:
 6553 10b8 656C7464 		.ascii	"eltdIndex\000"
 6553      496E6465 
 6553      7800
 6554              	.LASF215:
 6555 10c2 43617053 		.ascii	"CapSense_ScanAllWidgets\000"
 6555      656E7365 
 6555      5F536361 
 6555      6E416C6C 
 6555      57696467 
 6556              	.LASF159:
 6557 10da 6873696F 		.ascii	"hsiomMask\000"
 6557      6D4D6173 
 6557      6B00
 6558              	.LASF147:
 6559 10e4 74696D65 		.ascii	"timestamp\000"
 6559      7374616D 
 6559      7000
 6560              	.LASF238:
 6561 10ee 736E7343 		.ascii	"snsClk\000"
 6561      6C6B00
 6562              	.LASF258:
 6563 10f5 43617053 		.ascii	"CapSense_SsSwitchSensingMode\000"
 6563      656E7365 
 6563      5F537353 
 6563      77697463 
 6563      6853656E 
 6564              	.LASF278:
 6565 1112 4379456E 		.ascii	"CyEnterCriticalSection\000"
 6565      74657243 
 6565      72697469 
 6565      63616C53 
 6565      65637469 
 6566              	.LASF267:
 6567 1129 43617053 		.ascii	"CapSense_curRamSnsPtr\000"
 6567      656E7365 
 6567      5F637572 
 6567      52616D53 
 6567      6E735074 
 6568              	.LASF0:
 6569 113f 7369676E 		.ascii	"signed char\000"
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 191


 6569      65642063 
 6569      68617200 
 6570              	.LASF269:
 6571 114b 43617053 		.ascii	"CapSense_scanFreqIndex\000"
 6571      656E7365 
 6571      5F736361 
 6571      6E467265 
 6571      71496E64 
 6572              	.LASF66:
 6573 1162 65646765 		.ascii	"edgeSwipeActiveDistance\000"
 6573      53776970 
 6573      65416374 
 6573      69766544 
 6573      69737461 
 6574              	.LASF67:
 6575 117a 746F7041 		.ascii	"topAngleThreshold\000"
 6575      6E676C65 
 6575      54687265 
 6575      73686F6C 
 6575      6400
 6576              	.LASF5:
 6577 118c 73686F72 		.ascii	"short unsigned int\000"
 6577      7420756E 
 6577      7369676E 
 6577      65642069 
 6577      6E7400
 6578              	.LASF260:
 6579 119f 696E6974 		.ascii	"initStatus\000"
 6579      53746174 
 6579      757300
 6580              	.LASF72:
 6581 11aa 44545A6F 		.ascii	"DTZoomDebounce\000"
 6581      6F6D4465 
 6581      626F756E 
 6581      636500
 6582              	.LASF263:
 6583 11b9 43617053 		.ascii	"CapSense_ioList\000"
 6583      656E7365 
 6583      5F696F4C 
 6583      69737400 
 6584              	.LASF290:
 6585 11c9 43617053 		.ascii	"CapSense_SsPostAllWidgetsScan\000"
 6585      656E7365 
 6585      5F537350 
 6585      6F737441 
 6585      6C6C5769 
 6586              	.LASF33:
 6587 11e7 73745363 		.ascii	"stScrollThreshold1X\000"
 6587      726F6C6C 
 6587      54687265 
 6587      73686F6C 
 6587      64315800 
 6588              	.LASF37:
 6589 11fb 73745363 		.ascii	"stScrollThreshold1Y\000"
 6589      726F6C6C 
 6589      54687265 
 6589      73686F6C 
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 192


 6589      64315900 
 6590              	.LASF239:
 6591 120f 6E657752 		.ascii	"newRegValue\000"
 6591      65675661 
 6591      6C756500 
 6592              	.LASF273:
 6593 121b 43617053 		.ascii	"CapSense_SsCSXGetTxClkDivider\000"
 6593      656E7365 
 6593      5F537343 
 6593      53584765 
 6593      74547843 
 6594              	.LASF15:
 6595 1239 75696E74 		.ascii	"uint8\000"
 6595      3800
 6596              	.LASF19:
 6597 123f 646F7562 		.ascii	"double\000"
 6597      6C6500
 6598              	.LASF74:
 6599 1246 726F7461 		.ascii	"rotateDebounce\000"
 6599      74654465 
 6599      626F756E 
 6599      636500
 6600              	.LASF127:
 6601 1255 6E656742 		.ascii	"negBslnRstCnt\000"
 6601      736C6E52 
 6601      7374436E 
 6601      7400
 6602              	.LASF259:
 6603 1263 43617053 		.ascii	"CapSense_SsInitialize\000"
 6603      656E7365 
 6603      5F537349 
 6603      6E697469 
 6603      616C697A 
 6604              	.LASF184:
 6605 1279 70747232 		.ascii	"ptr2CsxTouchpad\000"
 6605      43737854 
 6605      6F756368 
 6605      70616400 
 6606              	.LASF200:
 6607 1289 736E7343 		.ascii	"snsClkDivider\000"
 6607      6C6B4469 
 6607      76696465 
 6607      7200
 6608              	.LASF132:
 6609 1297 64657669 		.ascii	"deviceId\000"
 6609      63654964 
 6609      00
 6610              	.LASF181:
 6611 12a0 79526573 		.ascii	"yResolution\000"
 6611      6F6C7574 
 6611      696F6E00 
 6612              	.LASF211:
 6613 12ac 77696467 		.ascii	"widgetStatus\000"
 6613      65745374 
 6613      61747573 
 6613      00
 6614              	.LASF194:
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\ccmg9IGj.s 			page 193


 6615 12b9 43617053 		.ascii	"CapSense_BIST_CSX_SNS_CAP_E\000"
 6615      656E7365 
 6615      5F424953 
 6615      545F4353 
 6615      585F534E 
 6616              	.LASF210:
 6617 12d5 77696467 		.ascii	"widgetId\000"
 6617      65744964 
 6617      00
 6618              	.LASF266:
 6619 12de 43617053 		.ascii	"CapSense_requestScanAllWidget\000"
 6619      656E7365 
 6619      5F726571 
 6619      75657374 
 6619      5363616E 
 6620              	.LASF244:
 6621 12fc 43617053 		.ascii	"CapSense_SsInitializeSourceSenseClk\000"
 6621      656E7365 
 6621      5F537349 
 6621      6E697469 
 6621      616C697A 
 6622              	.LASF272:
 6623 1320 43617053 		.ascii	"CapSense_idacGainTable\000"
 6623      656E7365 
 6623      5F696461 
 6623      63476169 
 6623      6E546162 
 6624              	.LASF130:
 6625 1337 43617053 		.ascii	"CapSense_RAM_SNS_LIST_STRUCT\000"
 6625      656E7365 
 6625      5F52414D 
 6625      5F534E53 
 6625      5F4C4953 
 6626              	.LASF34:
 6627 1354 73745363 		.ascii	"stScrollThreshold2X\000"
 6627      726F6C6C 
 6627      54687265 
 6627      73686F6C 
 6627      64325800 
 6628              	.LASF38:
 6629 1368 73745363 		.ascii	"stScrollThreshold2Y\000"
 6629      726F6C6C 
 6629      54687265 
 6629      73686F6C 
 6629      64325900 
 6630              	.LASF188:
 6631 137c 77646774 		.ascii	"wdgtArray\000"
 6631      41727261 
 6631      7900
 6632              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
