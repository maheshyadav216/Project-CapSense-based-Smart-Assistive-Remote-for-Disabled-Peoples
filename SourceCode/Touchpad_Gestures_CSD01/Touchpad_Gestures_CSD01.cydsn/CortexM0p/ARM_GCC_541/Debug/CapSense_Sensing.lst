ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_Sensing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	__aeabi_uidivmod
  20              		.section	.text.CapSense_SsCalcLfsrSize,"ax",%progbits
  21              		.align	2
  22              		.code	16
  23              		.thumb_func
  24              		.type	CapSense_SsCalcLfsrSize, %function
  25              	CapSense_SsCalcLfsrSize:
  26              	.LFB21:
  27              		.file 1 "Generated_Source\\PSoC4\\CapSense_Sensing.c"
   1:Generated_Source\PSoC4/CapSense_Sensing.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_Sensing.c **** * \file CapSense_Sensing.c
   3:Generated_Source\PSoC4/CapSense_Sensing.c **** * \version 7.0
   4:Generated_Source\PSoC4/CapSense_Sensing.c **** *
   5:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_Sensing.c **** *   This file contains the source of functions common for
   7:Generated_Source\PSoC4/CapSense_Sensing.c **** *   different sensing methods.
   8:Generated_Source\PSoC4/CapSense_Sensing.c **** *
   9:Generated_Source\PSoC4/CapSense_Sensing.c **** * \see CapSense v7.0 Datasheet
  10:Generated_Source\PSoC4/CapSense_Sensing.c **** *
  11:Generated_Source\PSoC4/CapSense_Sensing.c **** *//*****************************************************************************
  12:Generated_Source\PSoC4/CapSense_Sensing.c **** * Copyright (2016-2019), Cypress Semiconductor Corporation.
  13:Generated_Source\PSoC4/CapSense_Sensing.c **** ********************************************************************************
  14:Generated_Source\PSoC4/CapSense_Sensing.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:Generated_Source\PSoC4/CapSense_Sensing.c **** * protected by and subject to worldwide patent protection (United States and
  16:Generated_Source\PSoC4/CapSense_Sensing.c **** * foreign), United States copyright laws and international treaty provisions.
  17:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:Generated_Source\PSoC4/CapSense_Sensing.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:Generated_Source\PSoC4/CapSense_Sensing.c **** * custom software in support of licensee product to be used only in conjunction
  21:Generated_Source\PSoC4/CapSense_Sensing.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:Generated_Source\PSoC4/CapSense_Sensing.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:Generated_Source\PSoC4/CapSense_Sensing.c **** * this software except as specified above is prohibited without the express
  24:Generated_Source\PSoC4/CapSense_Sensing.c **** * written permission of Cypress.
  25:Generated_Source\PSoC4/CapSense_Sensing.c **** *
  26:Generated_Source\PSoC4/CapSense_Sensing.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:Generated_Source\PSoC4/CapSense_Sensing.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:Generated_Source\PSoC4/CapSense_Sensing.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress reserves the right to make changes without further notice to the
  30:Generated_Source\PSoC4/CapSense_Sensing.c **** * materials described herein. Cypress does not assume any liability arising out
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 2


  31:Generated_Source\PSoC4/CapSense_Sensing.c **** * of the application or use of any product or circuit described herein. Cypress
  32:Generated_Source\PSoC4/CapSense_Sensing.c **** * does not authorize its products for use as critical components in life-support
  33:Generated_Source\PSoC4/CapSense_Sensing.c **** * systems where a malfunction or failure may reasonably be expected to result in
  34:Generated_Source\PSoC4/CapSense_Sensing.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:Generated_Source\PSoC4/CapSense_Sensing.c **** * support systems application implies that the manufacturer assumes all risk of
  36:Generated_Source\PSoC4/CapSense_Sensing.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:Generated_Source\PSoC4/CapSense_Sensing.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  40:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "cyfitter.h"
  41:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Configuration.h"
  42:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Structure.h"
  43:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Sensing.h"
  44:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
  45:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingCSX_LL.h"
  46:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  47:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
  48:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingISX_LL.h"
  49:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  50:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
  51:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingCSD_LL.h"
  52:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  53:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)
  54:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SmartSense_LL.h"
  55:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  56:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ADC_EN)
  57:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_Adc.h"
  58:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  59:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
  60:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SelfTest.h"
  61:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  62:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  63:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (0u != CapSense_ISX_EN)
  64:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_DigPrt2.h"
  65:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_USES_PORT_3)
  66:Generated_Source\PSoC4/CapSense_Sensing.c ****         #include "CapSense_DigPrt3.h"
  67:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
  68:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  69:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  70:Generated_Source\PSoC4/CapSense_Sensing.c **** /***************************************
  71:Generated_Source\PSoC4/CapSense_Sensing.c **** * API Constants
  72:Generated_Source\PSoC4/CapSense_Sensing.c **** ***************************************/
  73:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  74:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_IMO_FREQUENCY_OFFSET_MIN               (0u)
  75:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_IMO_FREQUENCY_OFFSET_MAX               (255u)
  76:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CALIBRATION_RESOLUTION        (12u)
  77:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CALIBRATION_FREQ_KHZ          (1500u)
  78:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CAL_LEVEL                     (CapSense_CSD_RAWCOUNT_CAL_LEVEL)
  79:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CAL_UNITS                     (1000u)
  80:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CP_MAX                        (69000Lu)
  81:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CLK_SOURCE_LFSR_SCALE_OFFSET           (4u)
  82:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  83:Generated_Source\PSoC4/CapSense_Sensing.c **** /* HW IP Block limitation */
  84:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
  85:Generated_Source\PSoC4/CapSense_Sensing.c ****     #define CapSense_CSD_SNS_FREQ_KHZ_MAX               (6000u)
  86:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
  87:Generated_Source\PSoC4/CapSense_Sensing.c ****     #define CapSense_CSD_SNS_FREQ_KHZ_MAX               (12600u)
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 3


  88:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
  89:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  90:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_FLIP_FLOP_DIV                          (1u)
  91:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  92:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_12000KHZ                   (12000uL)
  93:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_24000KHZ                   (24000uL)
  94:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_48000KHZ                   (48000uL)
  95:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  96:Generated_Source\PSoC4/CapSense_Sensing.c **** /*****************************************************************************/
  97:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Enumeration types definition                                              */
  98:Generated_Source\PSoC4/CapSense_Sensing.c **** /*****************************************************************************/
  99:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 100:Generated_Source\PSoC4/CapSense_Sensing.c **** typedef enum
 101:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 102:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RES_PULLUP_E   = 0x02u,
 103:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RES_PULLDOWN_E = 0x03u
 104:Generated_Source\PSoC4/CapSense_Sensing.c **** } CapSense_PORT_TEST_DM;
 105:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 106:Generated_Source\PSoC4/CapSense_Sensing.c **** typedef enum
 107:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 108:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_STS_RESET      = 0x01u,
 109:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_STS_NO_RESET   = 0x02u
 110:Generated_Source\PSoC4/CapSense_Sensing.c **** } CapSense_TEST_TYPE;
 111:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 112:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 113:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 114:Generated_Source\PSoC4/CapSense_Sensing.c **** * Static Function Prototypes
 115:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 116:Generated_Source\PSoC4/CapSense_Sensing.c **** /**
 117:Generated_Source\PSoC4/CapSense_Sensing.c **** * \cond SECTION_C_INTERNAL
 118:Generated_Source\PSoC4/CapSense_Sensing.c **** * \addtogroup group_c_internal
 119:Generated_Source\PSoC4/CapSense_Sensing.c **** * \{
 120:Generated_Source\PSoC4/CapSense_Sensing.c **** */
 121:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 122:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_DISABLE == CapSense_CSDV2)
 123:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsTrimIdacs(void);
 124:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 125:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_ISX_EN) || \
 126:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG))
 127:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSinking(void);
 128:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
 129:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)) */
 130:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 131:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_ISX_EN) || \
 132:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG))
 133:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSourcing(void);
 134:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
 135:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)) */
 136:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 137:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 138:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 139:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsCSDDisableMode(void);
 140:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 141:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
 142:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableCSXMode(void);
 143:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 144:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 4


 145:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableISXMode(void);
 146:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
 147:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 148:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(((CapSense_ENABLE == CapSense_CSX_EN) && \
 149:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
 150:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) && \
 151:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)) ||\
 152:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSD_EN) && \
 153:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
 154:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)))
 155:Generated_Source\PSoC4/CapSense_Sensing.c ****     static uint8 CapSense_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum);
 156:Generated_Source\PSoC4/CapSense_Sensing.c ****     static uint8 CapSense_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize);
 157:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 158:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 159:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 160:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptr
 161:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 162:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 163:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
 164:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptrWdg
 165:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 166:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 167:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 168:Generated_Source\PSoC4/CapSense_Sensing.c **** /** \}
 169:Generated_Source\PSoC4/CapSense_Sensing.c **** * \endcond */
 170:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 171:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 172:Generated_Source\PSoC4/CapSense_Sensing.c **** * Defines module variables
 173:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 174:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 175:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_SENSE_METHOD_ENUM CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
 176:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 177:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 178:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Module variable keep track of multi-frequency scan channel index */
 179:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 CapSense_scanFreqIndex = 0u;
 180:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Variable keep frequency offsets */
 181:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 CapSense_immunity[CapSense_NUM_SCAN_FREQS] = {0u, 0u, 0u};
 182:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
 183:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* const allows C-compiler to do optimization */
 184:Generated_Source\PSoC4/CapSense_Sensing.c ****     const uint8 CapSense_scanFreqIndex = 0u;
 185:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 186:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 187:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Global software variables */
 188:Generated_Source\PSoC4/CapSense_Sensing.c **** volatile uint8 CapSense_widgetIndex = 0u;    /* Index of the scanning widget */
 189:Generated_Source\PSoC4/CapSense_Sensing.c **** volatile uint8 CapSense_sensorIndex = 0u;    /* Index of the scanning sensor */
 190:Generated_Source\PSoC4/CapSense_Sensing.c **** uint8 CapSense_requestScanAllWidget = 0u;
 191:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 192:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Pointer to RAM_SNS_STRUCT structure */
 193:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_RAM_SNS_STRUCT *CapSense_curRamSnsPtr;
 194:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 195:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) || \
 196:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSX_EN) || \
 197:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_ISX_EN))
 198:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Pointer to Flash structure holding configuration of widget to be scanned */
 199:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_WD_STRUCT const *CapSense_curFlashWdgtPtr = 0u;
 200:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 201:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 5


 202:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 203:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Pointer to Flash structure holding info of sensor to be scanned */
 204:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_SNS_STRUCT const *CapSense_curFlashSnsPtr = 0u;
 205:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 206:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 207:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Pointer to Flash structure to hold Sns electrode that was connected previously */
 208:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_FLASH_IO_STRUCT const *CapSense_curSnsIOPtr;
 209:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 210:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_IDAC_GAIN_TABLE_STRUCT const CapSense_idacGainTable[CapSense_IDAC_GAIN_NUMBER] = CapSense_
 211:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 212:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 213:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 214:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_IsBusy
 215:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 216:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 217:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 218:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the current status of the Component (Scan is completed or Scan is in
 219:Generated_Source\PSoC4/CapSense_Sensing.c **** *  progress).
 220:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 221:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 222:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function returns a status of the hardware block whether a scan is
 223:Generated_Source\PSoC4/CapSense_Sensing.c **** *  currently in progress or not. If the Component is busy, no new scan or Widget
 224:Generated_Source\PSoC4/CapSense_Sensing.c **** *  setup is made. The critical section (i.e. disable global interrupt)
 225:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is recommended for the application when the device transitions from
 226:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the active mode to sleep or deep sleep modes.
 227:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 228:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 229:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the current status of the Component:
 230:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CapSense_NOT_BUSY - No scan is in progress and a next scan
 231:Generated_Source\PSoC4/CapSense_Sensing.c **** *      can be initiated.
 232:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CapSense_SW_STS_BUSY - The previous scanning is not completed
 233:Generated_Source\PSoC4/CapSense_Sensing.c **** *      and the hardware block is busy.
 234:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 235:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 236:Generated_Source\PSoC4/CapSense_Sensing.c **** uint32 CapSense_IsBusy(void)
 237:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 238:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (CapSense_dsRam.status & CapSense_SW_STS_BUSY);
 239:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 240:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 241:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 242:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetupWidget
 243:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 244:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 245:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 246:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs the initialization required to scan the specified widget.
 247:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 248:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 249:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function prepares the Component to scan all the sensors in the specified
 250:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget by executing the following tasks:
 251:Generated_Source\PSoC4/CapSense_Sensing.c **** *    1. Re-initialize the hardware if it is not configured to perform the
 252:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensing method used by the specified widget, this happens only if multiple
 253:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensing methods are used in the Component.
 254:Generated_Source\PSoC4/CapSense_Sensing.c **** *    2. Initialize the hardware with specific sensing configuration (e.g.
 255:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensor clock, scan resolution) used by the widget.
 256:Generated_Source\PSoC4/CapSense_Sensing.c **** *    3. Disconnect all previously connected electrodes, if the electrodes
 257:Generated_Source\PSoC4/CapSense_Sensing.c **** *       connected by the lower level SetupWidgetExt() or ConnectSns() functions
 258:Generated_Source\PSoC4/CapSense_Sensing.c ****         and not disconnected.
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 6


 259:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 260:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function does not start sensor scanning, the CapSense_Scan()
 261:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function must be called to start the scan sensors in the widget. If this
 262:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function is called more than once, it does not break the Component operation,
 263:Generated_Source\PSoC4/CapSense_Sensing.c **** *  but only the last initialized widget is in effect.
 264:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 265:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 266:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID number of the widget to be initialized for scanning.
 267:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the
 268:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 269:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_<WidgetName>_WDGT_ID.
 270:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 271:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 272:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the widget setting up operation:
 273:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_SUCCESS - The operation is successfully completed.
 274:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_BAD_PARAM - The widget is invalid or if the specified widget is
 275:Generated_Source\PSoC4/CapSense_Sensing.c **** *      disabled
 276:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_INVALID_STATE - The previous scanning is not completed and the
 277:Generated_Source\PSoC4/CapSense_Sensing.c **** *      hardware block is busy.
 278:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_UNKNOWN - An unknown sensing method is used by the widget or any
 279:Generated_Source\PSoC4/CapSense_Sensing.c **** *      other spurious error occurred.
 280:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 281:Generated_Source\PSoC4/CapSense_Sensing.c **** **********************************************************************************/
 282:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SetupWidget(uint32 widgetId)
 283:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 284:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 285:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 286:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 287:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 288:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 289:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_INVALID_STATE;
 290:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 291:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 292:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  Check if widget id is valid, specified widget is enabled and widget did not
 293:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  detect any fault conditions if BIST is enabled. If all conditions are met,
 294:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  set widgetStatus as good, if not, set widgetStatus as bad.
 295:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 296:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if ((CapSense_TOTAL_WIDGETS > widgetId) &&
 297:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 298:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 299:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 300:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_SUCCESS;
 301:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 302:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 303:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 304:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_BAD_PARAM;
 305:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 306:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 307:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 308:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Check widgetStatus flag that is set earlier, if flag is good, then set up only
 309:Generated_Source\PSoC4/CapSense_Sensing.c ****      * widget
 310:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 311:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CYRET_SUCCESS == widgetStatus)
 312:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 313:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
 314:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 315:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 7


 316:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 317:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSX scan */
 318:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXSetupWidget(widgetId);
 319:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 320:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 321:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 322:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 323:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSD scan */
 324:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDSetupWidget(widgetId);
 325:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 326:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 327:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 328:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 329:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for ISX scan */
 330:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXSetupWidget(widgetId);
 331:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 332:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 333:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 334:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Sensing method is invalid, return error to caller */
 335:Generated_Source\PSoC4/CapSense_Sensing.c ****             widgetStatus = CYRET_UNKNOWN;
 336:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 337:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 338:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 339:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (widgetStatus);
 340:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 341:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 342:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 343:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 344:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_Scan
 345:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 346:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 347:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 348:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Initiates scanning of all the sensors in the widget initialized by
 349:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SetupWidget(), if no scan is in progress.
 350:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 351:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 352:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function is called only after the CapSense_SetupWidget()
 353:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function is called to start the scanning of the sensors in the widget. The
 354:Generated_Source\PSoC4/CapSense_Sensing.c **** *  status of a sensor scan must be checked using the CapSense_IsBusy()
 355:Generated_Source\PSoC4/CapSense_Sensing.c **** *  API prior to starting a next scan or setting up another widget.
 356:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 357:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 358:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the scan initiation operation:
 359:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 360:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 361:Generated_Source\PSoC4/CapSense_Sensing.c **** *    hardware block is busy.
 362:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget.
 363:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 364:Generated_Source\PSoC4/CapSense_Sensing.c **** ********************************************************************************/
 365:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_Scan(void)
 366:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 367:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 368:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 369:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 370:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 371:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 372:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 8


 373:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 374:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 375:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 376:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_currentSenseMethod)
 377:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 378:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 379:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 380:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXScan();
 381:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 382:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 383:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 384:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 385:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDScan();
 386:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 387:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 388:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 389:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 390:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXScan();
 391:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 392:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 393:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 394:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CYRET_UNKNOWN;
 395:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 396:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 397:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 398:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 399:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 400:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 401:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 402:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_ScanAllWidgets
 404:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 405:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 406:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 407:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Initializes the first enabled widget and scanning of all the sensors in the
 408:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget, then the same process is repeated for all the widgets in the Component,
 409:Generated_Source\PSoC4/CapSense_Sensing.c **** *  i.e. scanning of all the widgets in the Component.
 410:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 411:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 412:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function initializes a widget and scans all the sensors in the widget,
 413:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and then repeats the same for all the widgets in the Component. The tasks of
 414:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_SetupWidget() and CapSense_Scan() functions are
 415:Generated_Source\PSoC4/CapSense_Sensing.c **** *  executed by these functions. The status of a sensor scan must be checked
 416:Generated_Source\PSoC4/CapSense_Sensing.c **** *  using the CapSense_IsBusy() API prior to starting a next scan
 417:Generated_Source\PSoC4/CapSense_Sensing.c **** *  or setting up another widget.
 418:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 419:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 420:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
 421:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 422:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_BAD_PARAM - All the widgets are disabled.
 423:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the HW block is busy.
 424:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - There are unknown errors.
 425:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 426:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 427:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_ScanAllWidgets(void)
 428:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 429:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 9


 430:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 431:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
 432:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 433:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_SW_STS_BUSY))
 434:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 435:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 436:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 437:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 438:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 439:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 440:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
 441:Generated_Source\PSoC4/CapSense_Sensing.c ****          *  Set up widget first widget.
 442:Generated_Source\PSoC4/CapSense_Sensing.c ****          *  If widget returned error, set up next, continue same until widget does not return error
 443:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
 444:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u;
 445:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex < CapSense_TOTAL_WIDGETS;
 446:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex++)
 447:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 448:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 449:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CapSense_SetupWidget(wdgtIndex);
 450:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 451:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS == scanStatus)
 452:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 453:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (0u != (CapSense_TOTAL_WIDGETS - 1u))
 454:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* If there are more than one widget to be scanned, request callback to scan ne
 455:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_TOTAL_WIDGETS - 1u) > wdgtIndex)
 456:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 457:Generated_Source\PSoC4/CapSense_Sensing.c ****                          /* Request callback to scan next widget in ISR */
 458:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_ENABLE;
 459:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 460:Generated_Source\PSoC4/CapSense_Sensing.c ****                     else
 461:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 462:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Request to exit in ISR (Do not scan the next widgets) */
 463:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_DISABLE;
 464:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 465:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else
 466:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 467:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Request to exit in ISR (We have only one widget) */
 468:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_DISABLE;
 469:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 470:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (0u != (CapSense_TOTAL_WIDGETS - 1u)) */
 471:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 472:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initiate scan and quit loop */
 473:Generated_Source\PSoC4/CapSense_Sensing.c ****                 scanStatus = CapSense_Scan();
 474:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 475:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 476:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 477:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 478:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 479:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 480:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 481:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 482:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 483:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 484:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 485:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetupWidgetExt
 486:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 10


 487:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 488:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 489:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs extended initialization for the specified widget and also performs
 490:Generated_Source\PSoC4/CapSense_Sensing.c **** *  initialization required for a specific sensor in the widget. This function
 491:Generated_Source\PSoC4/CapSense_Sensing.c **** *  requires using the CapSense_ScanExt() function to initiate a scan.
 492:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 493:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 494:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function does the same as CapSense_SetupWidget() and also
 495:Generated_Source\PSoC4/CapSense_Sensing.c **** *  does the following tasks:
 496:Generated_Source\PSoC4/CapSense_Sensing.c **** *    1. Connects the first sensor of the widget.
 497:Generated_Source\PSoC4/CapSense_Sensing.c **** *    2. Configures the CSD HW block to perform a scan of the specified sensor.
 498:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 499:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Once this function is called to initialize a widget and a sensor, the
 500:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_ScanExt() function is called to scan the sensor.
 501:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 502:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function is called when no scanning is in progress. I.e.
 503:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_IsBusy() returns a non-busy status.
 504:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 505:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling this function directly from the application layer is not
 506:Generated_Source\PSoC4/CapSense_Sensing.c **** *  recommended. This function is used to implement only the user's specific
 507:Generated_Source\PSoC4/CapSense_Sensing.c **** *  use cases (for faster execution time or pipeline scanning for example).
 508:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 509:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 510:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID number of the widget to perform hardware and firmware
 511:Generated_Source\PSoC4/CapSense_Sensing.c **** *  initialization required for scanning the specific sensor in the specific
 512:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget.
 513:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the CapSense
 514:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Configuration header file defined as CapSense_<WidgetName>_WDGT_ID.
 515:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 516:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param sensorId
 517:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID number of the sensor within the widget to perform hardware
 518:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and firmware initialization required for scanning a specific sensor in a
 519:Generated_Source\PSoC4/CapSense_Sensing.c **** *  specific widget.
 520:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the sensor ID within a specified widget can be found in the
 521:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 522:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_<WidgetName>_SNS<SensorNumber>_ID
 523:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 524:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 525:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
 526:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - The operation is successfully completed.
 527:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_BAD_PARAM - The widget is invalid or if the specified widget is
 528:Generated_Source\PSoC4/CapSense_Sensing.c **** *    disabled
 529:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 530:Generated_Source\PSoC4/CapSense_Sensing.c **** *    hardware block is busy.
 531:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget or any
 532:Generated_Source\PSoC4/CapSense_Sensing.c **** *    other spurious error occurred.
 533:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 534:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 535:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SetupWidgetExt(uint32 widgetId, uint32 sensorId)
 536:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 537:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 538:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 539:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 540:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 541:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 542:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_INVALID_STATE;
 543:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 11


 544:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 545:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  Check if widget id is valid, specified widget is enabled and widget did not
 546:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  detect any fault conditions if BIST is enabled. If all conditions are met,
 547:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  set widgetStatus as good, if not, set widgetStatus as bad.
 548:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 549:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if ((CapSense_TOTAL_WIDGETS > widgetId) &&
 550:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)) &&
 551:Generated_Source\PSoC4/CapSense_Sensing.c ****         (sensorId < CapSense_GET_SENSOR_COUNT(widgetId)))
 552:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 553:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 554:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_SUCCESS;
 555:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 556:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 557:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 558:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_BAD_PARAM;
 559:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 560:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 561:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 562:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Check widgetStatus flag that is set earlier, if flag is good, then set up only
 563:Generated_Source\PSoC4/CapSense_Sensing.c ****      * widget
 564:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 565:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CYRET_SUCCESS == widgetStatus)
 566:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 567:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
 568:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 569:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 570:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 571:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSX scan */
 572:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXSetupWidgetExt(widgetId, sensorId);
 573:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 574:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 575:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 576:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 577:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSD scan */
 578:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDSetupWidgetExt(widgetId, sensorId);
 579:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 580:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 581:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 582:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 583:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for ISX scan */
 584:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXSetupWidgetExt(widgetId, sensorId);
 585:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 586:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 587:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 588:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Sensing method is invalid, return error to caller */
 589:Generated_Source\PSoC4/CapSense_Sensing.c ****             widgetStatus = CYRET_UNKNOWN;
 590:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 591:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 592:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 593:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (widgetStatus);
 594:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 595:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 596:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 597:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 598:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_ScanExt
 599:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 600:Generated_Source\PSoC4/CapSense_Sensing.c **** *
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 12


 601:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 602:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Starts a conversion on the pre-configured sensor. This function requires
 603:Generated_Source\PSoC4/CapSense_Sensing.c **** *  using the CapSense_SetupWidgetExt() function to set up the a
 604:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget.
 605:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 606:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 607:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function performs single scanning of one sensor in the widget configured
 608:Generated_Source\PSoC4/CapSense_Sensing.c **** *  by the CapSense_SetupWidgetExt() function.
 609:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 610:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling this function directly from the application layer is not
 611:Generated_Source\PSoC4/CapSense_Sensing.c **** *  recommended. This function is used to implement only the user's specific
 612:Generated_Source\PSoC4/CapSense_Sensing.c **** *  use cases (for faster execution time or pipeline scanning for example).
 613:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function is called when no scanning is in progress. I.e.
 614:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_IsBusy() returns a non-busy status.
 615:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 616:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The sensor must be preconfigured by using the
 617:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SetupWidgetExt() API prior to calling this function.
 618:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The sensor remains ready for a next scan if a previous scan was triggered
 619:Generated_Source\PSoC4/CapSense_Sensing.c **** *  by using the CapSense_ScanExt() function. In this case, calling
 620:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SetupWidgetExt() is not required every time before the
 621:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_ScanExt() function. If a previous scan was triggered in
 622:Generated_Source\PSoC4/CapSense_Sensing.c **** *  any other way - CapSense_Scan(), CapSense_ScanAllWidgets() or
 623:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_RunTuner() - (see the CapSense_RunTuner() function
 624:Generated_Source\PSoC4/CapSense_Sensing.c **** *  description for more details), the sensor must be preconfigured again by
 625:Generated_Source\PSoC4/CapSense_Sensing.c **** *  using the CapSense_SetupWidgetExt() API prior to calling the
 626:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_ScanExt() function.
 627:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 628:Generated_Source\PSoC4/CapSense_Sensing.c **** *  If disconnection of the sensors is required after calling
 629:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_ScanExt(), the CapSense_CSDDisconnectSns() or
 630:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_CSXDisconnectTx() or CapSense_CSXDisconnectRx()
 631:Generated_Source\PSoC4/CapSense_Sensing.c **** *  functions can be used.
 632:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 633:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 634:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the scan initiation operation:
 635:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 636:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 637:Generated_Source\PSoC4/CapSense_Sensing.c **** *    hardware block is busy.
 638:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget.
 639:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 640:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 641:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_ScanExt(void)
 642:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 643:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 644:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 645:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 646:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 647:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 648:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 649:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 650:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 651:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 652:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_currentSenseMethod)
 653:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 654:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 655:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 656:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXScanExt();
 657:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 13


 658:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 659:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 660:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 661:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDScanExt();
 662:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 663:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 664:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 665:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 666:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXScanExt();
 667:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 668:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 669:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 670:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CYRET_UNKNOWN;
 671:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 672:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 673:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 674:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 675:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 676:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 677:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 678:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 679:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsInitialize
 680:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 681:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 682:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 683:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 684:Generated_Source\PSoC4/CapSense_Sensing.c **** *  of the CapSense Component. This function is called from
 685:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_Start() API prior to calling any other APIs of the Component.
 686:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 687:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 688:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 689:Generated_Source\PSoC4/CapSense_Sensing.c **** *  of the CapSense Component. This function is called from
 690:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_Start() API prior to calling any other APIs of the Component.
 691:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Depending on the configuration, the function initializes the CSD block
 692:Generated_Source\PSoC4/CapSense_Sensing.c **** *     for the corresponding sensing mode.
 693:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. The function updates the dsRam.wdgtWorking variable with 1 when Self-test
 694:Generated_Source\PSoC4/CapSense_Sensing.c **** *     is enabled.
 695:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 696:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling the CapSense_Start API is the recommended method to initialize
 697:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense Component at power-up. The CapSense_SsInitialize()
 698:Generated_Source\PSoC4/CapSense_Sensing.c **** *  API should not be used for initialization, resume, or wake-up operations.
 699:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The dsRam.wdgtWorking variable is updated.
 700:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 701:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return status
 702:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns status of operation:
 703:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Zero        - Indicates successful initialization.
 704:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Non-zero    - One or more errors occurred in the initialization process.
 705:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 706:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 707:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SsInitialize(void)
 708:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 709:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus initStatus;
 710:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 711:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) &&\
 712:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_MFS_IMO == CapSense_MFS_METHOD))
 713:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 centerFreqTrim;
 714:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 14


 715:Generated_Source\PSoC4/CapSense_Sensing.c ****         centerFreqTrim = (uint8)CY_GET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR);
 716:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_immunity[CapSense_FREQ_CHANNEL_0] = centerFreqTrim;
 717:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 718:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (centerFreqTrim < CapSense_IMO_FREQUENCY_OFFSET_F1)
 719:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 720:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim + CapSense_IMO_FREQUENCY_OF
 721:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim + (CapSense_IMO_FREQUENCY_O
 722:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                            CapSense
 723:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 724:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (centerFreqTrim > (CapSense_IMO_FREQUENCY_OFFSET_MAX - CapSense_IMO_FREQUENCY_OFFSE
 725:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 726:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_IMO_FREQUENCY_OF
 727:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim - (CapSense_IMO_FREQUENCY_O
 728:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                            CapSense
 729:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 730:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 731:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 732:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_IMO_FREQUENCY_OF
 733:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim + CapSense_IMO_FREQUENCY_OF
 734:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 735:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 736:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) &&\
 737:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_MFS_IMO == CapSense_MFS_METHOD)) */
 738:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 739:Generated_Source\PSoC4/CapSense_Sensing.c ****     initStatus = CYRET_SUCCESS;
 740:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 741:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_DISABLE == CapSense_CSDV2)
 742:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsTrimIdacs();
 743:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 744:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 745:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if((CapSense_ENABLE == CapSense_CSD_EN) ||\
 746:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2)))
 747:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsInitializeSourceSenseClk();
 748:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
 749:Generated_Source\PSoC4/CapSense_Sensing.c ****               ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))) */
 750:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 751:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Set all IO states to the default state */
 752:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetAllIOsState((uint32)CapSense_SNS_CONNECTION_GROUND);
 753:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_dsRam.scanCurrentISC = CapSense_SNS_CONNECTION_GROUND;
 754:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 755:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSwitchSensingMode(CapSense_UNDEFINED_E);
 756:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_MANY_SENSE_MODES_EN)
 757:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSD_EN)
 758:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSD_E);
 759:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSX_EN)
 760:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSX_E);
 761:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_ISX_EN)
 762:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_ISX_E);
 763:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
 764:Generated_Source\PSoC4/CapSense_Sensing.c ****         #error "No sensing method enabled, Component cannot work in this mode"
 765:Generated_Source\PSoC4/CapSense_Sensing.c ****         initStatus = CYRET_UNKNOWN;
 766:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 767:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 768:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (initStatus);
 769:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 770:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 771:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 15


 772:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 773:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetPinState
 774:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 775:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 776:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 777:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the state (drive mode and output state) of the port pin used by a sensor.
 778:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The possible states are GND, Shield, High-Z, Tx or Rx, Sensor. If the sensor
 779:Generated_Source\PSoC4/CapSense_Sensing.c **** *  specified in the input parameter is a ganged sensor, then the state of all pins
 780:Generated_Source\PSoC4/CapSense_Sensing.c **** *  associated with the ganged sensor is updated.
 781:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 782:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 783:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function sets a specified state for a specified sensor element. For the
 784:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CSD widgets, sensor element is a sensor ID, for the CSX widgets, it is either
 785:Generated_Source\PSoC4/CapSense_Sensing.c **** *  an Rx or Tx electrode ID. If the specified sensor is a ganged sensor, then
 786:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the specified state is set for all the electrodes belong to the sensor.
 787:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function must not be called while the Component is in the busy state.
 788:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 789:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function accepts the CapSense_SHIELD and
 790:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SENSOR states as an input only if there is at least
 791:Generated_Source\PSoC4/CapSense_Sensing.c **** *  one CSD widget. Similarly, this function accepts the CapSense_TX_PIN
 792:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and CapSense_RX_PIN states as an input only if there is at least
 793:Generated_Source\PSoC4/CapSense_Sensing.c **** *  one CSX widget in the project.
 794:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 795:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling this function directly from the application layer is not
 796:Generated_Source\PSoC4/CapSense_Sensing.c **** *  recommended. This function is used to implement only the custom-specific
 797:Generated_Source\PSoC4/CapSense_Sensing.c **** *  use cases. Functions that perform a setup and scan of a sensor/widget
 798:Generated_Source\PSoC4/CapSense_Sensing.c **** *  automatically set the required pin states. They ignore changes
 799:Generated_Source\PSoC4/CapSense_Sensing.c **** *  in the design made by the CapSense_SetPinState() function.
 800:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function neither check wdgtIndex nor sensorElement for the correctness.
 801:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 802:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 803:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID of the widget to change the pin state of the specified
 804:Generated_Source\PSoC4/CapSense_Sensing.c **** *  sensor.
 805:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the CapSense Configuration
 806:Generated_Source\PSoC4/CapSense_Sensing.c **** *  header file defined as CapSense_<WidgetName>_WDGT_ID.
 807:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 808:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param sensorElement
 809:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID of the sensor element within the widget to change
 810:Generated_Source\PSoC4/CapSense_Sensing.c **** *  its pin state.
 811:Generated_Source\PSoC4/CapSense_Sensing.c **** *  \if SECTION_C_LOW_LEVEL
 812:Generated_Source\PSoC4/CapSense_Sensing.c **** *  For the CSD widgets, sensorElement is the sensor ID and can be found in the
 813:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 814:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_SNS<SensorNumber>_ID.
 815:Generated_Source\PSoC4/CapSense_Sensing.c **** *  For the CSX widgets, sensorElement is defined either as Rx ID or Tx ID.
 816:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The first Rx in a widget corresponds to sensorElement = 0, the second
 817:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Rx in a widget corresponds to sensorElement = 1, and so on.
 818:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The last Tx in a widget corresponds to sensorElement = (RxNum + TxNum).
 819:Generated_Source\PSoC4/CapSense_Sensing.c **** *  \endif
 820:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Macros for Rx and Tx IDs can be found in the
 821:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as:
 822:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_RX<RXNumber>_ID
 823:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_TX<TXNumber>_ID.
 824:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 825:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param state
 826:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the state of the sensor to be set:
 827:Generated_Source\PSoC4/CapSense_Sensing.c **** *     1. CapSense_GROUND - The pin is connected to the ground.
 828:Generated_Source\PSoC4/CapSense_Sensing.c **** *     2. CapSense_HIGHZ - The drive mode of the pin is set to High-Z
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 16


 829:Generated_Source\PSoC4/CapSense_Sensing.c **** *        Analog.
 830:Generated_Source\PSoC4/CapSense_Sensing.c **** *     3. CapSense_SHIELD - The shield signal is routed to the pin
 831:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSD sensing method with shield electrode is enabled).
 832:Generated_Source\PSoC4/CapSense_Sensing.c **** *     4. CapSense_SENSOR - The pin is connected to the scanning bus
 833:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSD sensing method is enabled).
 834:Generated_Source\PSoC4/CapSense_Sensing.c **** *     5. CapSense_TX_PIN - The Tx or Lx signal is routed to the sensor
 835:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSX or ISX sensing method is enabled).
 836:Generated_Source\PSoC4/CapSense_Sensing.c **** *     6. CapSense_RX_PIN - The pin is connected to the scanning bus
 837:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSX or ISX sensing method is enabled).
 838:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 839:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 840:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SetPinState(uint32 widgetId, uint32 sensorElement, uint32 state)
 841:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 842:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdNum;
 843:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdIndex;
 844:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8  interruptState;
 845:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *ioPtr;
 846:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_GANGED_SNS_EN)
 847:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_FLASH_SNS_STRUCT const *curFlashSnsPtr;
 848:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 849:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 850:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Getting sensor element pointer and number of electrodes */
 851:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_GANGED_SNS_EN)
 852:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check the ganged sns flag */
 853:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_GANGED_SNS_MASK == (CapSense_dsFlash.wdgtArray[widgetId].staticConfig & CapSen
 854:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 855:Generated_Source\PSoC4/CapSense_Sensing.c ****             curFlashSnsPtr = CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash;
 856:Generated_Source\PSoC4/CapSense_Sensing.c ****             curFlashSnsPtr += sensorElement;
 857:Generated_Source\PSoC4/CapSense_Sensing.c ****             ioPtr = &CapSense_ioList[curFlashSnsPtr->firstPinId];
 858:Generated_Source\PSoC4/CapSense_Sensing.c ****             eltdNum = curFlashSnsPtr->numPins;
 859:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 860:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 861:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 862:Generated_Source\PSoC4/CapSense_Sensing.c ****             ioPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsF
 863:Generated_Source\PSoC4/CapSense_Sensing.c ****             eltdNum = 1u;
 864:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 865:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
 866:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash
 867:Generated_Source\PSoC4/CapSense_Sensing.c ****         eltdNum = 1u;
 868:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 869:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 870:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Loop through all electrodes of the specified sensor element */
 871:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (eltdIndex = 0u; eltdIndex < eltdNum; eltdIndex++)
 872:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 873:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Reset HSIOM and PC registers */
 874:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 875:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_HSIOM_SEL_MASK << 
 876:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << ioPtr->s
 877:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 878:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 879:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (state)
 880:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 881:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_GROUND:
 882:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 883:Generated_Source\PSoC4/CapSense_Sensing.c ****             interruptState = CyEnterCriticalSection();
 884:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_SNS_GROUND_CONNECT <<
 885:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 17


 886:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 887:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 888:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 889:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_HIGHZ:
 890:Generated_Source\PSoC4/CapSense_Sensing.c ****             interruptState = CyEnterCriticalSection();
 891:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 892:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 893:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 894:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 895:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 896:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSOR:
 897:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Enable sensor */
 898:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDConnectSns(ioPtr);
 899:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 900:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 901:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 902:Generated_Source\PSoC4/CapSense_Sensing.c ****                 case CapSense_SHIELD:
 903:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Set appropriate bit in HSIOM register to configure pin to shield mode */
 904:Generated_Source\PSoC4/CapSense_Sensing.c ****                     interruptState = CyEnterCriticalSection();
 905:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_S
 906:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CyExitCriticalSection(interruptState);
 907:Generated_Source\PSoC4/CapSense_Sensing.c ****                     break;
 908:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 909:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 910:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 911:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 912:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_ISX_EN))
 913:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_TX_PIN:
 914:Generated_Source\PSoC4/CapSense_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 915:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_SEL_C
 916:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_GPIO_STRGDRV << i
 917:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 918:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 919:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 920:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_RX_PIN:
 921:Generated_Source\PSoC4/CapSense_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 922:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_SEL_A
 923:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << 
 924:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 925:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 926:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 927:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 928:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 929:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Wrong state */
 930:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 931:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 932:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 933:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr++;
 934:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 935:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 936:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 937:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 938:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 939:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsCSDDisableMode
 940:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 941:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 942:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 18


 943:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables CSD mode.
 944:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 945:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 946:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable CSD mode the following tasks are performed:
 947:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect Cmod from AMUXBUS-A.
 948:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 949:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  3. Disconnect Csh from AMUXBUS-B.
 950:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  4. Disable Shield Electrodes.
 951:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 952:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
 953:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsCSDDisableMode(void)
 954:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 955:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSDV2) && \
 956:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN))
 957:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 958:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 newRegValue;
 959:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 960:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect IDACA and IDACB */
 961:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_SW_REFGEN_SEL_PTR);
 962:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue &= (uint32)(~CapSense_SW_REFGEN_SEL_SW_IAIB_MASK);
 963:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 964:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSDV2) && \
 965:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)) */
 966:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 967:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Cmod from AMUXBUS-A using HSIOM registers */
 968:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CMOD_HSIOM_PTR, CapSense_CMOD_HSIOM_MASK, 0u);
 969:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 970:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous CSD electrode if it has been connected */
 971:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsCSDElectrodeCheck();
 972:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 973:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Csh from AMUXBUS-B */
 974:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 975:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
 976:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CSH_HSIOM_PTR, CapSense_CSH_HSIOM_MASK, 0u);
 977:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 978:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 979:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 980:Generated_Source\PSoC4/CapSense_Sensing.c ****              (0u != CapSense_CSD_TOTAL_SHIELD_COUNT))
 981:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDDisableShieldElectrodes();
 982:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 983:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 984:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 985:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 986:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 987:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
 988:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 989:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsDisableCSXMode
 990:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 991:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 992:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
 993:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables CSX mode.
 994:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 995:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 996:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable CSX mode the following tasks are performed:
 997:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A.
 998:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 999:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 19


1000:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1001:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableCSXMode(void)
1002:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1003:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers */
1004:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CintA_HSIOM_PTR, CapSense_CintA_HSIOM_MASK, 0u);
1005:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers */
1006:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CintB_HSIOM_PTR, CapSense_CintB_HSIOM_MASK, 0u);
1007:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous CSX electrode if it has been connected */
1008:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_CSXElectrodeCheck();
1009:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1010:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1011:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1012:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1013:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
1014:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1015:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsDisableISXMode
1016:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1017:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1018:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1019:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables ISX mode.
1020:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1021:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1022:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable ISX mode the following tasks are performed:
1023:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A
1024:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous ISX electrode if it has been connected
1025:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1026:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1027:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableISXMode(void)
1028:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1029:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers */
1030:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CintA_HSIOM_PTR, CapSense_CintA_HSIOM_MASK, 0u);
1031:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers */
1032:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CintB_HSIOM_PTR, CapSense_CintB_HSIOM_MASK, 0u);
1033:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous ISX electrode if it has been connected */
1034:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ISXElectrodeCheck();
1035:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_DigPrt2_Stop();
1036:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_USES_PORT_3)
1037:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DigPrt3_Stop();
1038:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
1039:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1040:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1041:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1042:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1043:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1044:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSwitchSensingMode
1045:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1046:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1047:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1048:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function changes the Сomponent settings for operation in a specified
1049:Generated_Source\PSoC4/CapSense_Sensing.c **** *  sensing mode.
1050:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1051:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1052:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function performs following tasks:
1053:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Releasing the CSD HW block.
1054:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnecting external capacitors.
1055:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Setting new mode.
1056:Generated_Source\PSoC4/CapSense_Sensing.c **** *  4. Configuring HW to the new sensing mode.
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 20


1057:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1058:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param mode
1059:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the scan mode:
1060:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_CSD_E
1061:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_CSX_E
1062:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_ISX_E
1063:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_BIST_E
1064:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_UNDEFINED_E
1065:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1066:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1067:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_ENUM mode)
1068:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1069:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_currentSenseMethod != mode)
1070:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1071:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* The requested mode differs to the current one. Disable the current mode */
1072:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_SENSE_METHOD_CSD_E == CapSense_currentSenseMethod)
1073:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1074:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_EN)
1075:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsCSDDisableMode();
1076:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
1077:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1078:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_CSX_E == CapSense_currentSenseMethod)
1079:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1080:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSX_EN)
1081:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsDisableCSXMode();
1082:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1083:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1084:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_ISX_E == CapSense_currentSenseMethod)
1085:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1086:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ISX_EN)
1087:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsDisableISXMode();
1088:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1089:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1090:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_BIST_E == CapSense_currentSenseMethod)
1091:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1092:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1093:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_BistDisableMode();
1094:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1095:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1096:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
1097:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1098:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ADC_EN)
1099:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Release ADC resources */
1100:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_AdcReleaseResources();
1101:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
1102:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1103:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1104:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Enable the specified mode */
1105:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_SENSE_METHOD_CSD_E == mode)
1106:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1107:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_EN)
1108:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize CSD mode to guarantee configured CSD mode */
1109:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsCSDInitialize();
1110:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSD_E;
1111:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
1112:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1113:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_CSX_E == mode)
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 21


1114:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1115:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSX_EN)
1116:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize CSX mode to guarantee configured CSX mode */
1117:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXInitialize();
1118:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSX_E;
1119:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1120:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1121:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_ISX_E == mode)
1122:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1123:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ISX_EN)
1124:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize ISX mode to guarantee configured ISX mode */
1125:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXInitialize();
1126:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_ISX_E;
1127:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1128:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1129:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_BIST_E == mode)
1130:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1131:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1132:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_BistInitialize();
1133:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_BIST_E;
1134:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1135:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1136:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
1137:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1138:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
1139:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1140:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1141:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1142:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1143:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1144:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1145:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetAllIOsState
1146:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1147:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1148:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1149:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all electrodes into a default state.
1150:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1151:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1152:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all the CSD/CSX IOs into a default state:
1153:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
1154:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - DM      - Strong drive.
1155:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - State   - Zero.
1156:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1157:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all the ADC channels into a default state:
1158:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
1159:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - DM      - HiZ-Analog.
1160:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - State   - Zero.
1161:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1162:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly from the application
1163:Generated_Source\PSoC4/CapSense_Sensing.c **** *  layer.
1164:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1165:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1166:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetAllIOsState(uint32 state)
1167:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1168:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8  interruptState;
1169:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1170:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 loopIndex;
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 22


1171:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1172:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newPinPcVal;
1173:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newPinHsiomVal;
1174:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1175:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 tmpPcDrRegValue;
1176:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 tmpHsiomRegValue;
1177:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1178:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *snsIoPtr;
1179:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1180:Generated_Source\PSoC4/CapSense_Sensing.c ****     switch(state)
1181:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1182:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_SNS_CONNECTION_GROUND:
1183:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_STRONG;
1184:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
1185:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
1186:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_SNS_CONNECTION_HIGHZ:
1187:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_ALG_HIZ;
1188:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
1189:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
1190:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_SNS_CONNECTION_SHIELD:
1191:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_ALG_HIZ;
1192:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_CSD_SHIELD;
1193:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
1194:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
1195:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_STRONG;
1196:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
1197:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
1198:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1199:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1200:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Loop through all electrodes */
1201:Generated_Source\PSoC4/CapSense_Sensing.c ****     snsIoPtr = &CapSense_ioList[0u];
1202:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (loopIndex = 0u; loopIndex < CapSense_TOTAL_ELECTRODES; loopIndex++)
1203:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1204:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
1205:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1206:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpHsiomRegValue = CY_GET_REG32 (snsIoPtr->hsiomPtr);
1207:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpHsiomRegValue &= ~(snsIoPtr->hsiomMask);
1208:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
1209:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1210:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue = CY_GET_REG32 (snsIoPtr->pcPtr);
1211:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue &= ~(CapSense_GPIO_PC_MASK << snsIoPtr->shift);
1212:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue |=  (newPinPcVal << snsIoPtr->shift);
1213:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->pcPtr, tmpPcDrRegValue);
1214:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1215:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpHsiomRegValue |=  (newPinHsiomVal << snsIoPtr->hsiomShift);
1216:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
1217:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1218:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue = CY_GET_REG32 (snsIoPtr->drPtr);
1219:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue &= ~(snsIoPtr->mask);
1220:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->drPtr, tmpPcDrRegValue);
1221:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1222:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
1223:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1224:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Get next electrode */
1225:Generated_Source\PSoC4/CapSense_Sensing.c ****         snsIoPtr++;
1226:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1227:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 23


1228:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSD_EN) &&\
1229:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&\
1230:Generated_Source\PSoC4/CapSense_Sensing.c ****          (0u != CapSense_CSD_TOTAL_SHIELD_COUNT))
1231:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsCSDSetShieldElectrodesState(state);
1232:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
1233:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1234:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if(CapSense_ENABLE == CapSense_ADC_EN)
1235:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ClearAdcChannels();
1236:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
1237:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1238:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1239:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1240:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ADC_EN)
1241:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1242:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsReleaseResources()
1243:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1244:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1245:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1246:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function sets the resources that do not belong to the sensing HW block to
1247:Generated_Source\PSoC4/CapSense_Sensing.c **** *  default state.
1248:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1249:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1250:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The function performs following tasks:
1251:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Checks if CSD block busy and returns error if it is busy
1252:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnects integration capacitors (CintA, CintB for CSX mode and
1253:Generated_Source\PSoC4/CapSense_Sensing.c **** *     Cmod for CSD mode)
1254:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Disconnect electroded if they have been connected.
1255:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1256:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
1257:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
1258:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Zero        - Resources released successfully.
1259:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Non-zero    - One or more errors occurred in releasing process.
1260:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1261:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1262:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SsReleaseResources(void)
1263:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1264:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus busyStatus = CYRET_SUCCESS;
1265:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1266:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_SW_STS_BUSY))
1267:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1268:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
1269:Generated_Source\PSoC4/CapSense_Sensing.c ****         busyStatus = CYRET_INVALID_STATE;
1270:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1271:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
1272:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1273:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
1274:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsDisableCSXMode();
1275:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1276:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1277:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
1278:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsDisableISXMode();
1279:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1280:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1281:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
1282:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDDisableMode();
1283:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
1284:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 24


1285:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1286:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_BistDisableMode();
1287:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1288:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1289:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSetAllIOsState((uint32)CapSense_SNS_CONNECTION_GROUND);
1290:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1291:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1292:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Reset of the currentSenseMethod variable to make sure that the next
1293:Generated_Source\PSoC4/CapSense_Sensing.c ****          * call of SetupWidget() API setups the correct widget mode
1294:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1295:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
1296:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1297:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1298:Generated_Source\PSoC4/CapSense_Sensing.c ****     return busyStatus;
1299:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1300:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
1301:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1302:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1303:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1304:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsPostAllWidgetsScan
1305:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1306:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1307:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1308:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The ISR function for multiple widget scanning implementation.
1309:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1310:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1311:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is the function used by the CapSense ISR to implement multiple widget
1312:Generated_Source\PSoC4/CapSense_Sensing.c **** *  scanning.
1313:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Should not be used by the application layer.
1314:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1315:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1316:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsPostAllWidgetsScan(void)
1317:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1318:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1319:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Increment widget index
1320:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Check if all the widgets are scanned
1321:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  3. If all the widgets are not scanned, set up and scan next widget
1322:Generated_Source\PSoC4/CapSense_Sensing.c ****     */
1323:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (1u != CapSense_TOTAL_WIDGETS)
1324:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus postScanStatus;
1325:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1326:Generated_Source\PSoC4/CapSense_Sensing.c ****         do
1327:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1328:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_widgetIndex++;
1329:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1330:Generated_Source\PSoC4/CapSense_Sensing.c ****             postScanStatus = CapSense_SetupWidget((uint32)CapSense_widgetIndex);
1331:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1332:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS == postScanStatus)
1333:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1334:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if((CapSense_TOTAL_WIDGETS - 1u) == CapSense_widgetIndex)
1335:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1336:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* The last widget will be scanned. Reset flag to skip configuring the next wid
1337:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_requestScanAllWidget = CapSense_DISABLE;
1338:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1339:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_Scan();
1340:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1341:Generated_Source\PSoC4/CapSense_Sensing.c ****             else if((CapSense_TOTAL_WIDGETS - 1u) == CapSense_widgetIndex)
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 25


1342:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1343:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if ((CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) && \
1344:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (CapSense_ENABLE == CapSense_CSD_EN))
1345:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSD_E ==
1346:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[CapSense_widgetIndex]
1347:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1348:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Disable the CSD block */
1349:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd);
1350:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1351:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* ((CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) && \
1352:Generated_Source\PSoC4/CapSense_Sensing.c ****                            (CapSense_ENABLE == CapSense_CSD_EN)) */
1353:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1354:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update scan Counter */
1355:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.scanCounter++;
1356:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
1357:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
1358:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1359:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update status with with the failure */
1360:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_STATUS_ERR_MASK;
1361:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
1362:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1363:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set postScanStatus to exit the while loop */
1364:Generated_Source\PSoC4/CapSense_Sensing.c ****                 postScanStatus = CYRET_SUCCESS;
1365:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1366:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
1367:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1368:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update status with with the failure. Configure the next widget in while() loop *
1369:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_STATUS_ERR_MASK;
1370:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
1371:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1372:Generated_Source\PSoC4/CapSense_Sensing.c ****         } while (CYRET_SUCCESS != postScanStatus);
1373:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (1u != CapSense_TOTAL_WIDGETS) */
1374:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1375:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1376:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1377:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1378:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsIsrInitialize
1379:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1380:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1381:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1382:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Enables and initializes for the function pointer for a callback for the ISR.
1383:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1384:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1385:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The "address" is a special type cyisraddress defined by Cylib. This function
1386:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is used by Component APIs and should not be used by an application program for
1387:Generated_Source\PSoC4/CapSense_Sensing.c **** *  proper working of the Component.
1388:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1389:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param address
1390:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The address of the function to be called when interrupt is fired.
1391:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1392:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1393:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsIsrInitialize(cyisraddress address)
1394:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1395:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_ISR_StartEx(address);
1396:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1397:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1398:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 26


1399:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1400:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetModClkClockDivider
1401:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1402:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1403:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1404:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for the modulator clock and then starts
1405:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the modulator clock.
1406:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1407:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1408:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1409:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1410:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1411:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1412:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param modClk
1413:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The divider value for the modulator clock.
1414:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1415:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1416:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetModClkClockDivider(uint32 modClk)
1417:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1418:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1419:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Stop modulator clock */
1420:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1421:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_ModClk__DIV_ID <<
1422:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CapSense_MODCLK_CMD_DIV_SHIFT)|
1423:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_MODCLK_CMD_DISABLE_MASK));
1424:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1425:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1426:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Set divider value for sense modClk.
1427:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from modClk because Divider register value 0 corresponds
1428:Generated_Source\PSoC4/CapSense_Sensing.c ****      * to dividing by 1.
1429:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1430:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_DIV_PTR, ((modClk - 1u) << 8u));
1431:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1432:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Check whether previous modulator clock start command has finished. */
1433:Generated_Source\PSoC4/CapSense_Sensing.c ****     while(0u != (CY_GET_REG32(CapSense_MODCLK_CMD_PTR) & CapSense_MODCLK_CMD_ENABLE_MASK))
1434:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1435:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Wait until previous modulator clock start command has finished */
1436:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1437:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1438:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Start modulator clock, aligned to HFCLK */
1439:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1440:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(((uint32)CapSense_ModClk__DIV_ID << CapSense_MODCLK_CMD_DIV_SHIFT) |
1441:Generated_Source\PSoC4/CapSense_Sensing.c ****                   ((uint32)CapSense_ModClk__PA_DIV_ID << CapSense_MODCLK_CMD_PA_DIV_SHIFT) |
1442:Generated_Source\PSoC4/CapSense_Sensing.c ****                   CapSense_MODCLK_CMD_ENABLE_MASK));
1443:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
1444:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newRegValue;
1445:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1446:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Clear bit to disable ModClk clock. */
1447:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1448:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CY_GET_REG32(CapSense_MODCLK_CMD_PTR) &
1449:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(~CapSense_ModClk__ENABLE_MASK));
1450:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1451:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1452:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Update ModClk clock divider.
1453:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from modClk because Divider register value has range (0-65535).
1454:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1455:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_MODCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_ModClk__DIVIDE
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 27


1456:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= (modClk - 1u);
1457:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_DIV_PTR, newRegValue);
1458:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1459:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Set bit to enable ModClk clock. */
1460:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1461:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CY_GET_REG32(CapSense_MODCLK_CMD_PTR) |
1462:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ModClk__ENABLE_MASK);
1463:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1464:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1465:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1466:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1467:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1468:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetSnsClockDivider
1469:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1470:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1471:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1472:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for the sense clock and then starts
1473:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the sense clock.
1474:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1475:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1476:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1477:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1478:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1479:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1480:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
1481:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClk The divider value for the sense clock.
1482:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1483:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1484:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetSnsClockDivider(uint32 snsClk)
1485:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1486:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
1487:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newRegValue;
1488:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1489:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1490:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Set divider value for sense clock.
1491:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from snsClk because SENSE_DIV value 0 corresponds
1492:Generated_Source\PSoC4/CapSense_Sensing.c ****      * to dividing by 1.
1493:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1494:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_SENSE_PERIOD_PTR);
1495:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue &= (uint32)(~CapSense_SENSE_PERIOD_SENSE_DIV_MASK);
1496:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= snsClk - 1u;
1497:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, newRegValue);
1498:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
1499:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1500:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Stop sense clock clock   */
1501:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1502:Generated_Source\PSoC4/CapSense_Sensing.c ****                      ((uint32)CapSense_SnsClk__DIV_ID <<
1503:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CapSense_SNSCLK_CMD_DIV_SHIFT)|
1504:Generated_Source\PSoC4/CapSense_Sensing.c ****                      ((uint32)CapSense_SNSCLK_CMD_DISABLE_MASK));
1505:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1506:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1507:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Set divider value for sense clock.
1508:Generated_Source\PSoC4/CapSense_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value 0 corresponds
1509:Generated_Source\PSoC4/CapSense_Sensing.c ****          * to dividing by 1.
1510:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1511:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_DIV_PTR, ((snsClk - 1u) << 8u));
1512:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 28


1513:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check whether previous sense clock start command has finished. */
1514:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(0u != (CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) & CapSense_SNSCLK_CMD_ENABLE_MASK))
1515:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1516:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Wait until previous sense clock start command has finished. */
1517:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1518:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1519:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Start sense clock aligned to previously started modulator clock. */
1520:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1521:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (uint32)(((uint32)CapSense_SnsClk__DIV_ID << CapSense_SNSCLK_CMD_DIV_SHIFT) |
1522:Generated_Source\PSoC4/CapSense_Sensing.c ****                       ((uint32)CapSense_ModClk__PA_DIV_ID << CapSense_SNSCLK_CMD_PA_DIV_SHIFT) |
1523:Generated_Source\PSoC4/CapSense_Sensing.c ****                       CapSense_SNSCLK_CMD_ENABLE_MASK));
1524:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
1525:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
1526:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1527:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Clear bit to disable SnsClk clock. */
1528:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1529:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) &
1530:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (uint32)(~(uint32)CapSense_SnsClk__ENABLE_MASK));
1531:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1532:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1533:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Update snsClk clock divider.
1534:Generated_Source\PSoC4/CapSense_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value has range (0-65535).
1535:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1536:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_SNSCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_SnsClk__DI
1537:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= (snsClk - 1u);
1538:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_DIV_PTR, newRegValue);
1539:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1540:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set bit to enable SnsClk clock. */
1541:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1542:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) |
1543:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_SnsClk__ENABLE_MASK);
1544:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1545:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1546:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1547:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1548:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1549:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1550:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetClockDividers
1551:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1552:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1553:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1554:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for sense and modulator clocks and then starts
1555:Generated_Source\PSoC4/CapSense_Sensing.c **** *  a modulator clock-phase aligned to HFCLK and sense clock-phase aligned to
1556:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the modulator clock.
1557:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1558:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1559:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1560:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1561:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1562:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1563:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
1564:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClk The divider value for the sense clock.
1565:Generated_Source\PSoC4/CapSense_Sensing.c **** *  modClk The divider value for the modulator clock.
1566:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1567:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1568:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetClockDividers(uint32 snsClk, uint32 modClk)
1569:Generated_Source\PSoC4/CapSense_Sensing.c **** {
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 29


1570:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Mod clock */
1571:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetModClkClockDivider(modClk);
1572:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1573:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Sns clock */
1574:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetSnsClockDivider(snsClk);
1575:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1576:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1577:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1578:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ANYMODE_AUTOCAL)
1579:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1580:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_CalibrateWidget
1581:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1582:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1583:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1584:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the sensors in the specified widget to the default
1585:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target, this function detects the sensing method used by the
1586:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  widget prior to calibration.
1587:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1588:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1589:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function performs exactly the same tasks as
1590:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_CalibrateAllWidgets, but only for a specified widget.
1591:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function detects the sensing method used by the widgets and uses
1592:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the Enable compensation IDAC parameter.
1593:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1594:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1595:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1596:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1597:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_C_LOW_LEVEL
1598:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1599:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  auto-calibration parameter is enabled.
1600:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1601:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1602:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the ISX Enable auto-calibration parameter
1603:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  is enabled.
1604:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1605:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1606:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
1607:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID number of the widget to calibrate its raw count.
1608:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  A macro for the widget ID can be found in the
1609:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense Configuration header file defined as
1610:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_<WidgetName>_WDGT_ID.
1611:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1612:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1613:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the specified widget calibration:
1614:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1615:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_PARAM - The input parameter is invalid.
1616:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1617:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    operate as expected.
1618:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1619:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1620:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_CalibrateWidget(uint32 widgetId)
1621:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1622:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1623:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1624:Generated_Source\PSoC4/CapSense_Sensing.c ****         do
1625:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1626:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_TOTAL_WIDGETS <= widgetId)
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 30


1627:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1628:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CYRET_BAD_PARAM;
1629:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1630:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1631:Generated_Source\PSoC4/CapSense_Sensing.c ****             /*
1632:Generated_Source\PSoC4/CapSense_Sensing.c ****              *  Check if widget id is valid, specified widget did not
1633:Generated_Source\PSoC4/CapSense_Sensing.c ****              *  detect any faults conditions if BIST is enabled.
1634:Generated_Source\PSoC4/CapSense_Sensing.c ****              */
1635:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1636:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (0u != CapSense_GET_WIDGET_EN_STATUS(widgetId))
1637:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1638:Generated_Source\PSoC4/CapSense_Sensing.c ****                     calibrateStatus = CYRET_SUCCESS;
1639:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1640:Generated_Source\PSoC4/CapSense_Sensing.c ****                 else
1641:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1642:Generated_Source\PSoC4/CapSense_Sensing.c ****                     calibrateStatus = CYRET_INVALID_STATE;
1643:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1644:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif  /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1645:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1646:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS != calibrateStatus)
1647:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1648:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Exit from the loop because of a fail */
1649:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
1650:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1651:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1652:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1653:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_MANY_WIDGET_METHODS_EN)
1654:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Check widget sensing method and call appropriate APIs */
1655:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_ISX_IDAC_AUTOCAL_EN)
1656:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_ISX_E ==
1657:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1658:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1659:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSX widget */
1660:Generated_Source\PSoC4/CapSense_Sensing.c ****                        CapSense_ISXCalibrateWidget(widgetId, CapSense_ISX_RAWCOUNT_CAL_LEVEL);
1661:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1662:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_ISX_IDAC_AUTOCAL_EN) */
1663:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1664:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Check widget sensing method and call appropriate APIs */
1665:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_IDAC_AUTOCAL_EN)
1666:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSX_E ==
1667:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1668:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1669:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSX widget */
1670:Generated_Source\PSoC4/CapSense_Sensing.c ****                        calibrateStatus = CapSense_CSXCalibrateWidget(widgetId, CapSense_CSX_RAWCOUN
1671:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1672:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_CSX_IDAC_AUTOCAL_EN) */
1673:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1674:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN)
1675:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSD_E ==
1676:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1677:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1678:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSD widget */
1679:Generated_Source\PSoC4/CapSense_Sensing.c ****                         calibrateStatus = CapSense_CSDCalibrateWidget(widgetId, CapSense_CSD_RAWCOU
1680:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1681:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN) */
1682:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1683:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only CSD is enabled, calibrate CSD sensor */
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 31


1684:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_CSD_EN)
1685:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CapSense_CSDCalibrateWidget(widgetId, CapSense_CSD_RAWCOUNT_CAL_L
1686:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1687:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only CSX is enabled, call CSX scan */
1688:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_CSX_EN)
1689:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CapSense_CSXCalibrateWidget(widgetId, CapSense_CSX_RAWCOUNT_CAL_L
1690:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1691:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only ISX is enabled, call ISX scan */
1692:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_ISX_EN)
1693:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXCalibrateWidget(widgetId, CapSense_ISX_RAWCOUNT_CAL_LEVEL);
1694:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1695:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
1696:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CYRET_UNKNOWN;
1697:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
1698:Generated_Source\PSoC4/CapSense_Sensing.c ****         } while (0u);
1699:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1700:Generated_Source\PSoC4/CapSense_Sensing.c ****         return calibrateStatus;
1701:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1702:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1703:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1704:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1705:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_CalibrateAllWidgets
1706:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1707:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1708:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1709:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1710:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target, this function detects the sensing method used by the widgets
1711:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  prior to calibration.
1712:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1713:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1714:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1715:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target value. This function detects the sensing method used by the widgets
1716:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and regards the Enable compensation IDAC parameter.
1717:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1718:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1719:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1720:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1721:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \cond SECTION_C_LOW_LEVEL
1722:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1723:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  auto-calibration parameter is enabled.
1724:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endcond
1725:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1726:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the ISX Enable Auto-calibration parameter
1727:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  is enabled.
1728:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1729:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1730:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1731:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the calibration process:
1732:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1733:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1734:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    operate as expected.
1735:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1736:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1737:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_CalibrateAllWidgets(void)
1738:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1739:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1740:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 32


1741:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
1743:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1744:Generated_Source\PSoC4/CapSense_Sensing.c ****             calibrateStatus |= CapSense_CalibrateWidget(wdgtIndex);
1745:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1746:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1747:Generated_Source\PSoC4/CapSense_Sensing.c ****         return calibrateStatus;
1748:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1749:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ANYMODE_AUTOCAL) */
1750:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1751:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1752:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)
1753:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1754:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsAutoTuneWidget
1755:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1756:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1757:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1758:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the parameters auto-tuning for the optimal CapSense
1759:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  operation for a desired widget.
1760:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1761:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1762:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the following:
1763:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calibrates Modulator and Compensation IDACs.
1764:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Tunes the Sense Clock optimal value to get a Sense Clock period greater than
1765:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    2*5*R*Cp.
1766:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calculates the resolution for the optimal finger capacitance.
1767:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1768:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
1769:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID number of a desired widget.
1770:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  A macro for the widget ID can be found in the
1771:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense Configuration header file defined as
1772:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_<WidgetName>_WDGT_ID.
1773:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1774:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1775:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the operation:
1776:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Zero     - All the widgets are auto-tuned successfully.
1777:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Non-zero - Auto-tuning failed for any widget.
1778:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1779:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1780:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_SsAutoTuneWidget(uint32 widgetId)
1781:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1782:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
1783:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1784:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 snsIndex;
1785:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 inputSnsClk;
1786:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 minSnsClkDiv;
1787:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 minSnsClkDivTmp;
1788:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1789:Generated_Source\PSoC4/CapSense_Sensing.c ****         AUTO_TUNE_CONFIG_TYPE autoTuneConfig;
1790:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1791:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 maxRaw = 0u;
1792:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 maxCp = 0u;
1793:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 maxIdacComp = 0u;
1794:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1795:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1796:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 maxCpSnsId = 0u;
1797:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 maxCpRowSnsId = 0u;
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 33


1798:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
1799:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1800:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_FLASH_WD_STRUCT const *ptrFlashWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1801:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_RAM_WD_BASE_STRUCT *ptrRamWidget = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWidget->
1802:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_RAM_SNS_STRUCT *ptrRamSensor = ptrFlashWidget->ptr2SnsRam;
1803:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1804:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Find input of sensor clock frequency */
1805:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSDV2)
1806:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are chained (Fourth-generation HW block). Flip flop is not available */
1807:Generated_Source\PSoC4/CapSense_Sensing.c ****             inputSnsClk = ((uint32)CYDEV_BCLK__HFCLK__KHZ / (uint32)CapSense_dsRam.modCsdClk);
1808:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1809:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Minimum value of SnaClk divider that is allowed for all Fourth-generation
1810:Generated_Source\PSoC4/CapSense_Sensing.c ****              * CSD HW block based devices.
1811:Generated_Source\PSoC4/CapSense_Sensing.c ****             */
1812:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv = CapSense_MIN_SNS_CLK_DIVIDER;
1813:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1814:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are not chained */
1815:Generated_Source\PSoC4/CapSense_Sensing.c ****             inputSnsClk = CYDEV_BCLK__HFCLK__KHZ >> CapSense_FLIP_FLOP_DIV;
1816:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1817:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Minimum value of SnaClk divider that is allowed for PSoC 4100 and PSoC 4200
1818:Generated_Source\PSoC4/CapSense_Sensing.c ****                device families.
1819:Generated_Source\PSoC4/CapSense_Sensing.c ****             */
1820:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv = CapSense_dsRam.modCsdClk;
1821:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
1822:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are chained (PSoC 4100, PSoC 4200) */
1823:Generated_Source\PSoC4/CapSense_Sensing.c ****             inputSnsClk = (CYDEV_BCLK__HFCLK__KHZ / CapSense_dsRam.modCsdClk) >> CapSense_FLIP_FLOP
1824:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1825:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Minimum value of SnaClk divider that is allowed for all Fourth-generation
1826:Generated_Source\PSoC4/CapSense_Sensing.c ****              * CSD HW block based device except PSoC 4100 and PSoC 4200 device families.
1827:Generated_Source\PSoC4/CapSense_Sensing.c ****             */
1828:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv = CapSense_MIN_SNS_CLK_DIVIDER;
1829:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1830:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1831:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Minimum value of SnsClk divider required to ensure the CSD HW block
1832:Generated_Source\PSoC4/CapSense_Sensing.c ****          * operation in allowed frequency range.
1833:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1834:Generated_Source\PSoC4/CapSense_Sensing.c ****         minSnsClkDivTmp = inputSnsClk * CapSense_AUTOTUNE_CAL_UNITS;
1835:Generated_Source\PSoC4/CapSense_Sensing.c ****         minSnsClkDivTmp /= CapSense_CSD_SNS_FREQ_KHZ_MAX;
1836:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1837:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (minSnsClkDiv < minSnsClkDivTmp)
1838:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1839:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv = minSnsClkDivTmp;
1840:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1841:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1842:Generated_Source\PSoC4/CapSense_Sensing.c ****         minSnsClkDiv = (minSnsClkDiv + (CapSense_AUTOTUNE_CAL_UNITS - 1u)) / CapSense_AUTOTUNE_CAL_
1843:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1844:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Make divider even */
1845:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (0u != (minSnsClkDiv & 0x01u))
1846:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1847:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv++;
1848:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1849:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1850:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Initialize auto-tuning configuration structure */
1851:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.snsClkInputClock = (uint16)inputSnsClk;
1852:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.snsClkConstantR = CapSense_CSD_SNSCLK_R_CONST;
1853:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.vRef = CapSense_CSD_VREF_MV;
1854:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.fingerCap = ptrRamWidget->fingerCap;
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 34


1855:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.sigPFC = &ptrRamWidget->sigPFC;
1856:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1857:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1858:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #1:
1859:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - performing the first calibration at fixed settings
1860:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting maximum sensor Cp
1861:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting sense clock frequency based on Cp
1862:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1863:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1864:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrRamWidget->resolution = CapSense_AUTOTUNE_CALIBRATION_RESOLUTION;
1865:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1866:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrRamWidget->snsClk = (uint16)(inputSnsClk / CapSense_AUTOTUNE_CALIBRATION_FREQ_KHZ);
1867:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrRamWidget->snsClkSource = (uint8)CapSense_CLK_SOURCE_DIRECT;
1868:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1869:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1870:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrRamWidget->rowSnsClk = (uint16)(inputSnsClk / CapSense_AUTOTUNE_CALIBRATION_FREQ_KHZ
1871:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrRamWidget->rowSnsClkSource = (uint8)CapSense_CLK_SOURCE_DIRECT;
1872:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
1873:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1874:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calibrate CSD widget to the default calibration target */
1875:Generated_Source\PSoC4/CapSense_Sensing.c ****         (void)CapSense_CSDCalibrateWidget(widgetId, CapSense_AUTOTUNE_CAL_LEVEL);
1876:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1877:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Find raw count and IDAC of a sensor with maximum Cp */
1878:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (snsIndex = 0u; snsIndex < ptrFlashWidget->numCols; snsIndex++)
1879:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1880:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1881:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (maxIdacComp < ptrRamSensor->idacComp[0u])
1882:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1883:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1884:Generated_Source\PSoC4/CapSense_Sensing.c ****                         maxCpSnsId = snsIndex;
1885:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif
1886:Generated_Source\PSoC4/CapSense_Sensing.c ****                     maxIdacComp = ptrRamSensor->idacComp[0u];
1887:Generated_Source\PSoC4/CapSense_Sensing.c ****                     maxRaw = ptrRamSensor->raw[0u];
1888:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1889:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
1890:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (maxRaw < ptrRamSensor->raw[0u])
1891:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1892:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1893:Generated_Source\PSoC4/CapSense_Sensing.c ****                         maxCpSnsId = snsIndex;
1894:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif
1895:Generated_Source\PSoC4/CapSense_Sensing.c ****                     maxRaw = ptrRamSensor->raw[0u];
1896:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1897:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
1898:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrRamSensor++;
1899:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1900:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1901:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Update auto-tuning configuration structure */
1902:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacMod = ptrRamWidget->idacMod[0u];
1903:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacComp = (uint8)maxIdacComp;
1904:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_idacGainTable[ptrRamWidget->idacGainIndex].gainValue;
1905:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.ptrSenseClk = &ptrRamWidget->snsClk;
1906:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.calTarget = (uint16)((maxRaw * CapSense_AUTOTUNE_CAL_UNITS) /
1907:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ((uint32)(0x01uL << CapSense_AUTOTUNE_CALIBRATION_RESOLUTION) - 1u));
1908:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1909:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Find sensor Cp and optimum sense clock value */
1910:Generated_Source\PSoC4/CapSense_Sensing.c ****         maxCp = SmartSense_TunePrescalers(&autoTuneConfig);
1911:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.sensorCap = maxCp;
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 35


1912:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1913:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Increase sensor clock divider to valid value */
1914:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(ptrRamWidget->snsClk < minSnsClkDiv)
1915:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1916:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrRamWidget->snsClk <<= 1u;
1917:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1918:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1919:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Do the same for row for touchpad or matrix buttons widgets */
1920:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1921:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((CapSense_WD_TOUCHPAD_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)) ||
1922:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_WD_MATRIX_BUTTON_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)))
1923:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1924:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Find a sensor with maximum Cp */
1925:Generated_Source\PSoC4/CapSense_Sensing.c ****                 maxRaw = 0u;
1926:Generated_Source\PSoC4/CapSense_Sensing.c ****                 maxIdacComp = 0u;
1927:Generated_Source\PSoC4/CapSense_Sensing.c ****                 for (snsIndex = ptrFlashWidget->numCols; snsIndex < ptrFlashWidget->totalNumSns; sn
1928:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1929:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1930:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (maxIdacComp < ptrRamSensor->idacComp[0u])
1931:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1932:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxCpRowSnsId = snsIndex;
1933:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxIdacComp = ptrRamSensor->idacComp[0u];
1934:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxRaw = ptrRamSensor->raw[0u];
1935:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1936:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
1937:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (maxRaw < ptrRamSensor->raw[0u])
1938:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1939:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxCpRowSnsId = snsIndex;
1940:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxRaw = ptrRamSensor->raw[0u];
1941:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1942:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif
1943:Generated_Source\PSoC4/CapSense_Sensing.c ****                     ptrRamSensor++;
1944:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1945:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1946:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure auto-tuning configuration structure */
1947:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.iDacMod = ptrRamWidget->rowIdacMod[0u];
1948:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.iDacComp = (uint8)maxIdacComp;
1949:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrRamWidget->rowSnsClk;
1950:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.calTarget = (uint16)((maxRaw * CapSense_AUTOTUNE_CAL_UNITS) /
1951:Generated_Source\PSoC4/CapSense_Sensing.c ****                         ((uint32)(0x01uL << CapSense_AUTOTUNE_CALIBRATION_RESOLUTION) - 1u));
1952:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1953:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Find correct sense clock value */
1954:Generated_Source\PSoC4/CapSense_Sensing.c ****                 maxCp = SmartSense_TunePrescalers(&autoTuneConfig);
1955:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1956:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Save maximum sensor Cp and corresponding sensor Id */
1957:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (autoTuneConfig.sensorCap < maxCp)
1958:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1959:Generated_Source\PSoC4/CapSense_Sensing.c ****                     autoTuneConfig.sensorCap = maxCp;
1960:Generated_Source\PSoC4/CapSense_Sensing.c ****                     maxCpSnsId = maxCpRowSnsId;
1961:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1962:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1963:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Increase sensor clock divider to valid value */
1964:Generated_Source\PSoC4/CapSense_Sensing.c ****                 while(ptrRamWidget->rowSnsClk < minSnsClkDiv)
1965:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1966:Generated_Source\PSoC4/CapSense_Sensing.c ****                     ptrRamWidget->rowSnsClk <<= 1u;
1967:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1968:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 36


1969:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1970:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1971:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check tuning results */
1972:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_AUTOTUNE_CP_MAX < maxCp)
1973:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1974:Generated_Source\PSoC4/CapSense_Sensing.c ****             autoTuneStatus = CYRET_BAD_DATA;
1975:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1976:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1977:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1978:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #2:
1979:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - repeating calibration with new sense clock frequency
1980:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting resolution
1981:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1982:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1983:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calibrate CSD widget to the default calibration target with newly defined sense frequenc
1984:Generated_Source\PSoC4/CapSense_Sensing.c ****         (void)CapSense_CSDCalibrateWidget(widgetId, CapSense_AUTOTUNE_CAL_LEVEL);
1985:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1986:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_idacGainTable[ptrRamWidget->idacGainIndex].gainValue;
1987:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacMod = ptrRamWidget->idacMod[0u];
1988:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.ptrSenseClk = &ptrRamWidget->snsClk;
1989:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1990:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1991:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((CapSense_WD_TOUCHPAD_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)) ||
1992:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_WD_MATRIX_BUTTON_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)))
1993:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1994:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (maxCpSnsId >= ptrFlashWidget->numCols)
1995:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1996:Generated_Source\PSoC4/CapSense_Sensing.c ****                     autoTuneConfig.iDacMod = ptrRamWidget->rowIdacMod[0u];
1997:Generated_Source\PSoC4/CapSense_Sensing.c ****                     autoTuneConfig.ptrSenseClk = &ptrRamWidget->rowSnsClk;
1998:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1999:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2000:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2001:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2002:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Find resolution */
2003:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrRamWidget->resolution = SmartSense_TuneSensitivity(&autoTuneConfig);
2004:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2005:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
2006:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #3:
2007:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - selecting a widget clock source if AUTO
2008:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - repeating calibration with found clock frequency, resolution and clock source
2009:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - updating sensitivity
2010:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
2011:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2012:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune widget sensitivity */
2013:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSetWidgetSenseClkSrc(widgetId, ptrRamWidget);
2014:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2015:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calibrate CSD widget to the default calibration target with newly defined resolution */
2016:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneStatus |= CapSense_CSDCalibrateWidget(widgetId, CapSense_AUTOTUNE_CAL_LEVEL);
2017:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2018:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN)
2019:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DsUpdateWidgetCrc(widgetId);
2020:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN) */
2021:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2022:Generated_Source\PSoC4/CapSense_Sensing.c ****         return autoTuneStatus;
2023:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2024:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2025:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 37


2026:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2027:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsAutoTune
2028:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2029:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2030:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2031:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the parameters auto-tuning for the optimal CapSense
2032:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  operation.
2033:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2034:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2035:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the following:
2036:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calibrates Modulator and Compensation IDACs.
2037:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Tunes the Sense Clock optimal value to get a Sense Clock period greater than
2038:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    2*5*R*Cp.
2039:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calculates the resolution for the optimal finger capacitance.
2040:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2041:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
2042:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the operation:
2043:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Zero     - All the widgets are auto-tuned successfully.
2044:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Non-zero - Auto-tuning failed for any widget.
2045:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2046:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2047:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_SsAutoTune(void)
2048:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2049:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
2050:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
2051:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2052:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune each CSD widget */
2053:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
2054:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2055:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
2056:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
2057:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2058:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneStatus |= CapSense_SsAutoTuneWidget(wdgtIndex);
2059:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2060:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2061:Generated_Source\PSoC4/CapSense_Sensing.c ****         return autoTuneStatus;
2062:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2063:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)) */
2064:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2065:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2066:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_DISABLE == CapSense_CSDV2)
2067:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ( ((CapSense_ENABLE == CapSense_CSX_EN) \
2068:Generated_Source\PSoC4/CapSense_Sensing.c ****         || (CapSense_ENABLE == CapSense_ISX_EN)) ||\
2069:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG))
2070:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2071:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsTrimIdacsSinking
2072:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2073:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2074:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2075:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
2076:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  IDAC1 and IDAC2 for Sinking CSD Mode
2077:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2078:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2079:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
2080:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
2081:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2082:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 38


2083:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSinking(void)
2084:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2085:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 trimValue;
2086:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2087:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Mod iDAC Sinking Mode */
2088:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_TRIM2_PTR) & ~CapSense_IDAC_TRIM2_MOD_SNK_MASK;
2089:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM2_PTR) &
2090:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                       CapSense_SFLASH_TRIM_IDAC_MOD_MASK) ;
2091:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2092:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
2093:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Comp iDAC Sinking Mode */
2094:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue &= ~CapSense_IDAC_TRIM2_COMP_SNK_MASK;
2095:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM2_PTR) &
2096:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                           CapSense_SFLASH_TRIM_IDAC_COMP_MASK);
2097:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
2098:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2099:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Update IDAC trim bits for gain control in current sink mode */
2100:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_TRIM2_PTR, trimValue);
2101:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2102:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
2103:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)) */
2104:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2105:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2106:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ( ((CapSense_ENABLE == CapSense_CSX_EN) \
2107:Generated_Source\PSoC4/CapSense_Sensing.c ****         || (CapSense_ENABLE == CapSense_ISX_EN)) || \
2108:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG))
2109:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2110:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsTrimIdacsSourcing
2111:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2112:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2113:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2114:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
2115:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  IDAC1 and IDAC2 for Sourcing CSD Mode
2116:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2117:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2118:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
2119:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
2120:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2121:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2122:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSourcing(void)
2123:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2124:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 trimValue;
2125:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2126:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Mod iDAC Sourcing Mode */
2127:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_TRIM1_PTR) & ~CapSense_IDAC_TRIM1_MOD_SRC_MASK;
2128:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM1_PTR) &
2129:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                       CapSense_SFLASH_TRIM_IDAC_MOD_MASK);
2130:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2131:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
2132:Generated_Source\PSoC4/CapSense_Sensing.c ****                  /* Comp iDAC Sourcing Mode */
2133:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue &= ~CapSense_IDAC_TRIM1_COMP_SRC_MASK;
2134:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM1_PTR) &
2135:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                           CapSense_SFLASH_TRIM_IDAC_COMP_MASK);
2136:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
2137:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2138:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Update IDAC trim bits for gain control in current source mode */
2139:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_TRIM1_PTR, trimValue);
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 39


2140:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2141:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
2142:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)) */
2143:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2144:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2145:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2146:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsTrimIdacs
2147:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2148:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2149:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2150:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function loads trim values from SFLASH rows to calibrate
2151:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  IDAC1 and IDAC2 for CSD Mode
2152:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2153:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2154:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  If CSX mode is enabled the function loads trim values for both sink and source
2155:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  mode. If CSX mode is disabled the function loads trim values for sink or
2156:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  source mode based on sink/source mode configuration.
2157:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
2158:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2159:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2160:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsTrimIdacs(void)
2161:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2162:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN)
2163:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSinking();
2164:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSourcing();
2165:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)
2166:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSinking();
2167:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)
2168:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSourcing();
2169:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2170:Generated_Source\PSoC4/CapSense_Sensing.c ****             #error "Not supported Mode, Component cannot work in this mode"
2171:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN) */
2172:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2173:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_DISABLE == CapSense_CSDV2) */
2174:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2175:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2176:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
2177:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2178:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsChangeImoFreq
2179:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2180:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2181:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2182:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the IMO frequency.
2183:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2184:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2185:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The IMO frequency can have three offsets: 0%, -5% and +5%. The frequency
2186:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  trims are contained in the CapSense_immunity[value] array for each
2187:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  frequency channel.
2188:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2189:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param value The frequency channel ID.
2190:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2191:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2192:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsChangeImoFreq(uint32 value)
2193:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2194:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR, CapSense_immunity[value]);
2195:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2196:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 40


2197:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2198:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsChangeClkFreq
2199:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2200:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2201:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2202:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
2203:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the corresponding divider.
2204:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2205:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2206:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
2207:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the corresponding divider.
2208:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2209:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param chId
2210:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The frequency channel ID.
2211:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2212:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2213:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsChangeClkFreq(uint32 chId)
2214:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2215:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 snsClkDivider;
2216:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 freqOffset1 = 0u;
2217:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 freqOffset2 = 0u;
2218:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2219:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSD_WIDGETS)
2220:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSDV2)
2221:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 conversionsNum;
2222:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2223:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2224:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2225:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2226:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2227:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 snsClkSrc;
2228:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
2229:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2230:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2231:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((0u != CapSense_TOTAL_CSD_WIDGETS) || \
2232:Generated_Source\PSoC4/CapSense_Sensing.c ****              ((CapSense_DISABLE == CapSense_CSX_COMMON_TX_CLK_EN) && (0u != CapSense_TOTAL_CSX_WIDG
2233:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt = &CapSense_dsFlash.wdgtArray[CapSense_wid
2234:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdg
2235:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2236:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2237:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch(CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[CapSense_widgetIndex]))
2238:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2239:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSD_WIDGETS)
2240:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
2241:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get sensor clock divider value */
2242:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN)
2243:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_dsRam.snsCsdClk;
2244:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2245:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2246:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get SnsClck divider for rows or columns */
2247:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_se
2248:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2249:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = ptrWdgt->rowSnsClk;
2250:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2251:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
2252:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2253:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = ptrWdgt->snsClk;
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 41


2254:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2255:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2256:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider = ptrWdgt->snsClk;
2257:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2258:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2259:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2260:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset1 = CapSense_CSD_MFS_DIVIDER_OFFSET_F1;
2261:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset2 = CapSense_CSD_MFS_DIVIDER_OFFSET_F2;
2262:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2263:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2264:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2265:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2266:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Get sense clk source */
2267:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2268:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get SnsClc Source for rows or columns */
2269:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_se
2270:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2271:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->rowSnsClkSource;
2272:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2273:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
2274:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2275:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2276:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2277:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2278:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2279:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2280:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2281:Generated_Source\PSoC4/CapSense_Sensing.c ****                     switch (snsClkSrc)
2282:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2283:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS8:
2284:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS12:
2285:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Multiply by 2 for PRS8/PRS12 mode */
2286:Generated_Source\PSoC4/CapSense_Sensing.c ****                         freqOffset1 <<= 1u;
2287:Generated_Source\PSoC4/CapSense_Sensing.c ****                         freqOffset2 <<= 1u;
2288:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2289:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2290:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2291:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2292:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2293:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
2294:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2295:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Change the divider based on the chId */
2296:Generated_Source\PSoC4/CapSense_Sensing.c ****                 switch (chId)
2297:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2298:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_1:
2299:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2300:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset1;
2301:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2302:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2303:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_2:
2304:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2305:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset2;
2306:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2307:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2308:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2309:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2310:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 42


2311:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2312:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2313:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2314:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSDV2)
2315:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Set Number Of Conversions based on scanning resolution */
2316:Generated_Source\PSoC4/CapSense_Sensing.c ****                     conversionsNum = CapSense_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)pt
2317:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CY_SET_REG32(CapSense_SEQ_NORM_CNT_PTR, (conversionsNum & CapSense_SEQ_NORM_CNT
2318:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2319:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2320:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2321:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2322:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2323:Generated_Source\PSoC4/CapSense_Sensing.c ****                     switch (snsClkSrc)
2324:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2325:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS8:
2326:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS12:
2327:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Divide by 2 for PRS8/PRS12 mode */
2328:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider >>= 1;
2329:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (snsClkDivider == 0u)
2330:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2331:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = 1u;
2332:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2333:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2334:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2335:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2336:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2337:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2338:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
2339:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2340:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure the new divider */
2341:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetSnsClockDivider(snsClkDivider);
2342:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2343:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2344:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* #if (0u != CapSense_TOTAL_CSD_WIDGETS) */
2345:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2346:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSX_WIDGETS)
2347:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
2348:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN)
2349:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_dsRam.snsCsxClk;
2350:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else /* (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
2351:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = ptrWdgt->snsClk;
2352:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
2353:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset1 = CapSense_CSX_MFS_DIVIDER_OFFSET_F1;
2354:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset2 = CapSense_CSX_MFS_DIVIDER_OFFSET_F2;
2355:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2356:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Change the divider based on the chId */
2357:Generated_Source\PSoC4/CapSense_Sensing.c ****                 switch (chId)
2358:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2359:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_1:
2360:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2361:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset1;
2362:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2363:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2364:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_2:
2365:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2366:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset2;
2367:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 43


2368:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2369:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2370:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2371:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2372:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2373:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2374:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2375:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure the new divider */
2376:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetSnsClockDivider(snsClkDivider);
2377:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2378:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2379:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* #if (0u != CapSense_TOTAL_CSX_WIDGETS) */
2380:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2381:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2382:Generated_Source\PSoC4/CapSense_Sensing.c ****             CYASSERT(0);
2383:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2384:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2385:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2386:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
2387:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2388:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2389:Generated_Source\PSoC4/CapSense_Sensing.c **** #if((CapSense_ENABLE == CapSense_CSD_EN) || \
2390:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSX_EN) && \
2391:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2)))
2392:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2393:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsInitializeSourceSenseClk
2394:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2395:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2396:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2397:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets a source for Sense Clk for all CSD widgets.
2398:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2399:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2400:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk.
2401:Generated_Source\PSoC4/CapSense_Sensing.c **** *  for all CSD widgets.
2402:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2403:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2404:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsInitializeSourceSenseClk(void)
2405:Generated_Source\PSoC4/CapSense_Sensing.c **** {
2406:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
2407:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2408:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
2410:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2411:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
2412:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2413:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
2414:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2415:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
2416:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
2417:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
2418:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2419:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2420:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
2421:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
2422:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetTxClkSrc(wdgtIndex, ptrWdgt);
2423:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2424:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (((CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN)) &
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 44


2425:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2426:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2427:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2428:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN)
2429:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DsUpdateWidgetCrc(wdgtIndex);
2430:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN) */
2431:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2432:Generated_Source\PSoC4/CapSense_Sensing.c **** }
2433:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || \
2434:Generated_Source\PSoC4/CapSense_Sensing.c ****            (((CapSense_ENABLE == CapSense_CSX_EN) || \
2435:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_ISX_EN)) && \
2436:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2))) */
2437:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2438:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2439:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
2440:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2441:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsSetWidgetSenseClkSrc
2442:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2443:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2444:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2445:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Sets a source for the sense clock for a widget.
2446:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2447:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param wdgtIndex
2448:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2449:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param ptrWdgt
2450:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2451:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2452:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2453:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk for a
2454:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  widget.
2455:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2456:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2457:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptr
2458:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2459:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
2460:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrScale;
2461:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2462:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2463:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if(CapSense_ENABLE == CapSense_CSDV2)
2464:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 conversionsNum;
2465:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2466:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 snsClkDivider;
2467:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2468:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2469:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2470:Generated_Source\PSoC4/CapSense_Sensing.c ****             snsClkDivider = CapSense_SsCSDGetColSnsClkDivider(wdgtIndex);
2471:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2472:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if(CapSense_ENABLE == CapSense_CSDV2)
2473:Generated_Source\PSoC4/CapSense_Sensing.c ****                 conversionsNum = CapSense_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)ptrWdg
2474:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                              CapSen
2475:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2476:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
2477:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2478:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /*
2479:Generated_Source\PSoC4/CapSense_Sensing.c ****                     * Multiplying of the snsClkDivider by 2 is needed to pass the
2480:Generated_Source\PSoC4/CapSense_Sensing.c ****                     * average PRS frequency through the argument.
2481:Generated_Source\PSoC4/CapSense_Sensing.c ****                     */
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 45


2482:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->res
2483:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2484:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2485:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2486:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /*
2487:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * Multiplying of the snsClkDivider by 2 is needed to pass the
2488:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * average PRS frequency through the argument.
2489:Generated_Source\PSoC4/CapSense_Sensing.c ****                 */
2490:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->resolut
2491:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = 0u;
2492:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2493:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2494:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrSize = (uint8)CapSense_DEFAULT_MODULATION_MODE;
2495:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale = 0u;
2496:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)wdgtIndex; /* This parameter is unused in such configurations */
2497:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2498:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2499:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR_SCALE_OFFS
2500:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2501:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2502:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArray[wdgtIn
2503:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArray[w
2504:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2505:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2506:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_SsCSDGetRowSnsClkDivider(wdgtIndex);
2507:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2508:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if(CapSense_ENABLE == CapSense_CSDV2)
2509:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2510:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
2511:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2512:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /*
2513:Generated_Source\PSoC4/CapSense_Sensing.c ****                             * Multiplying of the snsClkDivider by 2 is needed to pass the
2514:Generated_Source\PSoC4/CapSense_Sensing.c ****                             * average PRS frequency through the argument.
2515:Generated_Source\PSoC4/CapSense_Sensing.c ****                             */
2516:Generated_Source\PSoC4/CapSense_Sensing.c ****                             lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrW
2517:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2518:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2519:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2520:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /*
2521:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * Multiplying of the snsClkDivider by 2 is needed to pass the
2522:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * average PRS frequency through the argument.
2523:Generated_Source\PSoC4/CapSense_Sensing.c ****                         */
2524:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt-
2525:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrScale = 0u;
2526:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2527:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else
2528:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrSize = (uint8)CapSense_DEFAULT_MODULATION_MODE;
2529:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrScale = 0u;
2530:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2531:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->rowSnsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR
2532:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2533:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2534:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2535:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2536:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2537:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2538:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 46


2539:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2540:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsSetWidgetTxClkSrc
2541:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2542:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2543:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2544:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Sets a source for the Tx clock for a widget.
2545:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2546:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param wdgtIndex
2547:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2548:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param ptrWdgt
2549:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2550:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2551:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2552:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Updates snsClkSource with a source for Tx Clk for a widget.
2553:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2554:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2555:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptrWdg
2556:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2557:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
2558:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrScale;
2559:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2560:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) && \
2561:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES))
2562:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 conversionsNum;
2563:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 snsClkDivider;
2564:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2565:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2566:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)
2567:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
2568:Generated_Source\PSoC4/CapSense_Sensing.c ****                 conversionsNum = (uint32)ptrWdgt->resolution;
2569:Generated_Source\PSoC4/CapSense_Sensing.c ****                 snsClkDivider = CapSense_SsCSXGetTxClkDivider(wdgtIndex);
2570:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2571:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2572:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2573:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = (uint8)CapSense_CLK_SOURCE_DIRECT;
2574:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = 0u;
2575:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Unused function argument */
2576:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)wdgtIndex;
2577:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
2578:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2579:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrSize = (uint8)CapSense_CSX_TX_CLK_SOURCE;
2580:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale = 0u;
2581:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Unused function argument */
2582:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)wdgtIndex;
2583:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) */
2584:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2585:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR_SCALE_OFFS
2586:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2587:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2)) */
2588:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2589:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2590:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(((CapSense_ENABLE == CapSense_CSX_EN) && \
2591:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2592:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
2593:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)) ||\
2594:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSD_EN) && \
2595:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 47


2596:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)))
2597:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2598:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsCalcLfsrSize
2599:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2600:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2601:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2602:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is an internal function that finds a SSC polynomial size in the Auto mode.
2603:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2604:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2605:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The SSC polynomial size in the auto mode is found based on the following
2606:Generated_Source\PSoC4/CapSense_Sensing.c **** *  requirements:
2607:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - an LFSR value should be selected so that the max clock dither is limited with +/-10%.
2608:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - at least one full spread spectrum polynomial should pass during the scan time.
2609:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - the value of the number of conversions should be an integer multiple of the
2610:Generated_Source\PSoC4/CapSense_Sensing.c **** *    repeat period of the programmed LFSR_SIZE.
2611:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2612:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
2613:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2614:Generated_Source\PSoC4/CapSense_Sensing.c **** *  resolution The widget resolution.
2615:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2616:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return lfsrSize The LFSRSIZE value for the SENSE_PERIOD register.
2617:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2618:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2619:Generated_Source\PSoC4/CapSense_Sensing.c **** static uint8 CapSense_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum)
2620:Generated_Source\PSoC4/CapSense_Sensing.c **** {
  28              		.loc 1 2620 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 70B5     		push	{r4, r5, r6, lr}
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 4, -16
  36              		.cfi_offset 5, -12
  37              		.cfi_offset 6, -8
  38              		.cfi_offset 14, -4
  39 0002 0400     		movs	r4, r0
  40 0004 0D00     		movs	r5, r1
  41              	.LVL1:
2621:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 lfsrSize = 0u;
2622:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2623:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Find LFSR value */
2624:Generated_Source\PSoC4/CapSense_Sensing.c ****     if((CapSense_SNSCLK_SSC4_THRESHOLD <= snsClkDivider) &&
  42              		.loc 1 2624 0
  43 0006 9F28     		cmp	r0, #159
  44 0008 08D9     		bls	.L2
  45              		.loc 1 2624 0 is_stmt 0 discriminator 1
  46 000a 1B4B     		ldr	r3, .L12
  47 000c 9942     		cmp	r1, r3
  48 000e 05D9     		bls	.L2
2625:Generated_Source\PSoC4/CapSense_Sensing.c ****        (CapSense_SNSCLK_SSC4_PERIOD <= conversionsNum) &&
2626:Generated_Source\PSoC4/CapSense_Sensing.c ****        (0uL == (conversionsNum % CapSense_SNSCLK_SSC4_PERIOD)))
  49              		.loc 1 2626 0 is_stmt 1
  50 0010 1A49     		ldr	r1, .L12+4
  51              	.LVL2:
  52 0012 2800     		movs	r0, r5
  53              	.LVL3:
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 48


  54 0014 FFF7FEFF 		bl	__aeabi_uidivmod
  55              	.LVL4:
2625:Generated_Source\PSoC4/CapSense_Sensing.c ****        (CapSense_SNSCLK_SSC4_PERIOD <= conversionsNum) &&
  56              		.loc 1 2625 0
  57 0018 0029     		cmp	r1, #0
  58 001a 21D0     		beq	.L6
  59              	.L2:
2627:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2628:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC4;
2629:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2630:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC3_THRESHOLD <= snsClkDivider) &&
  60              		.loc 1 2630 0
  61 001c 9F2C     		cmp	r4, #159
  62 001e 09D9     		bls	.L4
  63              		.loc 1 2630 0 is_stmt 0 discriminator 1
  64 0020 FF23     		movs	r3, #255
  65 0022 5B00     		lsls	r3, r3, #1
  66 0024 9D42     		cmp	r5, r3
  67 0026 05D9     		bls	.L4
2631:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC3_PERIOD <= conversionsNum) &&
2632:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC3_PERIOD)))
  68              		.loc 1 2632 0 is_stmt 1
  69 0028 1549     		ldr	r1, .L12+8
  70 002a 2800     		movs	r0, r5
  71 002c FFF7FEFF 		bl	__aeabi_uidivmod
  72              	.LVL5:
2631:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC3_PERIOD <= conversionsNum) &&
  73              		.loc 1 2631 0
  74 0030 0029     		cmp	r1, #0
  75 0032 17D0     		beq	.L7
  76              	.L4:
2633:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2634:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC3;
2635:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2636:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC2_THRESHOLD <= snsClkDivider) &&
  77              		.loc 1 2636 0
  78 0034 9F2C     		cmp	r4, #159
  79 0036 07D9     		bls	.L5
  80              		.loc 1 2636 0 is_stmt 0 discriminator 1
  81 0038 7E2D     		cmp	r5, #126
  82 003a 05D9     		bls	.L5
2637:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC2_PERIOD <= conversionsNum) &&
2638:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC2_PERIOD)))
  83              		.loc 1 2638 0 is_stmt 1
  84 003c 7F21     		movs	r1, #127
  85 003e 2800     		movs	r0, r5
  86 0040 FFF7FEFF 		bl	__aeabi_uidivmod
  87              	.LVL6:
2637:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC2_PERIOD <= conversionsNum) &&
  88              		.loc 1 2637 0
  89 0044 0029     		cmp	r1, #0
  90 0046 0FD0     		beq	.L8
  91              	.L5:
2639:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2640:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC2;
2641:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2642:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC1_THRESHOLD <= snsClkDivider) &&
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 49


  92              		.loc 1 2642 0
  93 0048 9F2C     		cmp	r4, #159
  94 004a 0FD9     		bls	.L9
  95              		.loc 1 2642 0 is_stmt 0 discriminator 1
  96 004c 3E2D     		cmp	r5, #62
  97 004e 0FD9     		bls	.L10
2643:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC1_PERIOD <= conversionsNum) &&
2644:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC1_PERIOD)))
  98              		.loc 1 2644 0 is_stmt 1
  99 0050 3F21     		movs	r1, #63
 100 0052 2800     		movs	r0, r5
 101 0054 FFF7FEFF 		bl	__aeabi_uidivmod
 102              	.LVL7:
2643:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC1_PERIOD <= conversionsNum) &&
 103              		.loc 1 2643 0
 104 0058 0029     		cmp	r1, #0
 105 005a 0BD0     		beq	.L11
2645:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2646:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC1;
2647:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2648:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
2649:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2650:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = (uint8)CapSense_CLK_SOURCE_DIRECT;
 106              		.loc 1 2650 0
 107 005c 0020     		movs	r0, #0
 108 005e 0AE0     		b	.L3
 109              	.L6:
2628:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 110              		.loc 1 2628 0
 111 0060 0420     		movs	r0, #4
 112 0062 08E0     		b	.L3
 113              	.L7:
2634:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 114              		.loc 1 2634 0
 115 0064 0320     		movs	r0, #3
 116 0066 06E0     		b	.L3
 117              	.L8:
2640:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 118              		.loc 1 2640 0
 119 0068 0220     		movs	r0, #2
 120 006a 04E0     		b	.L3
 121              	.L9:
 122              		.loc 1 2650 0
 123 006c 0020     		movs	r0, #0
 124 006e 02E0     		b	.L3
 125              	.L10:
 126 0070 0020     		movs	r0, #0
 127 0072 00E0     		b	.L3
 128              	.L11:
2646:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 129              		.loc 1 2646 0
 130 0074 0120     		movs	r0, #1
 131              	.L3:
 132              	.LVL8:
2651:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2652:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2653:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (lfsrSize);
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 50


2654:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 133              		.loc 1 2654 0
 134              		@ sp needed
 135              	.LVL9:
 136              	.LVL10:
 137 0076 70BD     		pop	{r4, r5, r6, pc}
 138              	.L13:
 139              		.align	2
 140              	.L12:
 141 0078 FE030000 		.word	1022
 142 007c FF030000 		.word	1023
 143 0080 FF010000 		.word	511
 144              		.cfi_endproc
 145              	.LFE21:
 146              		.size	CapSense_SsCalcLfsrSize, .-CapSense_SsCalcLfsrSize
 147              		.global	__aeabi_uidiv
 148              		.section	.text.CapSense_SsCalcLfsrScale,"ax",%progbits
 149              		.align	2
 150              		.code	16
 151              		.thumb_func
 152              		.type	CapSense_SsCalcLfsrScale, %function
 153              	CapSense_SsCalcLfsrScale:
 154              	.LFB22:
2655:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2656:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2657:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2658:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsCalcLfsrScale
2659:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2660:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2661:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2662:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is an internal function that calculates the LFSR scale value.
2663:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2664:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2665:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The LFSR scale value is used to increase the clock dither if the desired dither
2666:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is wider than can be achieved with the current Sense Clock Divider and current LFSR
2667:Generated_Source\PSoC4/CapSense_Sensing.c **** *  period.
2668:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2669:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This returns the LFSR scale value needed to keep the clock dither in
2670:Generated_Source\PSoC4/CapSense_Sensing.c **** *  range +/-10%.
2671:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2672:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
2673:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2674:Generated_Source\PSoC4/CapSense_Sensing.c **** *  lfsrSize The period of the LFSR sequence.
2675:Generated_Source\PSoC4/CapSense_Sensing.c **** *          For devices with CapSense_CSDV2_REF9P6UA_EN = TRUE, the
2676:Generated_Source\PSoC4/CapSense_Sensing.c **** *          mode parameters can take the following values:
2677:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2678:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC1   The length of LFSR sequence is 63 cycles.
2679:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC2   The length of LFSR sequence is 127 cycles.
2680:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC3   The length of LFSR sequence is 255 cycles.
2681:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC4   The length of LFSR sequence is 511 cycles.
2682:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2683:Generated_Source\PSoC4/CapSense_Sensing.c **** *          For devices with CapSense_CSDV2_REF9P6UA_EN = TRUE, the
2684:Generated_Source\PSoC4/CapSense_Sensing.c **** *          mode parameters can take the following values:
2685:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2686:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC1   The length of LFSR sequence is 3 cycles.
2687:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC2   The length of LFSR sequence is 7 cycles.
2688:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC3   The length of LFSR sequence is 15 cycles.
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 51


2689:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC4   The length of LFSR sequence is 31 cycles.
2690:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2691:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
2692:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the LFSR scale value needed to keep the clock dither in range +/-10%.
2693:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2694:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2695:Generated_Source\PSoC4/CapSense_Sensing.c **** static uint8 CapSense_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize)
2696:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 155              		.loc 1 2696 0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159              	.LVL11:
 160 0000 10B5     		push	{r4, lr}
 161              		.cfi_def_cfa_offset 8
 162              		.cfi_offset 4, -8
 163              		.cfi_offset 14, -4
2697:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrScale;
2698:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrRange;
2699:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrDither;
2700:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2701:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Initialize the lfsrSize variable with the LFSR Range for given Lfsr Size. */
2702:Generated_Source\PSoC4/CapSense_Sensing.c ****     switch(lfsrSize)
 164              		.loc 1 2702 0
 165 0002 4B1E     		subs	r3, r1, #1
 166 0004 DBB2     		uxtb	r3, r3
 167 0006 032B     		cmp	r3, #3
 168 0008 01D8     		bhi	.L20
2703:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2704:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC1:
2705:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2706:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC1_RANGE;
 169              		.loc 1 2706 0
 170 000a 1023     		movs	r3, #16
 171 000c 00E0     		b	.L15
 172              	.L20:
2707:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2708:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2709:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC2:
2710:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2711:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC2_RANGE;
2712:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2713:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2714:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC3:
2715:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2716:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC3_RANGE;
2717:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2718:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2719:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC4:
2720:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2721:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC4_RANGE;
2722:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2723:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2724:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2725:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2726:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = 0u;
 173              		.loc 1 2726 0
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 52


 174 000e 0023     		movs	r3, #0
 175              	.L15:
 176              	.LVL12:
2727:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2728:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2729:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2730:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2731:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Calculate the LFSR Scale value that is required to keep the Clock dither
2732:Generated_Source\PSoC4/CapSense_Sensing.c ****      * as close as possible to the +/-10% limit of the used frequency.
2733:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
2734:Generated_Source\PSoC4/CapSense_Sensing.c ****     if((lfsrSize != CapSense_CLK_SOURCE_DIRECT) && (0u != lfsrRange))
 177              		.loc 1 2734 0
 178 0010 0029     		cmp	r1, #0
 179 0012 11D0     		beq	.L21
 180              		.loc 1 2734 0 is_stmt 0 discriminator 1
 181 0014 002B     		cmp	r3, #0
 182 0016 11D0     		beq	.L22
2735:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2736:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calculate the LFSR Dither in percents. */
2737:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrDither  = ((lfsrRange * 100uL) / snsClkDivider);
 183              		.loc 1 2737 0 is_stmt 1
 184 0018 6422     		movs	r2, #100
 185 001a 5343     		muls	r3, r2
 186              	.LVL13:
 187 001c 0100     		movs	r1, r0
 188              	.LVL14:
 189 001e 1800     		movs	r0, r3
 190              	.LVL15:
 191 0020 FFF7FEFF 		bl	__aeabi_uidiv
 192              	.LVL16:
2738:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrScale = 0uL;
 193              		.loc 1 2738 0
 194 0024 0023     		movs	r3, #0
2739:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2740:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(lfsrDither < CapSense_LFSR_DITHER_PERCENTAGE)
 195              		.loc 1 2740 0
 196 0026 01E0     		b	.L18
 197              	.LVL17:
 198              	.L19:
2741:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2742:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale++;
 199              		.loc 1 2742 0
 200 0028 0133     		adds	r3, r3, #1
 201              	.LVL18:
2743:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrDither <<=1uL;
 202              		.loc 1 2743 0
 203 002a 4000     		lsls	r0, r0, #1
 204              	.LVL19:
 205              	.L18:
2740:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 206              		.loc 1 2740 0
 207 002c 0928     		cmp	r0, #9
 208 002e FBD9     		bls	.L19
2744:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2745:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2746:Generated_Source\PSoC4/CapSense_Sensing.c ****         if(lfsrDither > CapSense_LFSR_DITHER_PERCENTAGE)
 209              		.loc 1 2746 0
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 53


 210 0030 0A28     		cmp	r0, #10
 211 0032 04D9     		bls	.L17
2747:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2748:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale--;
 212              		.loc 1 2748 0
 213 0034 013B     		subs	r3, r3, #1
 214              	.LVL20:
 215 0036 02E0     		b	.L17
 216              	.LVL21:
 217              	.L21:
2749:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2750:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2751:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
2752:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2753:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrScale = 0uL;
 218              		.loc 1 2753 0
 219 0038 0023     		movs	r3, #0
 220              	.LVL22:
 221 003a 00E0     		b	.L17
 222              	.LVL23:
 223              	.L22:
 224 003c 0023     		movs	r3, #0
 225              	.LVL24:
 226              	.L17:
2754:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2755:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2756:Generated_Source\PSoC4/CapSense_Sensing.c ****     return ((uint8)lfsrScale);
 227              		.loc 1 2756 0
 228 003e D8B2     		uxtb	r0, r3
2757:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 229              		.loc 1 2757 0
 230              		@ sp needed
 231 0040 10BD     		pop	{r4, pc}
 232              		.cfi_endproc
 233              	.LFE22:
 234              		.size	CapSense_SsCalcLfsrScale, .-CapSense_SsCalcLfsrScale
 235 0042 C046     		.section	.text.CapSense_IsBusy,"ax",%progbits
 236              		.align	2
 237              		.global	CapSense_IsBusy
 238              		.code	16
 239              		.thumb_func
 240              		.type	CapSense_IsBusy, %function
 241              	CapSense_IsBusy:
 242              	.LFB1:
 237:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (CapSense_dsRam.status & CapSense_SW_STS_BUSY);
 243              		.loc 1 237 0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 0
 246              		@ frame_needed = 0, uses_anonymous_args = 0
 247              		@ link register save eliminated.
 238:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 248              		.loc 1 238 0
 249 0000 024B     		ldr	r3, .L24
 250 0002 DB68     		ldr	r3, [r3, #12]
 251 0004 8020     		movs	r0, #128
 252 0006 1840     		ands	r0, r3
 239:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 54


 253              		.loc 1 239 0
 254              		@ sp needed
 255 0008 7047     		bx	lr
 256              	.L25:
 257 000a C046     		.align	2
 258              	.L24:
 259 000c 00000000 		.word	CapSense_dsRam
 260              		.cfi_endproc
 261              	.LFE1:
 262              		.size	CapSense_IsBusy, .-CapSense_IsBusy
 263              		.section	.text.CapSense_SetupWidget,"ax",%progbits
 264              		.align	2
 265              		.global	CapSense_SetupWidget
 266              		.code	16
 267              		.thumb_func
 268              		.type	CapSense_SetupWidget, %function
 269              	CapSense_SetupWidget:
 270              	.LFB2:
 283:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 271              		.loc 1 283 0
 272              		.cfi_startproc
 273              		@ args = 0, pretend = 0, frame = 0
 274              		@ frame_needed = 0, uses_anonymous_args = 0
 275              	.LVL25:
 276 0000 10B5     		push	{r4, lr}
 277              		.cfi_def_cfa_offset 8
 278              		.cfi_offset 4, -8
 279              		.cfi_offset 14, -4
 286:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 280              		.loc 1 286 0
 281 0002 0E4B     		ldr	r3, .L32
 282 0004 DB68     		ldr	r3, [r3, #12]
 283 0006 DB03     		lsls	r3, r3, #15
 284 0008 0DD4     		bmi	.L29
 296:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 285              		.loc 1 296 0
 286 000a 0028     		cmp	r0, #0
 287 000c 0DD1     		bne	.L30
 297:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 288              		.loc 1 297 0 discriminator 1
 289 000e 4309     		lsrs	r3, r0, #5
 290 0010 0433     		adds	r3, r3, #4
 291 0012 9B00     		lsls	r3, r3, #2
 292 0014 094A     		ldr	r2, .L32
 293 0016 9B58     		ldr	r3, [r3, r2]
 294 0018 1F22     		movs	r2, #31
 295 001a 0240     		ands	r2, r0
 296 001c D340     		lsrs	r3, r3, r2
 296:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 297              		.loc 1 296 0 discriminator 1
 298 001e DB07     		lsls	r3, r3, #31
 299 0020 05D4     		bmi	.L31
 304:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 300              		.loc 1 304 0
 301 0022 0124     		movs	r4, #1
 302 0024 04E0     		b	.L27
 303              	.L29:
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 55


 289:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 304              		.loc 1 289 0
 305 0026 1124     		movs	r4, #17
 306 0028 02E0     		b	.L27
 307              	.L30:
 304:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 308              		.loc 1 304 0
 309 002a 0124     		movs	r4, #1
 310 002c 00E0     		b	.L27
 311              	.L31:
 300:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 312              		.loc 1 300 0
 313 002e 0024     		movs	r4, #0
 314              	.L27:
 315              	.LVL26:
 311:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 316              		.loc 1 311 0
 317 0030 002C     		cmp	r4, #0
 318 0032 01D1     		bne	.L28
 324:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 319              		.loc 1 324 0
 320 0034 FFF7FEFF 		bl	CapSense_CSDSetupWidget
 321              	.LVL27:
 322              	.L28:
 340:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 323              		.loc 1 340 0
 324 0038 2000     		movs	r0, r4
 325              		@ sp needed
 326              	.LVL28:
 327 003a 10BD     		pop	{r4, pc}
 328              	.L33:
 329              		.align	2
 330              	.L32:
 331 003c 00000000 		.word	CapSense_dsRam
 332              		.cfi_endproc
 333              	.LFE2:
 334              		.size	CapSense_SetupWidget, .-CapSense_SetupWidget
 335              		.section	.text.CapSense_Scan,"ax",%progbits
 336              		.align	2
 337              		.global	CapSense_Scan
 338              		.code	16
 339              		.thumb_func
 340              		.type	CapSense_Scan, %function
 341              	CapSense_Scan:
 342              	.LFB3:
 366:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 343              		.loc 1 366 0
 344              		.cfi_startproc
 345              		@ args = 0, pretend = 0, frame = 0
 346              		@ frame_needed = 0, uses_anonymous_args = 0
 347 0000 10B5     		push	{r4, lr}
 348              		.cfi_def_cfa_offset 8
 349              		.cfi_offset 4, -8
 350              		.cfi_offset 14, -4
 351              	.LVL29:
 369:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 352              		.loc 1 369 0
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 56


 353 0002 084B     		ldr	r3, .L40
 354 0004 DB68     		ldr	r3, [r3, #12]
 355 0006 DB03     		lsls	r3, r3, #15
 356 0008 07D4     		bmi	.L37
 376:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 357              		.loc 1 376 0
 358 000a 074B     		ldr	r3, .L40+4
 359 000c 1B78     		ldrb	r3, [r3]
 360 000e 012B     		cmp	r3, #1
 361 0010 05D1     		bne	.L39
 385:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 362              		.loc 1 385 0
 363 0012 FFF7FEFF 		bl	CapSense_CSDScan
 364              	.LVL30:
 367:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 365              		.loc 1 367 0
 366 0016 0020     		movs	r0, #0
 386:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 367              		.loc 1 386 0
 368 0018 03E0     		b	.L35
 369              	.L37:
 372:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 370              		.loc 1 372 0
 371 001a 1120     		movs	r0, #17
 372 001c 01E0     		b	.L35
 373              	.L39:
 394:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 374              		.loc 1 394 0
 375 001e 0120     		movs	r0, #1
 376 0020 4042     		rsbs	r0, r0, #0
 377              	.L35:
 378              	.LVL31:
 399:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 379              		.loc 1 399 0
 380              		@ sp needed
 381 0022 10BD     		pop	{r4, pc}
 382              	.L41:
 383              		.align	2
 384              	.L40:
 385 0024 00000000 		.word	CapSense_dsRam
 386 0028 00000000 		.word	.LANCHOR0
 387              		.cfi_endproc
 388              	.LFE3:
 389              		.size	CapSense_Scan, .-CapSense_Scan
 390              		.section	.text.CapSense_ScanAllWidgets,"ax",%progbits
 391              		.align	2
 392              		.global	CapSense_ScanAllWidgets
 393              		.code	16
 394              		.thumb_func
 395              		.type	CapSense_ScanAllWidgets, %function
 396              	CapSense_ScanAllWidgets:
 397              	.LFB4:
 428:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 398              		.loc 1 428 0
 399              		.cfi_startproc
 400              		@ args = 0, pretend = 0, frame = 0
 401              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 57


 402 0000 10B5     		push	{r4, lr}
 403              		.cfi_def_cfa_offset 8
 404              		.cfi_offset 4, -8
 405              		.cfi_offset 14, -4
 406              	.LVL32:
 433:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 407              		.loc 1 433 0
 408 0002 0C4B     		ldr	r3, .L48
 409 0004 DB68     		ldr	r3, [r3, #12]
 410 0006 1B06     		lsls	r3, r3, #24
 411 0008 12D4     		bmi	.L47
 412 000a 0024     		movs	r4, #0
 413 000c 0120     		movs	r0, #1
 414 000e 4042     		rsbs	r0, r0, #0
 415 0010 0BE0     		b	.L44
 416              	.LVL33:
 417              	.L46:
 449:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 418              		.loc 1 449 0
 419 0012 2000     		movs	r0, r4
 420              	.LVL34:
 421 0014 FFF7FEFF 		bl	CapSense_SetupWidget
 422              	.LVL35:
 451:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 423              		.loc 1 451 0
 424 0018 0028     		cmp	r0, #0
 425 001a 05D1     		bne	.L45
 468:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 426              		.loc 1 468 0
 427 001c 0022     		movs	r2, #0
 428 001e 064B     		ldr	r3, .L48+4
 429 0020 5A70     		strb	r2, [r3, #1]
 473:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 430              		.loc 1 473 0
 431 0022 FFF7FEFF 		bl	CapSense_Scan
 432              	.LVL36:
 475:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 433              		.loc 1 475 0
 434 0026 04E0     		b	.L43
 435              	.L45:
 446:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 436              		.loc 1 446 0
 437 0028 0134     		adds	r4, r4, #1
 438              	.LVL37:
 439              	.L44:
 444:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex < CapSense_TOTAL_WIDGETS;
 440              		.loc 1 444 0 discriminator 1
 441 002a 002C     		cmp	r4, #0
 442 002c F1D0     		beq	.L46
 443 002e 00E0     		b	.L43
 444              	.LVL38:
 445              	.L47:
 436:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 446              		.loc 1 436 0
 447 0030 1120     		movs	r0, #17
 448              	.LVL39:
 449              	.L43:
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 58


 481:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 450              		.loc 1 481 0
 451              		@ sp needed
 452 0032 10BD     		pop	{r4, pc}
 453              	.L49:
 454              		.align	2
 455              	.L48:
 456 0034 00000000 		.word	CapSense_dsRam
 457 0038 00000000 		.word	.LANCHOR0
 458              		.cfi_endproc
 459              	.LFE4:
 460              		.size	CapSense_ScanAllWidgets, .-CapSense_ScanAllWidgets
 461              		.section	.text.CapSense_SetupWidgetExt,"ax",%progbits
 462              		.align	2
 463              		.global	CapSense_SetupWidgetExt
 464              		.code	16
 465              		.thumb_func
 466              		.type	CapSense_SetupWidgetExt, %function
 467              	CapSense_SetupWidgetExt:
 468              	.LFB5:
 536:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 469              		.loc 1 536 0
 470              		.cfi_startproc
 471              		@ args = 0, pretend = 0, frame = 0
 472              		@ frame_needed = 0, uses_anonymous_args = 0
 473              	.LVL40:
 474 0000 10B5     		push	{r4, lr}
 475              		.cfi_def_cfa_offset 8
 476              		.cfi_offset 4, -8
 477              		.cfi_offset 14, -4
 539:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 478              		.loc 1 539 0
 479 0002 134B     		ldr	r3, .L57
 480 0004 DB68     		ldr	r3, [r3, #12]
 481 0006 DB03     		lsls	r3, r3, #15
 482 0008 14D4     		bmi	.L53
 549:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)) &&
 483              		.loc 1 549 0
 484 000a 0028     		cmp	r0, #0
 485 000c 14D1     		bne	.L54
 550:Generated_Source\PSoC4/CapSense_Sensing.c ****         (sensorId < CapSense_GET_SENSOR_COUNT(widgetId)))
 486              		.loc 1 550 0 discriminator 1
 487 000e 4309     		lsrs	r3, r0, #5
 488 0010 0433     		adds	r3, r3, #4
 489 0012 9B00     		lsls	r3, r3, #2
 490 0014 0E4A     		ldr	r2, .L57
 491 0016 9B58     		ldr	r3, [r3, r2]
 492 0018 1F22     		movs	r2, #31
 493 001a 0240     		ands	r2, r0
 494 001c D340     		lsrs	r3, r3, r2
 549:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)) &&
 495              		.loc 1 549 0 discriminator 1
 496 001e DB07     		lsls	r3, r3, #31
 497 0020 0CD5     		bpl	.L55
 551:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 498              		.loc 1 551 0
 499 0022 3423     		movs	r3, #52
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 59


 500 0024 4343     		muls	r3, r0
 501 0026 0B4A     		ldr	r2, .L57+4
 502 0028 D318     		adds	r3, r2, r3
 503 002a 1B8B     		ldrh	r3, [r3, #24]
 550:Generated_Source\PSoC4/CapSense_Sensing.c ****         (sensorId < CapSense_GET_SENSOR_COUNT(widgetId)))
 504              		.loc 1 550 0
 505 002c 8B42     		cmp	r3, r1
 506 002e 07D8     		bhi	.L56
 558:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 507              		.loc 1 558 0
 508 0030 0124     		movs	r4, #1
 509 0032 06E0     		b	.L51
 510              	.L53:
 542:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 511              		.loc 1 542 0
 512 0034 1124     		movs	r4, #17
 513 0036 04E0     		b	.L51
 514              	.L54:
 558:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 515              		.loc 1 558 0
 516 0038 0124     		movs	r4, #1
 517 003a 02E0     		b	.L51
 518              	.L55:
 519 003c 0124     		movs	r4, #1
 520 003e 00E0     		b	.L51
 521              	.L56:
 554:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 522              		.loc 1 554 0
 523 0040 0024     		movs	r4, #0
 524              	.L51:
 525              	.LVL41:
 565:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 526              		.loc 1 565 0
 527 0042 002C     		cmp	r4, #0
 528 0044 01D1     		bne	.L52
 578:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 529              		.loc 1 578 0
 530 0046 FFF7FEFF 		bl	CapSense_CSDSetupWidgetExt
 531              	.LVL42:
 532              	.L52:
 594:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 533              		.loc 1 594 0
 534 004a 2000     		movs	r0, r4
 535              		@ sp needed
 536              	.LVL43:
 537 004c 10BD     		pop	{r4, pc}
 538              	.L58:
 539 004e C046     		.align	2
 540              	.L57:
 541 0050 00000000 		.word	CapSense_dsRam
 542 0054 00000000 		.word	CapSense_dsFlash
 543              		.cfi_endproc
 544              	.LFE5:
 545              		.size	CapSense_SetupWidgetExt, .-CapSense_SetupWidgetExt
 546              		.section	.text.CapSense_ScanExt,"ax",%progbits
 547              		.align	2
 548              		.global	CapSense_ScanExt
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 60


 549              		.code	16
 550              		.thumb_func
 551              		.type	CapSense_ScanExt, %function
 552              	CapSense_ScanExt:
 553              	.LFB6:
 642:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 554              		.loc 1 642 0
 555              		.cfi_startproc
 556              		@ args = 0, pretend = 0, frame = 0
 557              		@ frame_needed = 0, uses_anonymous_args = 0
 558 0000 10B5     		push	{r4, lr}
 559              		.cfi_def_cfa_offset 8
 560              		.cfi_offset 4, -8
 561              		.cfi_offset 14, -4
 562              	.LVL44:
 645:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 563              		.loc 1 645 0
 564 0002 084B     		ldr	r3, .L65
 565 0004 DB68     		ldr	r3, [r3, #12]
 566 0006 DB03     		lsls	r3, r3, #15
 567 0008 07D4     		bmi	.L62
 652:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 568              		.loc 1 652 0
 569 000a 074B     		ldr	r3, .L65+4
 570 000c 1B78     		ldrb	r3, [r3]
 571 000e 012B     		cmp	r3, #1
 572 0010 05D1     		bne	.L64
 661:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 573              		.loc 1 661 0
 574 0012 FFF7FEFF 		bl	CapSense_CSDScanExt
 575              	.LVL45:
 643:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 576              		.loc 1 643 0
 577 0016 0020     		movs	r0, #0
 662:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 578              		.loc 1 662 0
 579 0018 03E0     		b	.L60
 580              	.L62:
 648:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 581              		.loc 1 648 0
 582 001a 1120     		movs	r0, #17
 583 001c 01E0     		b	.L60
 584              	.L64:
 670:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 585              		.loc 1 670 0
 586 001e 0120     		movs	r0, #1
 587 0020 4042     		rsbs	r0, r0, #0
 588              	.L60:
 589              	.LVL46:
 675:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 590              		.loc 1 675 0
 591              		@ sp needed
 592 0022 10BD     		pop	{r4, pc}
 593              	.L66:
 594              		.align	2
 595              	.L65:
 596 0024 00000000 		.word	CapSense_dsRam
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 61


 597 0028 00000000 		.word	.LANCHOR0
 598              		.cfi_endproc
 599              	.LFE6:
 600              		.size	CapSense_ScanExt, .-CapSense_ScanExt
 601              		.section	.text.CapSense_SetPinState,"ax",%progbits
 602              		.align	2
 603              		.global	CapSense_SetPinState
 604              		.code	16
 605              		.thumb_func
 606              		.type	CapSense_SetPinState, %function
 607              	CapSense_SetPinState:
 608              	.LFB8:
 841:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdNum;
 609              		.loc 1 841 0
 610              		.cfi_startproc
 611              		@ args = 0, pretend = 0, frame = 0
 612              		@ frame_needed = 0, uses_anonymous_args = 0
 613              	.LVL47:
 614 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 615              		.cfi_def_cfa_offset 24
 616              		.cfi_offset 3, -24
 617              		.cfi_offset 4, -20
 618              		.cfi_offset 5, -16
 619              		.cfi_offset 6, -12
 620              		.cfi_offset 7, -8
 621              		.cfi_offset 14, -4
 622 0002 1600     		movs	r6, r2
 866:Generated_Source\PSoC4/CapSense_Sensing.c ****         eltdNum = 1u;
 623              		.loc 1 866 0
 624 0004 3423     		movs	r3, #52
 625 0006 5843     		muls	r0, r3
 626              	.LVL48:
 627 0008 234B     		ldr	r3, .L74
 628 000a C458     		ldr	r4, [r0, r3]
 629 000c CB00     		lsls	r3, r1, #3
 630 000e 591A     		subs	r1, r3, r1
 631              	.LVL49:
 632 0010 8B00     		lsls	r3, r1, #2
 633 0012 E418     		adds	r4, r4, r3
 634              	.LVL50:
 871:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 635              		.loc 1 871 0
 636 0014 0025     		movs	r5, #0
 637 0016 3CE0     		b	.L68
 638              	.LVL51:
 639              	.L73:
 874:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_HSIOM_SEL_MASK << 
 640              		.loc 1 874 0
 641 0018 FFF7FEFF 		bl	CyEnterCriticalSection
 642              	.LVL52:
 875:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << ioPtr->s
 643              		.loc 1 875 0
 644 001c 2168     		ldr	r1, [r4]
 645 001e 0B68     		ldr	r3, [r1]
 646 0020 277E     		ldrb	r7, [r4, #24]
 647 0022 0F22     		movs	r2, #15
 648 0024 BA40     		lsls	r2, r2, r7
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 62


 649 0026 9343     		bics	r3, r2
 650 0028 0B60     		str	r3, [r1]
 876:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 651              		.loc 1 876 0
 652 002a 6168     		ldr	r1, [r4, #4]
 653 002c 0B68     		ldr	r3, [r1]
 654 002e A77E     		ldrb	r7, [r4, #26]
 655 0030 0722     		movs	r2, #7
 656 0032 BA40     		lsls	r2, r2, r7
 657 0034 9343     		bics	r3, r2
 658 0036 0B60     		str	r3, [r1]
 877:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 659              		.loc 1 877 0
 660 0038 FFF7FEFF 		bl	CyExitCriticalSection
 661              	.LVL53:
 879:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 662              		.loc 1 879 0
 663 003c 012E     		cmp	r6, #1
 664 003e 17D0     		beq	.L70
 665 0040 002E     		cmp	r6, #0
 666 0042 02D0     		beq	.L71
 667 0044 032E     		cmp	r6, #3
 668 0046 1FD0     		beq	.L72
 669 0048 21E0     		b	.L69
 670              	.L71:
 883:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_SNS_GROUND_CONNECT <<
 671              		.loc 1 883 0
 672 004a FFF7FEFF 		bl	CyEnterCriticalSection
 673              	.LVL54:
 884:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 674              		.loc 1 884 0
 675 004e 6268     		ldr	r2, [r4, #4]
 676 0050 1168     		ldr	r1, [r2]
 677 0052 A77E     		ldrb	r7, [r4, #26]
 678 0054 0623     		movs	r3, #6
 679 0056 BB40     		lsls	r3, r3, r7
 680 0058 0B43     		orrs	r3, r1
 681 005a 1360     		str	r3, [r2]
 885:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 682              		.loc 1 885 0
 683 005c A168     		ldr	r1, [r4, #8]
 684 005e 0B68     		ldr	r3, [r1]
 685 0060 677E     		ldrb	r7, [r4, #25]
 686 0062 0122     		movs	r2, #1
 687 0064 BA40     		lsls	r2, r2, r7
 688 0066 9343     		bics	r3, r2
 689 0068 0B60     		str	r3, [r1]
 886:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 690              		.loc 1 886 0
 691 006a FFF7FEFF 		bl	CyExitCriticalSection
 692              	.LVL55:
 887:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 693              		.loc 1 887 0
 694 006e 0EE0     		b	.L69
 695              	.L70:
 890:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 696              		.loc 1 890 0
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 63


 697 0070 FFF7FEFF 		bl	CyEnterCriticalSection
 698              	.LVL56:
 891:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 699              		.loc 1 891 0
 700 0074 A168     		ldr	r1, [r4, #8]
 701 0076 0B68     		ldr	r3, [r1]
 702 0078 677E     		ldrb	r7, [r4, #25]
 703 007a 0122     		movs	r2, #1
 704 007c BA40     		lsls	r2, r2, r7
 705 007e 9343     		bics	r3, r2
 706 0080 0B60     		str	r3, [r1]
 892:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 707              		.loc 1 892 0
 708 0082 FFF7FEFF 		bl	CyExitCriticalSection
 709              	.LVL57:
 893:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 710              		.loc 1 893 0
 711 0086 02E0     		b	.L69
 712              	.L72:
 898:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 713              		.loc 1 898 0
 714 0088 2000     		movs	r0, r4
 715 008a FFF7FEFF 		bl	CapSense_CSDConnectSns
 716              	.LVL58:
 717              	.L69:
 933:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 718              		.loc 1 933 0 discriminator 2
 719 008e 1C34     		adds	r4, r4, #28
 720              	.LVL59:
 871:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 721              		.loc 1 871 0 discriminator 2
 722 0090 0135     		adds	r5, r5, #1
 723              	.LVL60:
 724              	.L68:
 871:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 725              		.loc 1 871 0 is_stmt 0 discriminator 1
 726 0092 002D     		cmp	r5, #0
 727 0094 C0D0     		beq	.L73
 935:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 728              		.loc 1 935 0 is_stmt 1
 729              		@ sp needed
 730              	.LVL61:
 731              	.LVL62:
 732              	.LVL63:
 733 0096 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 734              	.L75:
 735              		.align	2
 736              	.L74:
 737 0098 00000000 		.word	CapSense_dsFlash
 738              		.cfi_endproc
 739              	.LFE8:
 740              		.size	CapSense_SetPinState, .-CapSense_SetPinState
 741              		.section	.text.CapSense_SsSetAllIOsState,"ax",%progbits
 742              		.align	2
 743              		.global	CapSense_SsSetAllIOsState
 744              		.code	16
 745              		.thumb_func
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 64


 746              		.type	CapSense_SsSetAllIOsState, %function
 747              	CapSense_SsSetAllIOsState:
 748              	.LFB11:
1167:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8  interruptState;
 749              		.loc 1 1167 0
 750              		.cfi_startproc
 751              		@ args = 0, pretend = 0, frame = 0
 752              		@ frame_needed = 0, uses_anonymous_args = 0
 753              	.LVL64:
 754 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 755              		.cfi_def_cfa_offset 24
 756              		.cfi_offset 3, -24
 757              		.cfi_offset 4, -20
 758              		.cfi_offset 5, -16
 759              		.cfi_offset 6, -12
 760              		.cfi_offset 7, -8
 761              		.cfi_offset 14, -4
 762 0002 4F46     		mov	r7, r9
 763 0004 4646     		mov	r6, r8
 764 0006 C0B4     		push	{r6, r7}
 765              		.cfi_def_cfa_offset 32
 766              		.cfi_offset 8, -32
 767              		.cfi_offset 9, -28
1180:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 768              		.loc 1 1180 0
 769 0008 0128     		cmp	r0, #1
 770 000a 0BD0     		beq	.L82
 771 000c 0228     		cmp	r0, #2
 772 000e 04D0     		beq	.L79
1184:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 773              		.loc 1 1184 0
 774 0010 0023     		movs	r3, #0
 775 0012 9946     		mov	r9, r3
1183:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
 776              		.loc 1 1183 0
 777 0014 0633     		adds	r3, r3, #6
 778 0016 9846     		mov	r8, r3
 779 0018 07E0     		b	.L78
 780              	.L79:
 781              	.LVL65:
1192:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 782              		.loc 1 1192 0
 783 001a 0523     		movs	r3, #5
 784 001c 9946     		mov	r9, r3
1191:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_CSD_SHIELD;
 785              		.loc 1 1191 0
 786 001e 0023     		movs	r3, #0
 787 0020 9846     		mov	r8, r3
1193:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 788              		.loc 1 1193 0
 789 0022 02E0     		b	.L78
 790              	.LVL66:
 791              	.L82:
1188:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 792              		.loc 1 1188 0
 793 0024 0023     		movs	r3, #0
 794 0026 9946     		mov	r9, r3
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 65


1187:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
 795              		.loc 1 1187 0
 796 0028 9846     		mov	r8, r3
 797              	.L78:
 798              	.LVL67:
1201:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (loopIndex = 0u; loopIndex < CapSense_TOTAL_ELECTRODES; loopIndex++)
 799              		.loc 1 1201 0
 800 002a 144C     		ldr	r4, .L83
1202:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 801              		.loc 1 1202 0
 802 002c 0025     		movs	r5, #0
 803 002e 1FE0     		b	.L80
 804              	.LVL68:
 805              	.L81:
1204:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 806              		.loc 1 1204 0 discriminator 3
 807 0030 FFF7FEFF 		bl	CyEnterCriticalSection
 808              	.LVL69:
1206:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpHsiomRegValue &= ~(snsIoPtr->hsiomMask);
 809              		.loc 1 1206 0 discriminator 3
 810 0034 2268     		ldr	r2, [r4]
 811 0036 1368     		ldr	r3, [r2]
 812              	.LVL70:
1207:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
 813              		.loc 1 1207 0 discriminator 3
 814 0038 2169     		ldr	r1, [r4, #16]
 815 003a 8B43     		bics	r3, r1
 816              	.LVL71:
1208:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 817              		.loc 1 1208 0 discriminator 3
 818 003c 1360     		str	r3, [r2]
1210:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue &= ~(CapSense_GPIO_PC_MASK << snsIoPtr->shift);
 819              		.loc 1 1210 0 discriminator 3
 820 003e 6668     		ldr	r6, [r4, #4]
 821 0040 3268     		ldr	r2, [r6]
 822              	.LVL72:
1211:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue |=  (newPinPcVal << snsIoPtr->shift);
 823              		.loc 1 1211 0 discriminator 3
 824 0042 A77E     		ldrb	r7, [r4, #26]
 825 0044 0721     		movs	r1, #7
 826 0046 B940     		lsls	r1, r1, r7
 827 0048 8A43     		bics	r2, r1
 828              	.LVL73:
1212:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->pcPtr, tmpPcDrRegValue);
 829              		.loc 1 1212 0 discriminator 3
 830 004a 4146     		mov	r1, r8
 831 004c B940     		lsls	r1, r1, r7
 832 004e 0A43     		orrs	r2, r1
 833              	.LVL74:
1213:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 834              		.loc 1 1213 0 discriminator 3
 835 0050 3260     		str	r2, [r6]
1215:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
 836              		.loc 1 1215 0 discriminator 3
 837 0052 227E     		ldrb	r2, [r4, #24]
 838              	.LVL75:
 839 0054 4946     		mov	r1, r9
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 66


 840 0056 9140     		lsls	r1, r1, r2
 841 0058 0B43     		orrs	r3, r1
 842              	.LVL76:
1216:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 843              		.loc 1 1216 0 discriminator 3
 844 005a 2268     		ldr	r2, [r4]
 845 005c 1360     		str	r3, [r2]
 846              	.LVL77:
1218:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue &= ~(snsIoPtr->mask);
 847              		.loc 1 1218 0 discriminator 3
 848 005e A268     		ldr	r2, [r4, #8]
 849 0060 1368     		ldr	r3, [r2]
 850              	.LVL78:
1219:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->drPtr, tmpPcDrRegValue);
 851              		.loc 1 1219 0 discriminator 3
 852 0062 6169     		ldr	r1, [r4, #20]
 853 0064 8B43     		bics	r3, r1
 854              	.LVL79:
1220:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 855              		.loc 1 1220 0 discriminator 3
 856 0066 1360     		str	r3, [r2]
1222:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 857              		.loc 1 1222 0 discriminator 3
 858 0068 FFF7FEFF 		bl	CyExitCriticalSection
 859              	.LVL80:
1225:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 860              		.loc 1 1225 0 discriminator 3
 861 006c 1C34     		adds	r4, r4, #28
 862              	.LVL81:
1202:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 863              		.loc 1 1202 0 discriminator 3
 864 006e 0135     		adds	r5, r5, #1
 865              	.LVL82:
 866              	.L80:
1202:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 867              		.loc 1 1202 0 is_stmt 0 discriminator 1
 868 0070 0D2D     		cmp	r5, #13
 869 0072 DDD9     		bls	.L81
1238:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 870              		.loc 1 1238 0 is_stmt 1
 871              		@ sp needed
 872              	.LVL83:
 873              	.LVL84:
 874              	.LVL85:
 875              	.LVL86:
 876 0074 0CBC     		pop	{r2, r3}
 877 0076 9046     		mov	r8, r2
 878 0078 9946     		mov	r9, r3
 879 007a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 880              	.L84:
 881              		.align	2
 882              	.L83:
 883 007c 00000000 		.word	CapSense_ioList
 884              		.cfi_endproc
 885              	.LFE11:
 886              		.size	CapSense_SsSetAllIOsState, .-CapSense_SsSetAllIOsState
 887              		.section	.text.CapSense_SsPostAllWidgetsScan,"ax",%progbits
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 67


 888              		.align	2
 889              		.global	CapSense_SsPostAllWidgetsScan
 890              		.code	16
 891              		.thumb_func
 892              		.type	CapSense_SsPostAllWidgetsScan, %function
 893              	CapSense_SsPostAllWidgetsScan:
 894              	.LFB12:
1317:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 895              		.loc 1 1317 0
 896              		.cfi_startproc
 897              		@ args = 0, pretend = 0, frame = 0
 898              		@ frame_needed = 0, uses_anonymous_args = 0
 899              		@ link register save eliminated.
1374:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 900              		.loc 1 1374 0
 901              		@ sp needed
 902 0000 7047     		bx	lr
 903              		.cfi_endproc
 904              	.LFE12:
 905              		.size	CapSense_SsPostAllWidgetsScan, .-CapSense_SsPostAllWidgetsScan
 906 0002 C046     		.section	.text.CapSense_SsIsrInitialize,"ax",%progbits
 907              		.align	2
 908              		.global	CapSense_SsIsrInitialize
 909              		.code	16
 910              		.thumb_func
 911              		.type	CapSense_SsIsrInitialize, %function
 912              	CapSense_SsIsrInitialize:
 913              	.LFB13:
1394:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_ISR_StartEx(address);
 914              		.loc 1 1394 0
 915              		.cfi_startproc
 916              		@ args = 0, pretend = 0, frame = 0
 917              		@ frame_needed = 0, uses_anonymous_args = 0
 918              	.LVL87:
 919 0000 10B5     		push	{r4, lr}
 920              		.cfi_def_cfa_offset 8
 921              		.cfi_offset 4, -8
 922              		.cfi_offset 14, -4
1395:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 923              		.loc 1 1395 0
 924 0002 FFF7FEFF 		bl	CapSense_ISR_StartEx
 925              	.LVL88:
1396:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 926              		.loc 1 1396 0
 927              		@ sp needed
 928 0006 10BD     		pop	{r4, pc}
 929              		.cfi_endproc
 930              	.LFE13:
 931              		.size	CapSense_SsIsrInitialize, .-CapSense_SsIsrInitialize
 932              		.section	.text.CapSense_SsSetModClkClockDivider,"ax",%progbits
 933              		.align	2
 934              		.global	CapSense_SsSetModClkClockDivider
 935              		.code	16
 936              		.thumb_func
 937              		.type	CapSense_SsSetModClkClockDivider, %function
 938              	CapSense_SsSetModClkClockDivider:
 939              	.LFB14:
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 68


1417:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
 940              		.loc 1 1417 0
 941              		.cfi_startproc
 942              		@ args = 0, pretend = 0, frame = 0
 943              		@ frame_needed = 0, uses_anonymous_args = 0
 944              		@ link register save eliminated.
 945              	.LVL89:
1420:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_ModClk__DIV_ID <<
 946              		.loc 1 1420 0
 947 0000 074A     		ldr	r2, .L89
 948 0002 084B     		ldr	r3, .L89+4
 949 0004 1A60     		str	r2, [r3]
1430:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 950              		.loc 1 1430 0
 951 0006 0138     		subs	r0, r0, #1
 952              	.LVL90:
 953 0008 0002     		lsls	r0, r0, #8
 954              	.LVL91:
 955 000a 074B     		ldr	r3, .L89+8
 956 000c 1860     		str	r0, [r3]
 957              	.L88:
1433:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 958              		.loc 1 1433 0 discriminator 1
 959 000e 054B     		ldr	r3, .L89+4
 960 0010 1B68     		ldr	r3, [r3]
 961 0012 002B     		cmp	r3, #0
 962 0014 FBDB     		blt	.L88
1439:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(((uint32)CapSense_ModClk__DIV_ID << CapSense_MODCLK_CMD_DIV_SHIFT) |
 963              		.loc 1 1439 0
 964 0016 054A     		ldr	r2, .L89+12
 965 0018 024B     		ldr	r3, .L89+4
 966 001a 1A60     		str	r2, [r3]
1464:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 967              		.loc 1 1464 0
 968              		@ sp needed
 969 001c 7047     		bx	lr
 970              	.L90:
 971 001e C046     		.align	2
 972              	.L89:
 973 0020 40000040 		.word	1073741888
 974 0024 00000140 		.word	1073807360
 975 0028 00030140 		.word	1073808128
 976 002c 40FF0080 		.word	-2147418304
 977              		.cfi_endproc
 978              	.LFE14:
 979              		.size	CapSense_SsSetModClkClockDivider, .-CapSense_SsSetModClkClockDivider
 980              		.section	.text.CapSense_SsSetSnsClockDivider,"ax",%progbits
 981              		.align	2
 982              		.global	CapSense_SsSetSnsClockDivider
 983              		.code	16
 984              		.thumb_func
 985              		.type	CapSense_SsSetSnsClockDivider, %function
 986              	CapSense_SsSetSnsClockDivider:
 987              	.LFB15:
1485:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
 988              		.loc 1 1485 0
 989              		.cfi_startproc
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 69


 990              		@ args = 0, pretend = 0, frame = 0
 991              		@ frame_needed = 0, uses_anonymous_args = 0
 992              		@ link register save eliminated.
 993              	.LVL92:
1494:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue &= (uint32)(~CapSense_SENSE_PERIOD_SENSE_DIV_MASK);
 994              		.loc 1 1494 0
 995 0000 034A     		ldr	r2, .L92
 996 0002 1368     		ldr	r3, [r2]
 997              	.LVL93:
1495:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= snsClk - 1u;
 998              		.loc 1 1495 0
 999 0004 1B0B     		lsrs	r3, r3, #12
 1000              	.LVL94:
 1001 0006 1B03     		lsls	r3, r3, #12
 1002              	.LVL95:
1496:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, newRegValue);
 1003              		.loc 1 1496 0
 1004 0008 0138     		subs	r0, r0, #1
 1005              	.LVL96:
 1006 000a 1843     		orrs	r0, r3
 1007              	.LVL97:
1497:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
 1008              		.loc 1 1497 0
 1009 000c 1060     		str	r0, [r2]
1546:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1010              		.loc 1 1546 0
 1011              		@ sp needed
 1012 000e 7047     		bx	lr
 1013              	.L93:
 1014              		.align	2
 1015              	.L92:
 1016 0010 00020C40 		.word	1074528768
 1017              		.cfi_endproc
 1018              	.LFE15:
 1019              		.size	CapSense_SsSetSnsClockDivider, .-CapSense_SsSetSnsClockDivider
 1020              		.section	.text.CapSense_SsSetClockDividers,"ax",%progbits
 1021              		.align	2
 1022              		.global	CapSense_SsSetClockDividers
 1023              		.code	16
 1024              		.thumb_func
 1025              		.type	CapSense_SsSetClockDividers, %function
 1026              	CapSense_SsSetClockDividers:
 1027              	.LFB16:
1569:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Mod clock */
 1028              		.loc 1 1569 0
 1029              		.cfi_startproc
 1030              		@ args = 0, pretend = 0, frame = 0
 1031              		@ frame_needed = 0, uses_anonymous_args = 0
 1032              	.LVL98:
 1033 0000 10B5     		push	{r4, lr}
 1034              		.cfi_def_cfa_offset 8
 1035              		.cfi_offset 4, -8
 1036              		.cfi_offset 14, -4
 1037 0002 0400     		movs	r4, r0
1571:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1038              		.loc 1 1571 0
 1039 0004 0800     		movs	r0, r1
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 70


 1040              	.LVL99:
 1041 0006 FFF7FEFF 		bl	CapSense_SsSetModClkClockDivider
 1042              	.LVL100:
1574:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 1043              		.loc 1 1574 0
 1044 000a 2000     		movs	r0, r4
 1045 000c FFF7FEFF 		bl	CapSense_SsSetSnsClockDivider
 1046              	.LVL101:
1575:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1047              		.loc 1 1575 0
 1048              		@ sp needed
 1049              	.LVL102:
 1050 0010 10BD     		pop	{r4, pc}
 1051              		.cfi_endproc
 1052              	.LFE16:
 1053              		.size	CapSense_SsSetClockDividers, .-CapSense_SsSetClockDividers
 1054 0012 C046     		.section	.text.CapSense_CalibrateWidget,"ax",%progbits
 1055              		.align	2
 1056              		.global	CapSense_CalibrateWidget
 1057              		.code	16
 1058              		.thumb_func
 1059              		.type	CapSense_CalibrateWidget, %function
 1060              	CapSense_CalibrateWidget:
 1061              	.LFB17:
1621:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 1062              		.loc 1 1621 0
 1063              		.cfi_startproc
 1064              		@ args = 0, pretend = 0, frame = 0
 1065              		@ frame_needed = 0, uses_anonymous_args = 0
 1066              	.LVL103:
 1067 0000 10B5     		push	{r4, lr}
 1068              		.cfi_def_cfa_offset 8
 1069              		.cfi_offset 4, -8
 1070              		.cfi_offset 14, -4
 1071 0002 031E     		subs	r3, r0, #0
 1072              	.LVL104:
1626:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 1073              		.loc 1 1626 0
 1074 0004 01D1     		bne	.L98
1622:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1075              		.loc 1 1622 0
 1076 0006 0020     		movs	r0, #0
 1077              	.LVL105:
 1078 0008 00E0     		b	.L96
 1079              	.LVL106:
 1080              	.L98:
1628:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 1081              		.loc 1 1628 0
 1082 000a 0120     		movs	r0, #1
 1083              	.LVL107:
 1084              	.L96:
1646:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 1085              		.loc 1 1646 0
 1086 000c 0028     		cmp	r0, #0
 1087 000e 03D1     		bne	.L97
1685:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1088              		.loc 1 1685 0
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 71


 1089 0010 5521     		movs	r1, #85
 1090 0012 1800     		movs	r0, r3
 1091              	.LVL108:
 1092 0014 FFF7FEFF 		bl	CapSense_CSDCalibrateWidget
 1093              	.LVL109:
 1094              	.L97:
1701:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1095              		.loc 1 1701 0
 1096              		@ sp needed
 1097 0018 10BD     		pop	{r4, pc}
 1098              		.cfi_endproc
 1099              	.LFE17:
 1100              		.size	CapSense_CalibrateWidget, .-CapSense_CalibrateWidget
 1101 001a C046     		.section	.text.CapSense_CalibrateAllWidgets,"ax",%progbits
 1102              		.align	2
 1103              		.global	CapSense_CalibrateAllWidgets
 1104              		.code	16
 1105              		.thumb_func
 1106              		.type	CapSense_CalibrateAllWidgets, %function
 1107              	CapSense_CalibrateAllWidgets:
 1108              	.LFB18:
1738:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 1109              		.loc 1 1738 0
 1110              		.cfi_startproc
 1111              		@ args = 0, pretend = 0, frame = 0
 1112              		@ frame_needed = 0, uses_anonymous_args = 0
 1113 0000 70B5     		push	{r4, r5, r6, lr}
 1114              		.cfi_def_cfa_offset 16
 1115              		.cfi_offset 4, -16
 1116              		.cfi_offset 5, -12
 1117              		.cfi_offset 6, -8
 1118              		.cfi_offset 14, -4
 1119              	.LVL110:
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1120              		.loc 1 1742 0
 1121 0002 0024     		movs	r4, #0
1739:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
 1122              		.loc 1 1739 0
 1123 0004 0025     		movs	r5, #0
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1124              		.loc 1 1742 0
 1125 0006 04E0     		b	.L100
 1126              	.LVL111:
 1127              	.L101:
1744:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1128              		.loc 1 1744 0 discriminator 3
 1129 0008 2000     		movs	r0, r4
 1130 000a FFF7FEFF 		bl	CapSense_CalibrateWidget
 1131              	.LVL112:
 1132 000e 0543     		orrs	r5, r0
 1133              	.LVL113:
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1134              		.loc 1 1742 0 discriminator 3
 1135 0010 0134     		adds	r4, r4, #1
 1136              	.LVL114:
 1137              	.L100:
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 72


 1138              		.loc 1 1742 0 is_stmt 0 discriminator 1
 1139 0012 002C     		cmp	r4, #0
 1140 0014 F8D0     		beq	.L101
1748:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ANYMODE_AUTOCAL) */
 1141              		.loc 1 1748 0 is_stmt 1
 1142 0016 2800     		movs	r0, r5
 1143              		@ sp needed
 1144              	.LVL115:
 1145              	.LVL116:
 1146 0018 70BD     		pop	{r4, r5, r6, pc}
 1147              		.cfi_endproc
 1148              	.LFE18:
 1149              		.size	CapSense_CalibrateAllWidgets, .-CapSense_CalibrateAllWidgets
 1150 001a C046     		.section	.text.CapSense_SsCSDGetColSnsClkDivider,"ax",%progbits
 1151              		.align	2
 1152              		.global	CapSense_SsCSDGetColSnsClkDivider
 1153              		.code	16
 1154              		.thumb_func
 1155              		.type	CapSense_SsCSDGetColSnsClkDivider, %function
 1156              	CapSense_SsCSDGetColSnsClkDivider:
 1157              	.LFB23:
2758:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2759:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (((CapSense_ENABLE == CapSense_CSX_EN) && \
2760:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2761:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2) && \
2762:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)) ||\
2763:Generated_Source\PSoC4/CapSense_Sensing.c ****           ((CapSense_ENABLE == CapSense_CSD_EN) && \
2764:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2) && \
2765:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))) */
2766:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2767:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2768:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
2769:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2770:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2771:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2772:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsCSDGetColSnsClkDivider
2773:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2774:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2775:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2776:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function gets the Sense Clock Divider value for one-dimension widgets
2777:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and Column Sense Clock divider value for two-dimension widgets.
2778:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2779:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2780:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function gets the Sense Clock Divider value based on the Component
2781:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  configuration. The function is applicable for one-dimension widgets and for
2782:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  two-dimension widgets.
2783:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2784:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
2785:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2786:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2787:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
2788:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the Sense Clock Divider value for one-dimension widgets
2789:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and the Column Sense Clock divider value for two-dimension widgets.
2790:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2791:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2792:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 CapSense_SsCSDGetColSnsClkDivider(uint32 widgetId)
2793:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 73


 1158              		.loc 1 2793 0
 1159              		.cfi_startproc
 1160              		@ args = 0, pretend = 0, frame = 0
 1161              		@ frame_needed = 0, uses_anonymous_args = 0
 1162              		@ link register save eliminated.
 1163              	.LVL117:
2794:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 retVal;
2795:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2796:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Get sense divider based on configuration */
2797:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE != CapSense_CSD_COMMON_SNS_CLK_EN)
2798:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2799:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2800:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 1164              		.loc 1 2800 0
 1165 0000 3423     		movs	r3, #52
 1166 0002 5843     		muls	r0, r3
 1167              	.LVL118:
 1168 0004 024B     		ldr	r3, .L103
 1169 0006 1818     		adds	r0, r3, r0
 1170 0008 4368     		ldr	r3, [r0, #4]
 1171              	.LVL119:
2801:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2802:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2803:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = (uint32)(ptrWdgt->snsClk);
 1172              		.loc 1 2803 0
 1173 000a 9889     		ldrh	r0, [r3, #12]
 1174              	.LVL120:
2804:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2805:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = (uint32)CapSense_dsRam.snsCsdClk;
2806:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2807:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)widgetId; /* This parameter is unused in such configurations */
2808:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2809:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2810:Generated_Source\PSoC4/CapSense_Sensing.c ****         return (retVal);
2811:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1175              		.loc 1 2811 0
 1176              		@ sp needed
 1177 000c 7047     		bx	lr
 1178              	.L104:
 1179 000e C046     		.align	2
 1180              	.L103:
 1181 0010 00000000 		.word	CapSense_dsFlash
 1182              		.cfi_endproc
 1183              	.LFE23:
 1184              		.size	CapSense_SsCSDGetColSnsClkDivider, .-CapSense_SsCSDGetColSnsClkDivider
 1185              		.section	.text.CapSense_SsCSDGetRowSnsClkDivider,"ax",%progbits
 1186              		.align	2
 1187              		.global	CapSense_SsCSDGetRowSnsClkDivider
 1188              		.code	16
 1189              		.thumb_func
 1190              		.type	CapSense_SsCSDGetRowSnsClkDivider, %function
 1191              	CapSense_SsCSDGetRowSnsClkDivider:
 1192              	.LFB24:
2812:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2813:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2814:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2815:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 74


2816:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsCSDGetRowSnsClkDivider
2817:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2818:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2819:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2820:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function gets the Sense Clock Divider value for one-dimension widgets
2821:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  and the Column Sense Clock divider value for two-dimension widgets.
2822:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2823:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2824:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function gets the Sense Clock Divider value based on the Component
2825:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  configuration. The function is applicable for one-dimension widgets and for
2826:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  two-dimension widgets.
2827:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2828:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \param
2829:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  widgetId Specifies the ID of the widget.
2830:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2831:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \return
2832:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Returns the sense clock divider value for one-dimension widgets
2833:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  and column sense clock divider value for two-dimension widgets.
2834:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2835:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2836:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 CapSense_SsCSDGetRowSnsClkDivider(uint32 widgetId)
2837:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1193              		.loc 1 2837 0
 1194              		.cfi_startproc
 1195              		@ args = 0, pretend = 0, frame = 0
 1196              		@ frame_needed = 0, uses_anonymous_args = 0
 1197              		@ link register save eliminated.
 1198              	.LVL121:
2838:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 retVal;
2839:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2840:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Get sense divider based on configuration */
2841:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE != CapSense_CSD_COMMON_SNS_CLK_EN)
2842:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2843:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2844:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 1199              		.loc 1 2844 0
 1200 0000 3423     		movs	r3, #52
 1201 0002 5843     		muls	r0, r3
 1202              	.LVL122:
 1203 0004 024B     		ldr	r3, .L106
 1204 0006 1818     		adds	r0, r3, r0
 1205 0008 4368     		ldr	r3, [r0, #4]
 1206              	.LVL123:
2845:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2846:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2847:Generated_Source\PSoC4/CapSense_Sensing.c ****                 retVal = ptrWdgt->rowSnsClk;
 1207              		.loc 1 2847 0
 1208 000a D889     		ldrh	r0, [r3, #14]
 1209              	.LVL124:
2848:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2849:Generated_Source\PSoC4/CapSense_Sensing.c ****                 retVal = (uint32)CapSense_dsRam.snsCsdClk;
2850:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2851:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)widgetId; /* This parameter is unused in such configurations */
2852:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2853:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2854:Generated_Source\PSoC4/CapSense_Sensing.c ****             return (retVal);
2855:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 75


 1210              		.loc 1 2855 0
 1211              		@ sp needed
 1212 000c 7047     		bx	lr
 1213              	.L107:
 1214 000e C046     		.align	2
 1215              	.L106:
 1216 0010 00000000 		.word	CapSense_dsFlash
 1217              		.cfi_endproc
 1218              	.LFE24:
 1219              		.size	CapSense_SsCSDGetRowSnsClkDivider, .-CapSense_SsCSDGetRowSnsClkDivider
 1220              		.section	.text.CapSense_SsCSDCalcPrsSize,"ax",%progbits
 1221              		.align	2
 1222              		.global	CapSense_SsCSDCalcPrsSize
 1223              		.code	16
 1224              		.thumb_func
 1225              		.type	CapSense_SsCSDCalcPrsSize, %function
 1226              	CapSense_SsCSDCalcPrsSize:
 1227              	.LFB25:
2856:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2857:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2858:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2859:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2860:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2861:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2862:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsCSDCalcPrsSize
2863:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2864:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2865:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2866:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  The function finds PRS polynomial size in the Auto mode.
2867:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2868:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2869:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  The PRS polynomial size in the Auto mode is found based on the following
2870:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  requirements:
2871:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  - at least one full spread spectrum polynomial should pass during scan time.
2872:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2873:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \param
2874:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  snsClkDivider The divider value for the sense clock.
2875:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  resolution The widget resolution.
2876:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2877:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \return prsSize PRS value for SENSE_PERIOD register.
2878:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2879:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2880:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 CapSense_SsCSDCalcPrsSize(uint32 snsClkDivider, uint32 resolution)
2881:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1228              		.loc 1 2881 0
 1229              		.cfi_startproc
 1230              		@ args = 0, pretend = 0, frame = 0
 1231              		@ frame_needed = 0, uses_anonymous_args = 0
 1232              		@ link register save eliminated.
 1233              	.LVL125:
2882:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 prsSize;
2883:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 modClkDivider = 1u;
2884:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2885:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE != CapSense_CSDV2)
2886:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if(CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
2887:Generated_Source\PSoC4/CapSense_Sensing.c ****                     modClkDivider = (uint32)CapSense_dsRam.modCsdClk;
2888:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 76


2889:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2890:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /*
2891:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * This operation is needed for Third-generation HW Block
2892:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * based devices to take into account DIV-2 flip-flop.
2893:Generated_Source\PSoC4/CapSense_Sensing.c ****                 */
2894:Generated_Source\PSoC4/CapSense_Sensing.c ****                 snsClkDivider <<= 1uL;
2895:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
2896:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2897:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((snsClkDivider * CapSense_PRS_LENGTH_12_BITS) <= (modClkDivider * ((0x00000001Lu <<
 1234              		.loc 1 2897 0
 1235 0000 0203     		lsls	r2, r0, #12
 1236 0002 121A     		subs	r2, r2, r0
 1237 0004 0123     		movs	r3, #1
 1238 0006 8B40     		lsls	r3, r3, r1
 1239 0008 013B     		subs	r3, r3, #1
 1240 000a 9A42     		cmp	r2, r3
 1241 000c 05D9     		bls	.L110
2898:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2899:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set PRS12 mode */
2900:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_PRS_12_CONFIG;
2901:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2902:Generated_Source\PSoC4/CapSense_Sensing.c ****             else if ((snsClkDivider * CapSense_PRS_LENGTH_8_BITS) <= (modClkDivider * ((0x00000001L
 1242              		.loc 1 2902 0
 1243 000e 0202     		lsls	r2, r0, #8
 1244 0010 101A     		subs	r0, r2, r0
 1245              	.LVL126:
 1246 0012 8342     		cmp	r3, r0
 1247 0014 03D3     		bcc	.L111
2903:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2904:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set PRS8 mode */
2905:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_PRS_8_CONFIG;
 1248              		.loc 1 2905 0
 1249 0016 0520     		movs	r0, #5
 1250 0018 02E0     		b	.L109
 1251              	.LVL127:
 1252              	.L110:
2900:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 1253              		.loc 1 2900 0
 1254 001a 0620     		movs	r0, #6
 1255              	.LVL128:
 1256 001c 00E0     		b	.L109
 1257              	.L111:
2906:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2907:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
2908:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2909:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set Direct clock mode */
2910:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_CLK_SOURCE_DIRECT;
 1258              		.loc 1 2910 0
 1259 001e 0020     		movs	r0, #0
 1260              	.L109:
 1261              	.LVL129:
2911:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2912:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2913:Generated_Source\PSoC4/CapSense_Sensing.c ****             return (uint8)prsSize;
 1262              		.loc 1 2913 0
 1263 0020 C0B2     		uxtb	r0, r0
 1264              	.LVL130:
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 77


2914:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1265              		.loc 1 2914 0
 1266              		@ sp needed
 1267 0022 7047     		bx	lr
 1268              		.cfi_endproc
 1269              	.LFE25:
 1270              		.size	CapSense_SsCSDCalcPrsSize, .-CapSense_SsCSDCalcPrsSize
 1271              		.section	.text.CapSense_SsSetWidgetSenseClkSrc,"ax",%progbits
 1272              		.align	2
 1273              		.code	16
 1274              		.thumb_func
 1275              		.type	CapSense_SsSetWidgetSenseClkSrc, %function
 1276              	CapSense_SsSetWidgetSenseClkSrc:
 1277              	.LFB20:
2458:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
 1278              		.loc 1 2458 0
 1279              		.cfi_startproc
 1280              		@ args = 0, pretend = 0, frame = 8
 1281              		@ frame_needed = 0, uses_anonymous_args = 0
 1282              	.LVL131:
 1283 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1284              		.cfi_def_cfa_offset 20
 1285              		.cfi_offset 4, -20
 1286              		.cfi_offset 5, -16
 1287              		.cfi_offset 6, -12
 1288              		.cfi_offset 7, -8
 1289              		.cfi_offset 14, -4
 1290 0002 83B0     		sub	sp, sp, #12
 1291              		.cfi_def_cfa_offset 32
 1292 0004 0400     		movs	r4, r0
 1293 0006 0F00     		movs	r7, r1
2470:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1294              		.loc 1 2470 0
 1295 0008 FFF7FEFF 		bl	CapSense_SsCSDGetColSnsClkDivider
 1296              	.LVL132:
 1297 000c 0600     		movs	r6, r0
 1298              	.LVL133:
2473:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                              CapSen
 1299              		.loc 1 2473 0
 1300 000e 3988     		ldrh	r1, [r7]
 1301 0010 0022     		movs	r2, #0
 1302 0012 FFF7FEFF 		bl	CapSense_SsCSDGetNumberOfConversions
 1303              	.LVL134:
 1304 0016 0100     		movs	r1, r0
 1305 0018 0190     		str	r0, [sp, #4]
 1306              	.LVL135:
2475:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
 1307              		.loc 1 2475 0
 1308 001a 3000     		movs	r0, r6
 1309              	.LVL136:
 1310 001c FFF7FEFF 		bl	CapSense_SsCalcLfsrSize
 1311              	.LVL137:
 1312 0020 051E     		subs	r5, r0, #0
 1313              	.LVL138:
2476:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 1314              		.loc 1 2476 0
 1315 0022 04D1     		bne	.L113
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 78


2482:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 1316              		.loc 1 2482 0
 1317 0024 7000     		lsls	r0, r6, #1
 1318              	.LVL139:
 1319 0026 3988     		ldrh	r1, [r7]
 1320 0028 FFF7FEFF 		bl	CapSense_SsCSDCalcPrsSize
 1321              	.LVL140:
 1322 002c 0500     		movs	r5, r0
 1323              	.LVL141:
 1324              	.L113:
2484:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
 1325              		.loc 1 2484 0
 1326 002e 2900     		movs	r1, r5
 1327 0030 3000     		movs	r0, r6
 1328 0032 FFF7FEFF 		bl	CapSense_SsCalcLfsrScale
 1329              	.LVL142:
2499:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1330              		.loc 1 2499 0
 1331 0036 0001     		lsls	r0, r0, #4
 1332              	.LVL143:
 1333 0038 C0B2     		uxtb	r0, r0
 1334 003a 2843     		orrs	r0, r5
 1335 003c 3874     		strb	r0, [r7, #16]
2502:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArray[w
 1336              		.loc 1 2502 0
 1337 003e 3423     		movs	r3, #52
 1338 0040 6343     		muls	r3, r4
 1339 0042 0F4A     		ldr	r2, .L116
 1340 0044 D318     		adds	r3, r2, r3
 1341 0046 9B7E     		ldrb	r3, [r3, #26]
 1342 0048 043B     		subs	r3, r3, #4
 1343 004a DBB2     		uxtb	r3, r3
 1344 004c 012B     		cmp	r3, #1
 1345 004e 15D8     		bhi	.L112
2506:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1346              		.loc 1 2506 0
 1347 0050 2000     		movs	r0, r4
 1348 0052 FFF7FEFF 		bl	CapSense_SsCSDGetRowSnsClkDivider
 1349              	.LVL144:
 1350 0056 0600     		movs	r6, r0
 1351              	.LVL145:
2509:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
 1352              		.loc 1 2509 0
 1353 0058 0199     		ldr	r1, [sp, #4]
 1354 005a FFF7FEFF 		bl	CapSense_SsCalcLfsrSize
 1355              	.LVL146:
 1356 005e 041E     		subs	r4, r0, #0
 1357              	.LVL147:
2510:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
 1358              		.loc 1 2510 0
 1359 0060 04D1     		bne	.L115
2516:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
 1360              		.loc 1 2516 0
 1361 0062 7000     		lsls	r0, r6, #1
 1362              	.LVL148:
 1363 0064 3988     		ldrh	r1, [r7]
 1364 0066 FFF7FEFF 		bl	CapSense_SsCSDCalcPrsSize
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 79


 1365              	.LVL149:
 1366 006a 0400     		movs	r4, r0
 1367              	.LVL150:
 1368              	.L115:
2518:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
 1369              		.loc 1 2518 0
 1370 006c 2100     		movs	r1, r4
 1371 006e 3000     		movs	r0, r6
 1372 0070 FFF7FEFF 		bl	CapSense_SsCalcLfsrScale
 1373              	.LVL151:
2531:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 1374              		.loc 1 2531 0
 1375 0074 0001     		lsls	r0, r0, #4
 1376              	.LVL152:
 1377 0076 C0B2     		uxtb	r0, r0
 1378 0078 2043     		orrs	r0, r4
 1379 007a 7874     		strb	r0, [r7, #17]
 1380              	.LVL153:
 1381              	.L112:
2534:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 1382              		.loc 1 2534 0
 1383 007c 03B0     		add	sp, sp, #12
 1384              		@ sp needed
 1385              	.LVL154:
 1386              	.LVL155:
 1387 007e F0BD     		pop	{r4, r5, r6, r7, pc}
 1388              	.L117:
 1389              		.align	2
 1390              	.L116:
 1391 0080 00000000 		.word	CapSense_dsFlash
 1392              		.cfi_endproc
 1393              	.LFE20:
 1394              		.size	CapSense_SsSetWidgetSenseClkSrc, .-CapSense_SsSetWidgetSenseClkSrc
 1395              		.section	.text.CapSense_SsInitializeSourceSenseClk,"ax",%progbits
 1396              		.align	2
 1397              		.global	CapSense_SsInitializeSourceSenseClk
 1398              		.code	16
 1399              		.thumb_func
 1400              		.type	CapSense_SsInitializeSourceSenseClk, %function
 1401              	CapSense_SsInitializeSourceSenseClk:
 1402              	.LFB19:
2405:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
 1403              		.loc 1 2405 0
 1404              		.cfi_startproc
 1405              		@ args = 0, pretend = 0, frame = 0
 1406              		@ frame_needed = 0, uses_anonymous_args = 0
 1407 0000 10B5     		push	{r4, lr}
 1408              		.cfi_def_cfa_offset 8
 1409              		.cfi_offset 4, -8
 1410              		.cfi_offset 14, -4
 1411              	.LVL156:
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1412              		.loc 1 2409 0
 1413 0002 0024     		movs	r4, #0
 1414 0004 08E0     		b	.L119
 1415              	.LVL157:
 1416              	.L120:
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 80


2411:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1417              		.loc 1 2411 0
 1418 0006 3423     		movs	r3, #52
 1419 0008 6343     		muls	r3, r4
 1420 000a 054A     		ldr	r2, .L121
 1421 000c D318     		adds	r3, r2, r3
 1422 000e 5968     		ldr	r1, [r3, #4]
 1423              	.LVL158:
2417:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 1424              		.loc 1 2417 0
 1425 0010 2000     		movs	r0, r4
 1426 0012 FFF7FEFF 		bl	CapSense_SsSetWidgetSenseClkSrc
 1427              	.LVL159:
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1428              		.loc 1 2409 0
 1429 0016 0134     		adds	r4, r4, #1
 1430              	.LVL160:
 1431              	.L119:
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1432              		.loc 1 2409 0 is_stmt 0 discriminator 1
 1433 0018 002C     		cmp	r4, #0
 1434 001a F4D0     		beq	.L120
2432:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || \
 1435              		.loc 1 2432 0 is_stmt 1
 1436              		@ sp needed
 1437              	.LVL161:
 1438 001c 10BD     		pop	{r4, pc}
 1439              	.L122:
 1440 001e C046     		.align	2
 1441              	.L121:
 1442 0020 00000000 		.word	CapSense_dsFlash
 1443              		.cfi_endproc
 1444              	.LFE19:
 1445              		.size	CapSense_SsInitializeSourceSenseClk, .-CapSense_SsInitializeSourceSenseClk
 1446              		.section	.text.CapSense_DischargeExtCapacitors,"ax",%progbits
 1447              		.align	2
 1448              		.global	CapSense_DischargeExtCapacitors
 1449              		.code	16
 1450              		.thumb_func
 1451              		.type	CapSense_DischargeExtCapacitors, %function
 1452              	CapSense_DischargeExtCapacitors:
 1453              	.LFB26:
2915:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2916:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2917:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2918:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2919:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
2920:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2921:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_DischargeExtCapacitors
2922:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2923:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2924:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2925:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The internal function discharge available external capacitors.
2926:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2927:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2928:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function discharge available external capacitors by connection them
2929:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  to GND using STRONG GPIO drive mode. Additionaly, the function disconnects
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 81


2930:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the capacitors from analog mux buses if connected.
2931:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Note: the function does not restore the connection to analog mux busses
2932:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and supposes that all the capacitors belong to a single device port.
2933:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2934:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param
2935:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  dischargeTime The discharge time in us.
2936:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2937:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2938:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_DischargeExtCapacitors(uint32 dischargeTime)
2939:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1454              		.loc 1 2939 0
 1455              		.cfi_startproc
 1456              		@ args = 0, pretend = 0, frame = 8
 1457              		@ frame_needed = 0, uses_anonymous_args = 0
 1458              	.LVL162:
 1459 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1460              		.cfi_def_cfa_offset 20
 1461              		.cfi_offset 4, -20
 1462              		.cfi_offset 5, -16
 1463              		.cfi_offset 6, -12
 1464              		.cfi_offset 7, -8
 1465              		.cfi_offset 14, -4
 1466 0002 5F46     		mov	r7, fp
 1467 0004 5646     		mov	r6, r10
 1468 0006 4D46     		mov	r5, r9
 1469 0008 4446     		mov	r4, r8
 1470 000a F0B4     		push	{r4, r5, r6, r7}
 1471              		.cfi_def_cfa_offset 36
 1472              		.cfi_offset 8, -36
 1473              		.cfi_offset 9, -32
 1474              		.cfi_offset 10, -28
 1475              		.cfi_offset 11, -24
 1476 000c 83B0     		sub	sp, sp, #12
 1477              		.cfi_def_cfa_offset 48
 1478 000e 0190     		str	r0, [sp, #4]
2940:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 hsiomReg;
2941:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 drReg;
2942:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 pcReg;
2943:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
2944:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8  interruptState;
2945:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2946:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Store register state */
2947:Generated_Source\PSoC4/CapSense_Sensing.c ****         hsiomReg = CY_GET_REG32(CapSense_EXT_CAP_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MASK;
 1479              		.loc 1 2947 0
 1480 0010 284C     		ldr	r4, .L124
 1481 0012 2368     		ldr	r3, [r4]
 1482 0014 F027     		movs	r7, #240
 1483 0016 3B40     		ands	r3, r7
 1484 0018 0093     		str	r3, [sp]
 1485              	.LVL163:
2948:Generated_Source\PSoC4/CapSense_Sensing.c ****         drReg = CY_GET_REG32(CapSense_EXT_CAP_DR_PTR) & CapSense_EXT_CAP_DR_MASK;
 1486              		.loc 1 2948 0
 1487 001a 274D     		ldr	r5, .L124+4
 1488 001c 2B68     		ldr	r3, [r5]
 1489              	.LVL164:
 1490 001e 0221     		movs	r1, #2
 1491 0020 8946     		mov	r9, r1
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 82


 1492 0022 1940     		ands	r1, r3
 1493 0024 8846     		mov	r8, r1
 1494              	.LVL165:
2949:Generated_Source\PSoC4/CapSense_Sensing.c ****         pcReg = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR) & CapSense_EXT_CAP_PC_MASK;
 1495              		.loc 1 2949 0
 1496 0026 254E     		ldr	r6, .L124+8
 1497 0028 3368     		ldr	r3, [r6]
 1498 002a 3821     		movs	r1, #56
 1499              	.LVL166:
 1500 002c 8B46     		mov	fp, r1
 1501 002e 1940     		ands	r1, r3
 1502 0030 8A46     		mov	r10, r1
 1503              	.LVL167:
2950:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2951:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Ext Cap from AMUXBUS-A using HSIOM registers */
2952:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1504              		.loc 1 2952 0
 1505 0032 FFF7FEFF 		bl	CyEnterCriticalSection
 1506              	.LVL168:
2953:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_HSIOM_PTR);
 1507              		.loc 1 2953 0
 1508 0036 2368     		ldr	r3, [r4]
 1509              	.LVL169:
2954:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_HSIOM_MASK);
 1510              		.loc 1 2954 0
 1511 0038 BB43     		bics	r3, r7
 1512              	.LVL170:
2955:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_HSIOM_PTR, newRegValue);
 1513              		.loc 1 2955 0
 1514 003a 2360     		str	r3, [r4]
 1515              	.LVL171:
2956:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1516              		.loc 1 2956 0
 1517 003c FFF7FEFF 		bl	CyExitCriticalSection
 1518              	.LVL172:
2957:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2958:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set output port register to 0 to connect to GND */
2959:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1519              		.loc 1 2959 0
 1520 0040 FFF7FEFF 		bl	CyEnterCriticalSection
 1521              	.LVL173:
2960:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_DR_PTR);
 1522              		.loc 1 2960 0
 1523 0044 2B68     		ldr	r3, [r5]
 1524              	.LVL174:
2961:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_DR_MASK);
 1525              		.loc 1 2961 0
 1526 0046 4946     		mov	r1, r9
 1527 0048 8B43     		bics	r3, r1
 1528              	.LVL175:
2962:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_DR_PTR, newRegValue);
 1529              		.loc 1 2962 0
 1530 004a 2B60     		str	r3, [r5]
2963:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1531              		.loc 1 2963 0
 1532 004c FFF7FEFF 		bl	CyExitCriticalSection
 1533              	.LVL176:
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 83


2964:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2965:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set port configuration register (drive mode) in STRONG mode */
2966:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1534              		.loc 1 2966 0
 1535 0050 FFF7FEFF 		bl	CyEnterCriticalSection
 1536              	.LVL177:
2967:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR);
 1537              		.loc 1 2967 0
 1538 0054 3368     		ldr	r3, [r6]
 1539              	.LVL178:
2968:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_EXT_CAP_PC_MASK));
 1540              		.loc 1 2968 0
 1541 0056 5946     		mov	r1, fp
 1542 0058 8B43     		bics	r3, r1
 1543              	.LVL179:
2969:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= (CapSense_EXT_CAP_PC_STRONG_CFG);
 1544              		.loc 1 2969 0
 1545 005a 3022     		movs	r2, #48
 1546 005c 1343     		orrs	r3, r2
 1547              	.LVL180:
2970:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_PC_PTR, newRegValue);
 1548              		.loc 1 2970 0
 1549 005e 3360     		str	r3, [r6]
2971:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1550              		.loc 1 2971 0
 1551 0060 FFF7FEFF 		bl	CyExitCriticalSection
 1552              	.LVL181:
2972:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2973:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Delay to discharge external capacitors */
2974:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyDelayUs((uint16)dischargeTime);
 1553              		.loc 1 2974 0
 1554 0064 6B46     		mov	r3, sp
 1555 0066 9888     		ldrh	r0, [r3, #4]
 1556 0068 FFF7FEFF 		bl	CyDelayUs
 1557              	.LVL182:
2975:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2976:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Restore previous register values */
2977:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1558              		.loc 1 2977 0
 1559 006c FFF7FEFF 		bl	CyEnterCriticalSection
 1560              	.LVL183:
2978:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR);
 1561              		.loc 1 2978 0
 1562 0070 3368     		ldr	r3, [r6]
 1563              	.LVL184:
2979:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_EXT_CAP_PC_MASK));
 1564              		.loc 1 2979 0
 1565 0072 5946     		mov	r1, fp
 1566 0074 8B43     		bics	r3, r1
 1567              	.LVL185:
2980:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= pcReg;
 1568              		.loc 1 2980 0
 1569 0076 5146     		mov	r1, r10
 1570 0078 0B43     		orrs	r3, r1
 1571              	.LVL186:
2981:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_PC_PTR, newRegValue);
 1572              		.loc 1 2981 0
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 84


 1573 007a 3360     		str	r3, [r6]
2982:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1574              		.loc 1 2982 0
 1575 007c FFF7FEFF 		bl	CyExitCriticalSection
 1576              	.LVL187:
2983:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2984:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1577              		.loc 1 2984 0
 1578 0080 FFF7FEFF 		bl	CyEnterCriticalSection
 1579              	.LVL188:
2985:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_DR_PTR);
 1580              		.loc 1 2985 0
 1581 0084 2B68     		ldr	r3, [r5]
 1582              	.LVL189:
2986:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_DR_MASK);
 1583              		.loc 1 2986 0
 1584 0086 4946     		mov	r1, r9
 1585 0088 8B43     		bics	r3, r1
 1586              	.LVL190:
2987:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= drReg;
 1587              		.loc 1 2987 0
 1588 008a 4146     		mov	r1, r8
 1589 008c 0B43     		orrs	r3, r1
 1590              	.LVL191:
2988:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_DR_PTR, newRegValue);
 1591              		.loc 1 2988 0
 1592 008e 2B60     		str	r3, [r5]
2989:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1593              		.loc 1 2989 0
 1594 0090 FFF7FEFF 		bl	CyExitCriticalSection
 1595              	.LVL192:
2990:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2991:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1596              		.loc 1 2991 0
 1597 0094 FFF7FEFF 		bl	CyEnterCriticalSection
 1598              	.LVL193:
2992:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_HSIOM_PTR);
 1599              		.loc 1 2992 0
 1600 0098 2368     		ldr	r3, [r4]
 1601              	.LVL194:
2993:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_HSIOM_MASK);
 1602              		.loc 1 2993 0
 1603 009a BB43     		bics	r3, r7
 1604              	.LVL195:
2994:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= hsiomReg;
 1605              		.loc 1 2994 0
 1606 009c 009A     		ldr	r2, [sp]
 1607 009e 1343     		orrs	r3, r2
 1608              	.LVL196:
2995:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_HSIOM_PTR, newRegValue);
 1609              		.loc 1 2995 0
 1610 00a0 2360     		str	r3, [r4]
2996:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1611              		.loc 1 2996 0
 1612 00a2 FFF7FEFF 		bl	CyExitCriticalSection
 1613              	.LVL197:
2997:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 85


 1614              		.loc 1 2997 0
 1615 00a6 03B0     		add	sp, sp, #12
 1616              		@ sp needed
 1617              	.LVL198:
 1618              	.LVL199:
 1619 00a8 3CBC     		pop	{r2, r3, r4, r5}
 1620 00aa 9046     		mov	r8, r2
 1621 00ac 9946     		mov	r9, r3
 1622 00ae A246     		mov	r10, r4
 1623 00b0 AB46     		mov	fp, r5
 1624 00b2 F0BD     		pop	{r4, r5, r6, r7, pc}
 1625              	.L125:
 1626              		.align	2
 1627              	.L124:
 1628 00b4 00040240 		.word	1073873920
 1629 00b8 00040440 		.word	1074004992
 1630 00bc 08040440 		.word	1074005000
 1631              		.cfi_endproc
 1632              	.LFE26:
 1633              		.size	CapSense_DischargeExtCapacitors, .-CapSense_DischargeExtCapacitors
 1634              		.section	.text.CapSense_SetInactiveElectrodeState,"ax",%progbits
 1635              		.align	2
 1636              		.global	CapSense_SetInactiveElectrodeState
 1637              		.code	16
 1638              		.thumb_func
 1639              		.type	CapSense_SetInactiveElectrodeState, %function
 1640              	CapSense_SetInactiveElectrodeState:
 1641              	.LFB27:
2998:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2999:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
3000:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3001:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3002:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV1)
3003:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
3004:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_DischargeExtCapacitors
3005:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
3006:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3007:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
3008:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The internal function discharge available external capacitors.
3009:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3010:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
3011:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function discharge available external capacitors by connection them
3012:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  to GND using STRONG GPIO drive mode. Additionaly, the function disconnects
3013:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the capacitors from analog mux buses if connected.
3014:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Note: the function does not restore the connection to analog mux busses
3015:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and supposes that all the capacitors belong to a single device port.
3016:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3017:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param
3018:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  dischargeTime The discharge time in us.
3019:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3020:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
3021:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_DischargeExtCapacitors(uint32 dischargeTime)
3022:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
3023:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Store the pin configuration, the CMOD capacitor is connected to. */
3024:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
3025:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cmodHsiom = CY_GET_REG32(CapSense_CMOD_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MASK_
3026:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cmodDr = CY_GET_REG32(CapSense_CMOD_DR_PTR) & CapSense_EXT_CAP_DR_MASK_CMOD;
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 86


3027:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cmodPc = CY_GET_REG32(CapSense_CMOD_PC_PTR) & CapSense_EXT_CAP_PC_MASK_CMOD;
3028:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3029:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Store the pin configuration, the CSH capacitor is connected to. */
3030:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&\
3031:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
3032:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 cshHsiom = CY_GET_REG32(CapSense_CSH_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MAS
3033:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 cshDr = CY_GET_REG32(CapSense_CSH_DR_PTR) & CapSense_EXT_CAP_DR_MASK_CSH;
3034:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 cshPc = CY_GET_REG32(CapSense_CSH_PC_PTR) & CapSense_EXT_CAP_PC_MASK_CSH;
3035:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
3036:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3037:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3038:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
3039:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Store the pin configuration, the CintA capacitor is connected to. */
3040:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintAHsiom = CY_GET_REG32(CapSense_CintA_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MAS
3041:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintADr = CY_GET_REG32(CapSense_CintA_DR_PTR) & CapSense_EXT_CAP_DR_MASK_CINTA;
3042:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintAPc = CY_GET_REG32(CapSense_CintA_PC_PTR) & CapSense_EXT_CAP_PC_MASK_CINTA;
3043:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3044:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Store the pin configuration, the CintB capacitor is connected to. */
3045:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintBHsiom = CY_GET_REG32(CapSense_CintB_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MAS
3046:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintBDr = CY_GET_REG32(CapSense_CintB_DR_PTR) & CapSense_EXT_CAP_DR_MASK_CINTB;
3047:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintBPc = CY_GET_REG32(CapSense_CintB_PC_PTR) & CapSense_EXT_CAP_PC_MASK_CINTB;
3048:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3049:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3050:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
3051:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect the CMOD capacitor from the AMUXBUS and connect it to GND. */
3052:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_HSIOM_PTR, CapSense_EXT_CAP_HSIOM_MASK_CMOD,
3053:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_HSIOM_SEL_GPIO);
3054:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_DR_PTR, CapSense_EXT_CAP_DR_MASK_CMOD, 0u);
3055:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_PC_PTR, CapSense_EXT_CAP_PC_MASK_CMOD,
3056:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_STRONG_CFG_CMOD);
3057:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3058:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&\
3059:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
3060:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Disconnect the CSH capacitor from the AMUXBUS and connect it to GND. */
3061:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_HSIOM_PTR, CapSense_EXT_CAP_HSIOM_MASK_CSH,
3062:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_HSIOM_SEL_GPIO);
3063:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_DR_PTR, CapSense_EXT_CAP_DR_MASK_CSH, 0u);
3064:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_PC_PTR, CapSense_EXT_CAP_PC_MASK_CSH,
3065:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_EXT_CAP_PC_STRONG_CFG_CSH);
3066:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
3067:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3068:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3069:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
3070:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect the CintA capacitor from the AMUXBUS and connect it to GND. */
3071:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_HSIOM_PTR, CapSense_EXT_CAP_HSIOM_MASK_CINTA,
3072:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_HSIOM_SEL_GPIO);
3073:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_DR_PTR, CapSense_EXT_CAP_DR_MASK_CINTA, 0u);
3074:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_PC_PTR, CapSense_EXT_CAP_PC_MASK_CINTA,
3075:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_STRONG_CFG_CINTA);
3076:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3077:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect the CintB capacitor from the AMUXBUS and connect it to GND. */
3078:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_HSIOM_PTR, CapSense_EXT_CAP_HSIOM_MASK_CINTB,
3079:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_HSIOM_SEL_GPIO);
3080:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_DR_PTR, CapSense_EXT_CAP_DR_MASK_CINTB, 0u);
3081:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_PC_PTR, CapSense_EXT_CAP_PC_MASK_CINTB,
3082:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_STRONG_CFG_CINTB);
3083:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 87


3084:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3085:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Delay to discharge external capacitors */
3086:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyDelayUs((uint16)dischargeTime);
3087:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3088:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
3089:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Restore the pin configuration, the CMOD capacitor is connected to. */
3090:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_PC_PTR,
3091:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_MASK_CMOD, cmodPc);
3092:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_DR_PTR,
3093:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_DR_MASK_CMOD, cmodDr);
3094:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_HSIOM_PTR,
3095:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_HSIOM_MASK_CMOD, cmodHsiom);
3096:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3097:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&\
3098:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
3099:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Restore the pin configuration, the CSH capacitor is connected to. */
3100:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_PC_PTR,
3101:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_EXT_CAP_PC_MASK_CSH, cshPc);
3102:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_DR_PTR,
3103:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_EXT_CAP_DR_MASK_CSH, cshDr);
3104:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_HSIOM_PTR,
3105:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_EXT_CAP_HSIOM_MASK_CSH, cshHsiom);
3106:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
3107:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3108:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3109:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
3110:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Restore the pin configuration, the CintA capacitor is connected to. */
3111:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_PC_PTR,
3112:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_MASK_CINTA, cintAPc);
3113:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_DR_PTR,
3114:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_DR_MASK_CINTA, cintADr);
3115:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_HSIOM_PTR,
3116:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_HSIOM_MASK_CINTA, cintAHsiom);
3117:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3118:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Restore the pin configuration, the CintB capacitor is connected to. */
3119:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_PC_PTR,
3120:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_MASK_CINTB, cintBPc);
3121:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_DR_PTR,
3122:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_DR_MASK_CINTB, cintBDr);
3123:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_HSIOM_PTR,
3124:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_HSIOM_MASK_CINTB, cintBHsiom);
3125:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3126:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
3127:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV1) */
3128:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3129:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3130:Generated_Source\PSoC4/CapSense_Sensing.c **** #if((CapSense_ENABLE == CapSense_CSD_EN) ||\
3131:Generated_Source\PSoC4/CapSense_Sensing.c ****     (CapSense_ENABLE == CapSense_CSX_EN))
3132:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
3133:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SetInactiveElectrodeState
3134:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
3135:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3136:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
3137:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function updates the RAM data structure with the desired state of inactive
3138:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  electrodes for the specified operation mode. The state of pins is not changed
3139:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  in scope of this routine.
3140:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 88


3141:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
3142:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function updates the following registers of RAM data structure:
3143:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_SCAN_CSD_ISC_VALUE - Connection of inactive CSD and CSX
3144:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     electrodes during the regular CSD scan. By default, this register is initialized
3145:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     with the value of Inactive Sensor Connection combobox on the CSD Settings tab.
3146:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_SCAN_CSD_E value should be used as the Mode parameter
3147:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3148:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3149:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_SCAN_CSX_ISC_VALUE - Connection of inactive CSD, CSX and
3150:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     the dedicated Shield electrodes during the regular CSX scan. By default, this
3151:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     register is initialized with the value of Inactive Sensor Connection combobox
3152:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     on the CSX Settings tab.
3153:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_SCAN_CSX_E value should be used as the Mode parameter
3154:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3155:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3156:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_BIST_CSD_SNS_CAP_ISC_VALUE - Connection of inactive CSD and CSX
3157:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     electrodes during measurement of CSD electrodes capacitance.
3158:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     This register is initialized with the CapSense_SNS_CONNECTION_GROUND value
3159:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     by default.
3160:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_BIST_CSD_SNS_CAP_E value should be used as the Mode parameter
3161:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3162:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3163:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_BIST_CSX_SNS_CAP_ISC_VALUE - Connection of inactive CSD, CSX and
3164:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     the dedicated Shield electrodes during measurement of CSX electrodes (Tx and Rx)
3165:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     capacitance. This register is initialized with the CapSense_SNS_CONNECTION_GROUND
3166:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     value by default.
3167:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_BIST_CSX_SNS_CAP_E value should be used as the Mode parameter
3168:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3169:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3170:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_BIST_CSD_SH_CAP_ISC_VALUE - Connection of inactive CSD and CSX electrodes
3171:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     measurement of dedicated Shield  electrodes capacitance. This register is initialized wit
3172:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     the CapSense_SNS_CONNECTION_GROUND value by default.
3173:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_BIST_CSD_SH_CAP_E value should be used as the Mode parameter
3174:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3175:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3176:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param
3177:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  mode Operation mode, the state of inactive sensors should be configured for.
3178:Generated_Source\PSoC4/CapSense_Sensing.c ****     *       This parameter can take the following values:
3179:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_SCAN_CSD_E - Regular CSD scan.
3180:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_SCAN_CSX_E - Regular CSX scan.
3181:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_BIST_CSD_SNS_CAP_E - Measurement of the CSD sensor capacitance.
3182:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_BIST_CSX_SNS_CAP_E - Measurement of the CSX electrode capacitance.
3183:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_BIST_CSD_SH_CAP_E - Measurement of the dedicated CSD Shield
3184:Generated_Source\PSoC4/CapSense_Sensing.c ****     *          electrode capacitance.
3185:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3186:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param
3187:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  state The desired state of inactive sensors.
3188:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        This parameter can take the following values:
3189:Generated_Source\PSoC4/CapSense_Sensing.c ****     *         - CapSense_SNS_CONNECTION_GROUND - Inactive sensors are connected to the ground.
3190:Generated_Source\PSoC4/CapSense_Sensing.c ****     *         - CapSense_SNS_CONNECTION_HIGHZ - Inactive sensors are floating (not
3191:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           connected to GND or Shield).
3192:Generated_Source\PSoC4/CapSense_Sensing.c ****     *         - CapSense_SNS_CONNECTION_SHIELD - Inactive sensors are connected to the shield.
3193:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           This option is available only if the Enable shield electrode check box is set.
3194:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           At least one dedicated shield electrode is required to use the
3195:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           CapSense_SNS_CONNECTION_SHIELD option for the CapSense_BIST_CSD_SH_CAP_E
3196:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           operation mode.
3197:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 89


3198:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
3199:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the operation:
3200:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation was successfully completed.
3201:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_PARAM - The input parameter is invalid.
3202:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3203:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
3204:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32_t CapSense_SetInactiveElectrodeState(CapSense_OPERATION_MODE_ENUM mode, uint32_t state)
3205:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1642              		.loc 1 3205 0
 1643              		.cfi_startproc
 1644              		@ args = 0, pretend = 0, frame = 0
 1645              		@ frame_needed = 0, uses_anonymous_args = 0
 1646              	.LVL200:
 1647 0000 10B5     		push	{r4, lr}
 1648              		.cfi_def_cfa_offset 8
 1649              		.cfi_offset 4, -8
 1650              		.cfi_offset 14, -4
 1651              	.LVL201:
3206:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32_t retVal = CYRET_SUCCESS;
3207:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3208:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch(mode)
 1652              		.loc 1 3208 0
 1653 0002 0028     		cmp	r0, #0
 1654 0004 04D1     		bne	.L130
3209:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
3210:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_ENABLE == CapSense_CSD_EN)
3211:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SCAN_CSD_E:
3212:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.scanCsdISC = (uint8)state;
 1655              		.loc 1 3212 0
 1656 0006 9323     		movs	r3, #147
 1657 0008 5B00     		lsls	r3, r3, #1
 1658 000a 044A     		ldr	r2, .L131
 1659 000c D154     		strb	r1, [r2, r3]
3213:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 1660              		.loc 1 3213 0
 1661 000e 03E0     		b	.L129
 1662              	.L130:
3214:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3215:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3216:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_ENABLE == CapSense_CSX_EN)
3217:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SCAN_CSX_E:
3218:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.scanCsxISC = (uint8)state;
3219:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
3220:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3221:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3222:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if((CapSense_ENABLE == CapSense_SELF_TEST_EN) &&\
3223:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_TST_SNS_CAP_EN) &&\
3224:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_CSD_EN))
3225:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_BIST_CSD_SNS_CAP_E:
3226:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.selfTestConfig.bistCsdSnsCapISC = (uint8)state;
3227:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
3228:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3229:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3230:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if((CapSense_ENABLE == CapSense_SELF_TEST_EN) &&\
3231:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_TST_SNS_CAP_EN) &&\
3232:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_CSX_EN))
3233:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_BIST_CSX_SNS_CAP_E:
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 90


3234:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.selfTestConfig.bistCsxSnsCapISC = (uint8)state;
3235:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
3236:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3237:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3238:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if((CapSense_ENABLE == CapSense_SELF_TEST_EN) &&\
3239:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_TST_SH_CAP_EN) &&\
3240:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_CSD_EN) &&\
3241:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_CSD_SHIELD_EN))
3242:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_BIST_CSD_SH_CAP_E:
3243:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if((CapSense_CSD_TOTAL_SHIELD_COUNT == 0u) &&
3244:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (CapSense_SNS_CONNECTION_SHIELD != state))
3245:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
3246:Generated_Source\PSoC4/CapSense_Sensing.c ****                     retVal = CYRET_BAD_PARAM;
3247:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
3248:Generated_Source\PSoC4/CapSense_Sensing.c ****                 else
3249:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
3250:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_dsRam.selfTestConfig.bistCsdShCapISC = (uint8)state;
3251:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
3252:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
3253:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3254:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3255:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
3256:Generated_Source\PSoC4/CapSense_Sensing.c ****             CYASSERT(0u);
 1663              		.loc 1 3256 0 discriminator 1
 1664 0010 0020     		movs	r0, #0
 1665              	.LVL202:
 1666 0012 FFF7FEFF 		bl	CyHalt
 1667              	.LVL203:
3257:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = CYRET_BAD_PARAM;
 1668              		.loc 1 3257 0 discriminator 1
 1669 0016 0120     		movs	r0, #1
 1670              	.LVL204:
 1671              	.L129:
3258:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
3259:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
3260:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3261:Generated_Source\PSoC4/CapSense_Sensing.c ****         return(retVal);
3262:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1672              		.loc 1 3262 0
 1673              		@ sp needed
 1674 0018 10BD     		pop	{r4, pc}
 1675              	.L132:
 1676 001a C046     		.align	2
 1677              	.L131:
 1678 001c 00000000 		.word	CapSense_dsRam
 1679              		.cfi_endproc
 1680              	.LFE27:
 1681              		.size	CapSense_SetInactiveElectrodeState, .-CapSense_SetInactiveElectrodeState
 1682              		.section	.text.CapSense_WriteBitsSafe,"ax",%progbits
 1683              		.align	2
 1684              		.global	CapSense_WriteBitsSafe
 1685              		.code	16
 1686              		.thumb_func
 1687              		.type	CapSense_WriteBitsSafe, %function
 1688              	CapSense_WriteBitsSafe:
 1689              	.LFB28:
3263:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 91


3264:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSX_EN)) */
3265:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3266:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3267:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
3268:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_WriteBitsSafe
3269:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
3270:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3271:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
3272:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Writes a field in port-pin register, specified by the mask parameter
3273:Generated_Source\PSoC4/CapSense_Sensing.c **** *  with the specified value in critical section.
3274:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3275:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
3276:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Writes a field in port-pin register, specified by the mask parameter
3277:Generated_Source\PSoC4/CapSense_Sensing.c **** *  with the specified value in critical section.
3278:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3279:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param regPtr
3280:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies a pointer to port-pin register.
3281:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3282:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param mask
3283:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies bits to be modified.
3284:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3285:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param value
3286:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies a value to be written to the register.
3287:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3288:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
3289:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_WriteBitsSafe(reg32 * regPtr, uint32 mask, uint32 value)
3290:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 1690              		.loc 1 3290 0
 1691              		.cfi_startproc
 1692              		@ args = 0, pretend = 0, frame = 0
 1693              		@ frame_needed = 0, uses_anonymous_args = 0
 1694              	.LVL205:
 1695 0000 70B5     		push	{r4, r5, r6, lr}
 1696              		.cfi_def_cfa_offset 16
 1697              		.cfi_offset 4, -16
 1698              		.cfi_offset 5, -12
 1699              		.cfi_offset 6, -8
 1700              		.cfi_offset 14, -4
 1701 0002 0500     		movs	r5, r0
 1702 0004 0E00     		movs	r6, r1
 1703 0006 1400     		movs	r4, r2
3291:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 interruptState = CyEnterCriticalSection();
 1704              		.loc 1 3291 0
 1705 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1706              	.LVL206:
3292:Generated_Source\PSoC4/CapSense_Sensing.c ****     (* regPtr) = ((* regPtr) & ((uint32)~mask)) | (value & mask);
 1707              		.loc 1 3292 0
 1708 000c 2B68     		ldr	r3, [r5]
 1709 000e 5C40     		eors	r4, r3
 1710              	.LVL207:
 1711 0010 3440     		ands	r4, r6
 1712 0012 5C40     		eors	r4, r3
 1713 0014 2C60     		str	r4, [r5]
3293:Generated_Source\PSoC4/CapSense_Sensing.c ****     CyExitCriticalSection(interruptState);
 1714              		.loc 1 3293 0
 1715 0016 FFF7FEFF 		bl	CyExitCriticalSection
 1716              	.LVL208:
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 92


3294:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 1717              		.loc 1 3294 0
 1718              		@ sp needed
 1719              	.LVL209:
 1720              	.LVL210:
 1721 001a 70BD     		pop	{r4, r5, r6, pc}
 1722              		.cfi_endproc
 1723              	.LFE28:
 1724              		.size	CapSense_WriteBitsSafe, .-CapSense_WriteBitsSafe
 1725              		.section	.text.CapSense_SsCSDDisableMode,"ax",%progbits
 1726              		.align	2
 1727              		.code	16
 1728              		.thumb_func
 1729              		.type	CapSense_SsCSDDisableMode, %function
 1730              	CapSense_SsCSDDisableMode:
 1731              	.LFB9:
 954:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSDV2) && \
 1732              		.loc 1 954 0
 1733              		.cfi_startproc
 1734              		@ args = 0, pretend = 0, frame = 0
 1735              		@ frame_needed = 0, uses_anonymous_args = 0
 1736 0000 10B5     		push	{r4, lr}
 1737              		.cfi_def_cfa_offset 8
 1738              		.cfi_offset 4, -8
 1739              		.cfi_offset 14, -4
 961:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue &= (uint32)(~CapSense_SW_REFGEN_SEL_SW_IAIB_MASK);
 1740              		.loc 1 961 0
 1741 0002 064A     		ldr	r2, .L135
 1742 0004 1368     		ldr	r3, [r2]
 1743              	.LVL211:
 962:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 1744              		.loc 1 962 0
 1745 0006 0121     		movs	r1, #1
 1746 0008 8B43     		bics	r3, r1
 1747              	.LVL212:
 963:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSDV2) && \
 1748              		.loc 1 963 0
 1749 000a 1360     		str	r3, [r2]
 968:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1750              		.loc 1 968 0
 1751 000c 0022     		movs	r2, #0
 1752 000e EF31     		adds	r1, r1, #239
 1753 0010 0348     		ldr	r0, .L135+4
 1754 0012 FFF7FEFF 		bl	CapSense_WriteBitsSafe
 1755              	.LVL213:
 971:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1756              		.loc 1 971 0
 1757 0016 FFF7FEFF 		bl	CapSense_SsCSDElectrodeCheck
 1758              	.LVL214:
 983:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 1759              		.loc 1 983 0
 1760              		@ sp needed
 1761 001a 10BD     		pop	{r4, pc}
 1762              	.L136:
 1763              		.align	2
 1764              	.L135:
 1765 001c A8020C40 		.word	1074528936
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 93


 1766 0020 00040240 		.word	1073873920
 1767              		.cfi_endproc
 1768              	.LFE9:
 1769              		.size	CapSense_SsCSDDisableMode, .-CapSense_SsCSDDisableMode
 1770              		.section	.text.CapSense_SsSwitchSensingMode,"ax",%progbits
 1771              		.align	2
 1772              		.global	CapSense_SsSwitchSensingMode
 1773              		.code	16
 1774              		.thumb_func
 1775              		.type	CapSense_SsSwitchSensingMode, %function
 1776              	CapSense_SsSwitchSensingMode:
 1777              	.LFB10:
1068:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_currentSenseMethod != mode)
 1778              		.loc 1 1068 0
 1779              		.cfi_startproc
 1780              		@ args = 0, pretend = 0, frame = 0
 1781              		@ frame_needed = 0, uses_anonymous_args = 0
 1782              	.LVL215:
 1783 0000 10B5     		push	{r4, lr}
 1784              		.cfi_def_cfa_offset 8
 1785              		.cfi_offset 4, -8
 1786              		.cfi_offset 14, -4
 1787 0002 0400     		movs	r4, r0
1069:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1788              		.loc 1 1069 0
 1789 0004 0C4B     		ldr	r3, .L141
 1790 0006 1B78     		ldrb	r3, [r3]
 1791 0008 8342     		cmp	r3, r0
 1792 000a 14D0     		beq	.L137
1072:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1793              		.loc 1 1072 0
 1794 000c 012B     		cmp	r3, #1
 1795 000e 01D1     		bne	.L139
1075:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 1796              		.loc 1 1075 0
 1797 0010 FFF7FEFF 		bl	CapSense_SsCSDDisableMode
 1798              	.LVL216:
 1799              	.L139:
1105:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1800              		.loc 1 1105 0
 1801 0014 012C     		cmp	r4, #1
 1802 0016 05D1     		bne	.L140
1109:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSD_E;
 1803              		.loc 1 1109 0
 1804 0018 FFF7FEFF 		bl	CapSense_SsCSDInitialize
 1805              	.LVL217:
1110:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 1806              		.loc 1 1110 0
 1807 001c 0122     		movs	r2, #1
 1808 001e 064B     		ldr	r3, .L141
 1809 0020 1A70     		strb	r2, [r3]
 1810 0022 08E0     		b	.L137
 1811              	.L140:
1113:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1812              		.loc 1 1113 0
 1813 0024 022C     		cmp	r4, #2
 1814 0026 06D0     		beq	.L137
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 94


1121:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1815              		.loc 1 1121 0
 1816 0028 042C     		cmp	r4, #4
 1817 002a 04D0     		beq	.L137
1129:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1818              		.loc 1 1129 0
 1819 002c 032C     		cmp	r4, #3
 1820 002e 02D0     		beq	.L137
1138:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1821              		.loc 1 1138 0
 1822 0030 0022     		movs	r2, #0
 1823 0032 014B     		ldr	r3, .L141
 1824 0034 1A70     		strb	r2, [r3]
 1825              	.L137:
1141:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1826              		.loc 1 1141 0
 1827              		@ sp needed
 1828 0036 10BD     		pop	{r4, pc}
 1829              	.L142:
 1830              		.align	2
 1831              	.L141:
 1832 0038 00000000 		.word	.LANCHOR0
 1833              		.cfi_endproc
 1834              	.LFE10:
 1835              		.size	CapSense_SsSwitchSensingMode, .-CapSense_SsSwitchSensingMode
 1836              		.section	.text.CapSense_SsInitialize,"ax",%progbits
 1837              		.align	2
 1838              		.global	CapSense_SsInitialize
 1839              		.code	16
 1840              		.thumb_func
 1841              		.type	CapSense_SsInitialize, %function
 1842              	CapSense_SsInitialize:
 1843              	.LFB7:
 708:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus initStatus;
 1844              		.loc 1 708 0
 1845              		.cfi_startproc
 1846              		@ args = 0, pretend = 0, frame = 0
 1847              		@ frame_needed = 0, uses_anonymous_args = 0
 1848 0000 10B5     		push	{r4, lr}
 1849              		.cfi_def_cfa_offset 8
 1850              		.cfi_offset 4, -8
 1851              		.cfi_offset 14, -4
 1852              	.LVL218:
 747:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
 1853              		.loc 1 747 0
 1854 0002 FFF7FEFF 		bl	CapSense_SsInitializeSourceSenseClk
 1855              	.LVL219:
 752:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_dsRam.scanCurrentISC = CapSense_SNS_CONNECTION_GROUND;
 1856              		.loc 1 752 0
 1857 0006 0020     		movs	r0, #0
 1858 0008 FFF7FEFF 		bl	CapSense_SsSetAllIOsState
 1859              	.LVL220:
 753:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1860              		.loc 1 753 0
 1861 000c 0021     		movs	r1, #0
 1862 000e 2823     		movs	r3, #40
 1863 0010 FF33     		adds	r3, r3, #255
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 95


 1864 0012 054A     		ldr	r2, .L144
 1865 0014 D154     		strb	r1, [r2, r3]
 755:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_MANY_SENSE_MODES_EN)
 1866              		.loc 1 755 0
 1867 0016 0020     		movs	r0, #0
 1868 0018 FFF7FEFF 		bl	CapSense_SsSwitchSensingMode
 1869              	.LVL221:
 758:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSX_EN)
 1870              		.loc 1 758 0
 1871 001c 0120     		movs	r0, #1
 1872 001e FFF7FEFF 		bl	CapSense_SsSwitchSensingMode
 1873              	.LVL222:
 769:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1874              		.loc 1 769 0
 1875 0022 0020     		movs	r0, #0
 1876              		@ sp needed
 1877 0024 10BD     		pop	{r4, pc}
 1878              	.L145:
 1879 0026 C046     		.align	2
 1880              	.L144:
 1881 0028 00000000 		.word	CapSense_dsRam
 1882              		.cfi_endproc
 1883              	.LFE7:
 1884              		.size	CapSense_SsInitialize, .-CapSense_SsInitialize
 1885              		.global	CapSense_idacGainTable
 1886              		.comm	CapSense_curSnsIOPtr,4,4
 1887              		.comm	CapSense_curRamSnsPtr,4,4
 1888              		.global	CapSense_requestScanAllWidget
 1889              		.global	CapSense_sensorIndex
 1890              		.global	CapSense_widgetIndex
 1891              		.global	CapSense_scanFreqIndex
 1892              		.global	CapSense_currentSenseMethod
 1893              		.section	.rodata
 1894              		.align	2
 1895              		.type	CapSense_idacGainTable, %object
 1896              		.size	CapSense_idacGainTable, 48
 1897              	CapSense_idacGainTable:
 1898 0000 00000001 		.word	16777216
 1899 0004 7C920000 		.word	37500
 1900 0008 00000003 		.word	50331648
 1901 000c F8240100 		.word	75000
 1902 0010 00004001 		.word	20971520
 1903 0014 E0930400 		.word	300000
 1904 0018 00004003 		.word	54525952
 1905 001c C0270900 		.word	600000
 1906 0020 00008001 		.word	25165824
 1907 0024 009F2400 		.word	2400000
 1908 0028 00008003 		.word	58720256
 1909 002c 003E4900 		.word	4800000
 1910              		.type	CapSense_scanFreqIndex, %object
 1911              		.size	CapSense_scanFreqIndex, 1
 1912              	CapSense_scanFreqIndex:
 1913 0030 00       		.space	1
 1914              		.bss
 1915              		.set	.LANCHOR0,. + 0
 1916              		.type	CapSense_currentSenseMethod, %object
 1917              		.size	CapSense_currentSenseMethod, 1
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 96


 1918              	CapSense_currentSenseMethod:
 1919 0000 00       		.space	1
 1920              		.type	CapSense_requestScanAllWidget, %object
 1921              		.size	CapSense_requestScanAllWidget, 1
 1922              	CapSense_requestScanAllWidget:
 1923 0001 00       		.space	1
 1924              		.type	CapSense_sensorIndex, %object
 1925              		.size	CapSense_sensorIndex, 1
 1926              	CapSense_sensorIndex:
 1927 0002 00       		.space	1
 1928              		.type	CapSense_widgetIndex, %object
 1929              		.size	CapSense_widgetIndex, 1
 1930              	CapSense_widgetIndex:
 1931 0003 00       		.space	1
 1932              		.text
 1933              	.Letext0:
 1934              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1935              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1936              		.file 4 "Generated_Source\\PSoC4/cytypes.h"
 1937              		.file 5 "Generated_Source\\PSoC4\\CapSense_Configuration.h"
 1938              		.file 6 "Generated_Source\\PSoC4\\CapSense_TMG.h"
 1939              		.file 7 "Generated_Source\\PSoC4\\CapSense_Structure.h"
 1940              		.file 8 "Generated_Source\\PSoC4\\CapSense_Sensing.h"
 1941              		.file 9 "Generated_Source\\PSoC4\\CapSense_SensingCSD_LL.h"
 1942              		.file 10 "Generated_Source\\PSoC4/CyLib.h"
 1943              		.file 11 "Generated_Source\\PSoC4\\CapSense_ISR.h"
 1944              		.section	.debug_info,"",%progbits
 1945              	.Ldebug_info0:
 1946 0000 71170000 		.4byte	0x1771
 1947 0004 0400     		.2byte	0x4
 1948 0006 00000000 		.4byte	.Ldebug_abbrev0
 1949 000a 04       		.byte	0x4
 1950 000b 01       		.uleb128 0x1
 1951 000c 47040000 		.4byte	.LASF295
 1952 0010 0C       		.byte	0xc
 1953 0011 450F0000 		.4byte	.LASF296
 1954 0015 A1090000 		.4byte	.LASF297
 1955 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1956 001d 00000000 		.4byte	0
 1957 0021 00000000 		.4byte	.Ldebug_line0
 1958 0025 02       		.uleb128 0x2
 1959 0026 01       		.byte	0x1
 1960 0027 06       		.byte	0x6
 1961 0028 3E120000 		.4byte	.LASF0
 1962 002c 03       		.uleb128 0x3
 1963 002d F40E0000 		.4byte	.LASF3
 1964 0031 02       		.byte	0x2
 1965 0032 1D       		.byte	0x1d
 1966 0033 37000000 		.4byte	0x37
 1967 0037 02       		.uleb128 0x2
 1968 0038 01       		.byte	0x1
 1969 0039 08       		.byte	0x8
 1970 003a DC100000 		.4byte	.LASF1
 1971 003e 02       		.uleb128 0x2
 1972 003f 02       		.byte	0x2
 1973 0040 05       		.byte	0x5
 1974 0041 C30D0000 		.4byte	.LASF2
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 97


 1975 0045 03       		.uleb128 0x3
 1976 0046 B7050000 		.4byte	.LASF4
 1977 004a 02       		.byte	0x2
 1978 004b 2B       		.byte	0x2b
 1979 004c 50000000 		.4byte	0x50
 1980 0050 02       		.uleb128 0x2
 1981 0051 02       		.byte	0x2
 1982 0052 07       		.byte	0x7
 1983 0053 8B120000 		.4byte	.LASF5
 1984 0057 02       		.uleb128 0x2
 1985 0058 04       		.byte	0x4
 1986 0059 05       		.byte	0x5
 1987 005a FB0D0000 		.4byte	.LASF6
 1988 005e 03       		.uleb128 0x3
 1989 005f EA100000 		.4byte	.LASF7
 1990 0063 02       		.byte	0x2
 1991 0064 41       		.byte	0x41
 1992 0065 69000000 		.4byte	0x69
 1993 0069 02       		.uleb128 0x2
 1994 006a 04       		.byte	0x4
 1995 006b 07       		.byte	0x7
 1996 006c FA0F0000 		.4byte	.LASF8
 1997 0070 02       		.uleb128 0x2
 1998 0071 08       		.byte	0x8
 1999 0072 05       		.byte	0x5
 2000 0073 8B090000 		.4byte	.LASF9
 2001 0077 02       		.uleb128 0x2
 2002 0078 08       		.byte	0x8
 2003 0079 07       		.byte	0x7
 2004 007a 2A050000 		.4byte	.LASF10
 2005 007e 04       		.uleb128 0x4
 2006 007f 04       		.byte	0x4
 2007 0080 05       		.byte	0x5
 2008 0081 696E7400 		.ascii	"int\000"
 2009 0085 02       		.uleb128 0x2
 2010 0086 04       		.byte	0x4
 2011 0087 07       		.byte	0x7
 2012 0088 84010000 		.4byte	.LASF11
 2013 008c 03       		.uleb128 0x3
 2014 008d 9E080000 		.4byte	.LASF12
 2015 0091 03       		.byte	0x3
 2016 0092 18       		.byte	0x18
 2017 0093 2C000000 		.4byte	0x2c
 2018 0097 03       		.uleb128 0x3
 2019 0098 C10C0000 		.4byte	.LASF13
 2020 009c 03       		.byte	0x3
 2021 009d 24       		.byte	0x24
 2022 009e 45000000 		.4byte	0x45
 2023 00a2 03       		.uleb128 0x3
 2024 00a3 CB030000 		.4byte	.LASF14
 2025 00a7 03       		.byte	0x3
 2026 00a8 30       		.byte	0x30
 2027 00a9 5E000000 		.4byte	0x5e
 2028 00ad 05       		.uleb128 0x5
 2029 00ae 0F130000 		.4byte	.LASF15
 2030 00b2 04       		.byte	0x4
 2031 00b3 F701     		.2byte	0x1f7
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 98


 2032 00b5 37000000 		.4byte	0x37
 2033 00b9 05       		.uleb128 0x5
 2034 00ba 82080000 		.4byte	.LASF16
 2035 00be 04       		.byte	0x4
 2036 00bf F801     		.2byte	0x1f8
 2037 00c1 50000000 		.4byte	0x50
 2038 00c5 05       		.uleb128 0x5
 2039 00c6 930B0000 		.4byte	.LASF17
 2040 00ca 04       		.byte	0x4
 2041 00cb F901     		.2byte	0x1f9
 2042 00cd 69000000 		.4byte	0x69
 2043 00d1 02       		.uleb128 0x2
 2044 00d2 04       		.byte	0x4
 2045 00d3 04       		.byte	0x4
 2046 00d4 3B040000 		.4byte	.LASF18
 2047 00d8 02       		.uleb128 0x2
 2048 00d9 08       		.byte	0x8
 2049 00da 04       		.byte	0x4
 2050 00db 15130000 		.4byte	.LASF19
 2051 00df 02       		.uleb128 0x2
 2052 00e0 01       		.byte	0x1
 2053 00e1 08       		.byte	0x8
 2054 00e2 D2070000 		.4byte	.LASF20
 2055 00e6 05       		.uleb128 0x5
 2056 00e7 D3100000 		.4byte	.LASF21
 2057 00eb 04       		.byte	0x4
 2058 00ec 9902     		.2byte	0x299
 2059 00ee 69000000 		.4byte	0x69
 2060 00f2 06       		.uleb128 0x6
 2061 00f3 AD000000 		.4byte	0xad
 2062 00f7 05       		.uleb128 0x5
 2063 00f8 CA0C0000 		.4byte	.LASF22
 2064 00fc 04       		.byte	0x4
 2065 00fd A302     		.2byte	0x2a3
 2066 00ff 03010000 		.4byte	0x103
 2067 0103 06       		.uleb128 0x6
 2068 0104 C5000000 		.4byte	0xc5
 2069 0108 05       		.uleb128 0x5
 2070 0109 0C0B0000 		.4byte	.LASF23
 2071 010d 04       		.byte	0x4
 2072 010e B302     		.2byte	0x2b3
 2073 0110 14010000 		.4byte	0x114
 2074 0114 07       		.uleb128 0x7
 2075 0115 04       		.byte	0x4
 2076 0116 1A010000 		.4byte	0x11a
 2077 011a 08       		.uleb128 0x8
 2078 011b 05       		.uleb128 0x5
 2079 011c 63110000 		.4byte	.LASF24
 2080 0120 05       		.byte	0x5
 2081 0121 3B01     		.2byte	0x13b
 2082 0123 B9000000 		.4byte	0xb9
 2083 0127 05       		.uleb128 0x5
 2084 0128 DA080000 		.4byte	.LASF25
 2085 012c 05       		.byte	0x5
 2086 012d 3F01     		.2byte	0x13f
 2087 012f AD000000 		.4byte	0xad
 2088 0133 09       		.uleb128 0x9
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 99


 2089 0134 56       		.byte	0x56
 2090 0135 06       		.byte	0x6
 2091 0136 21       		.byte	0x21
 2092 0137 D0040000 		.4byte	0x4d0
 2093 013b 0A       		.uleb128 0xa
 2094 013c 7B0B0000 		.4byte	.LASF26
 2095 0140 06       		.byte	0x6
 2096 0141 26       		.byte	0x26
 2097 0142 D0040000 		.4byte	0x4d0
 2098 0146 00       		.byte	0
 2099 0147 0A       		.uleb128 0xa
 2100 0148 61000000 		.4byte	.LASF27
 2101 014c 06       		.byte	0x6
 2102 014d 2D       		.byte	0x2d
 2103 014e D0040000 		.4byte	0x4d0
 2104 0152 01       		.byte	0x1
 2105 0153 0A       		.uleb128 0xa
 2106 0154 74000000 		.4byte	.LASF28
 2107 0158 06       		.byte	0x6
 2108 0159 33       		.byte	0x33
 2109 015a D0040000 		.4byte	0x4d0
 2110 015e 02       		.byte	0x2
 2111 015f 0A       		.uleb128 0xa
 2112 0160 89030000 		.4byte	.LASF29
 2113 0164 06       		.byte	0x6
 2114 0165 39       		.byte	0x39
 2115 0166 D0040000 		.4byte	0x4d0
 2116 016a 03       		.byte	0x3
 2117 016b 0A       		.uleb128 0xa
 2118 016c 9D030000 		.4byte	.LASF30
 2119 0170 06       		.byte	0x6
 2120 0171 3F       		.byte	0x3f
 2121 0172 D0040000 		.4byte	0x4d0
 2122 0176 04       		.byte	0x4
 2123 0177 0A       		.uleb128 0xa
 2124 0178 29000000 		.4byte	.LASF31
 2125 017c 06       		.byte	0x6
 2126 017d 45       		.byte	0x45
 2127 017e D0040000 		.4byte	0x4d0
 2128 0182 05       		.byte	0x5
 2129 0183 0A       		.uleb128 0xa
 2130 0184 3E000000 		.4byte	.LASF32
 2131 0188 06       		.byte	0x6
 2132 0189 4B       		.byte	0x4b
 2133 018a D0040000 		.4byte	0x4d0
 2134 018e 06       		.byte	0x6
 2135 018f 0A       		.uleb128 0xa
 2136 0190 DB120000 		.4byte	.LASF33
 2137 0194 06       		.byte	0x6
 2138 0195 51       		.byte	0x51
 2139 0196 D0040000 		.4byte	0x4d0
 2140 019a 07       		.byte	0x7
 2141 019b 0A       		.uleb128 0xa
 2142 019c 28140000 		.4byte	.LASF34
 2143 01a0 06       		.byte	0x6
 2144 01a1 57       		.byte	0x57
 2145 01a2 D0040000 		.4byte	0x4d0
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 100


 2146 01a6 08       		.byte	0x8
 2147 01a7 0A       		.uleb128 0xa
 2148 01a8 4C010000 		.4byte	.LASF35
 2149 01ac 06       		.byte	0x6
 2150 01ad 5D       		.byte	0x5d
 2151 01ae D0040000 		.4byte	0x4d0
 2152 01b2 09       		.byte	0x9
 2153 01b3 0A       		.uleb128 0xa
 2154 01b4 66020000 		.4byte	.LASF36
 2155 01b8 06       		.byte	0x6
 2156 01b9 63       		.byte	0x63
 2157 01ba D0040000 		.4byte	0x4d0
 2158 01be 0A       		.byte	0xa
 2159 01bf 0A       		.uleb128 0xa
 2160 01c0 EF120000 		.4byte	.LASF37
 2161 01c4 06       		.byte	0x6
 2162 01c5 69       		.byte	0x69
 2163 01c6 D0040000 		.4byte	0x4d0
 2164 01ca 0B       		.byte	0xb
 2165 01cb 0A       		.uleb128 0xa
 2166 01cc 3C140000 		.4byte	.LASF38
 2167 01d0 06       		.byte	0x6
 2168 01d1 6F       		.byte	0x6f
 2169 01d2 D0040000 		.4byte	0x4d0
 2170 01d6 0C       		.byte	0xc
 2171 01d7 0A       		.uleb128 0xa
 2172 01d8 60010000 		.4byte	.LASF39
 2173 01dc 06       		.byte	0x6
 2174 01dd 75       		.byte	0x75
 2175 01de D0040000 		.4byte	0x4d0
 2176 01e2 0D       		.byte	0xd
 2177 01e3 0A       		.uleb128 0xa
 2178 01e4 7A020000 		.4byte	.LASF40
 2179 01e8 06       		.byte	0x6
 2180 01e9 7B       		.byte	0x7b
 2181 01ea D0040000 		.4byte	0x4d0
 2182 01ee 0E       		.byte	0xe
 2183 01ef 0A       		.uleb128 0xa
 2184 01f0 A5010000 		.4byte	.LASF41
 2185 01f4 06       		.byte	0x6
 2186 01f5 83       		.byte	0x83
 2187 01f6 D0040000 		.4byte	0x4d0
 2188 01fa 0F       		.byte	0xf
 2189 01fb 0A       		.uleb128 0xa
 2190 01fc B3010000 		.4byte	.LASF42
 2191 0200 06       		.byte	0x6
 2192 0201 8B       		.byte	0x8b
 2193 0202 D0040000 		.4byte	0x4d0
 2194 0206 10       		.byte	0x10
 2195 0207 0A       		.uleb128 0xa
 2196 0208 C1010000 		.4byte	.LASF43
 2197 020c 06       		.byte	0x6
 2198 020d 93       		.byte	0x93
 2199 020e D0040000 		.4byte	0x4d0
 2200 0212 11       		.byte	0x11
 2201 0213 0A       		.uleb128 0xa
 2202 0214 CF010000 		.4byte	.LASF44
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 101


 2203 0218 06       		.byte	0x6
 2204 0219 9B       		.byte	0x9b
 2205 021a D0040000 		.4byte	0x4d0
 2206 021e 12       		.byte	0x12
 2207 021f 0A       		.uleb128 0xa
 2208 0220 E10F0000 		.4byte	.LASF45
 2209 0224 06       		.byte	0x6
 2210 0225 A2       		.byte	0xa2
 2211 0226 D0040000 		.4byte	0x4d0
 2212 022a 13       		.byte	0x13
 2213 022b 0A       		.uleb128 0xa
 2214 022c 2C020000 		.4byte	.LASF46
 2215 0230 06       		.byte	0x6
 2216 0231 A8       		.byte	0xa8
 2217 0232 D0040000 		.4byte	0x4d0
 2218 0236 14       		.byte	0x14
 2219 0237 0A       		.uleb128 0xa
 2220 0238 23030000 		.4byte	.LASF47
 2221 023c 06       		.byte	0x6
 2222 023d AE       		.byte	0xae
 2223 023e D0040000 		.4byte	0x4d0
 2224 0242 15       		.byte	0x15
 2225 0243 0A       		.uleb128 0xa
 2226 0244 F1040000 		.4byte	.LASF48
 2227 0248 06       		.byte	0x6
 2228 0249 B4       		.byte	0xb4
 2229 024a D0040000 		.4byte	0x4d0
 2230 024e 16       		.byte	0x16
 2231 024f 0A       		.uleb128 0xa
 2232 0250 0A060000 		.4byte	.LASF49
 2233 0254 06       		.byte	0x6
 2234 0255 BA       		.byte	0xba
 2235 0256 D0040000 		.4byte	0x4d0
 2236 025a 17       		.byte	0x17
 2237 025b 0A       		.uleb128 0xa
 2238 025c 40020000 		.4byte	.LASF50
 2239 0260 06       		.byte	0x6
 2240 0261 C0       		.byte	0xc0
 2241 0262 D0040000 		.4byte	0x4d0
 2242 0266 18       		.byte	0x18
 2243 0267 0A       		.uleb128 0xa
 2244 0268 37030000 		.4byte	.LASF51
 2245 026c 06       		.byte	0x6
 2246 026d C6       		.byte	0xc6
 2247 026e D0040000 		.4byte	0x4d0
 2248 0272 19       		.byte	0x19
 2249 0273 0A       		.uleb128 0xa
 2250 0274 05050000 		.4byte	.LASF52
 2251 0278 06       		.byte	0x6
 2252 0279 CC       		.byte	0xcc
 2253 027a D0040000 		.4byte	0x4d0
 2254 027e 1A       		.byte	0x1a
 2255 027f 0A       		.uleb128 0xa
 2256 0280 1E060000 		.4byte	.LASF53
 2257 0284 06       		.byte	0x6
 2258 0285 D2       		.byte	0xd2
 2259 0286 D0040000 		.4byte	0x4d0
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 102


 2260 028a 1B       		.byte	0x1b
 2261 028b 0A       		.uleb128 0xa
 2262 028c 8B0D0000 		.4byte	.LASF54
 2263 0290 06       		.byte	0x6
 2264 0291 DA       		.byte	0xda
 2265 0292 D0040000 		.4byte	0x4d0
 2266 0296 1C       		.byte	0x1c
 2267 0297 0A       		.uleb128 0xa
 2268 0298 990D0000 		.4byte	.LASF55
 2269 029c 06       		.byte	0x6
 2270 029d E2       		.byte	0xe2
 2271 029e D0040000 		.4byte	0x4d0
 2272 02a2 1D       		.byte	0x1d
 2273 02a3 0A       		.uleb128 0xa
 2274 02a4 A70D0000 		.4byte	.LASF56
 2275 02a8 06       		.byte	0x6
 2276 02a9 EA       		.byte	0xea
 2277 02aa D0040000 		.4byte	0x4d0
 2278 02ae 1E       		.byte	0x1e
 2279 02af 0A       		.uleb128 0xa
 2280 02b0 B50D0000 		.4byte	.LASF57
 2281 02b4 06       		.byte	0x6
 2282 02b5 F2       		.byte	0xf2
 2283 02b6 D0040000 		.4byte	0x4d0
 2284 02ba 1F       		.byte	0x1f
 2285 02bb 0A       		.uleb128 0xa
 2286 02bc 0B030000 		.4byte	.LASF58
 2287 02c0 06       		.byte	0x6
 2288 02c1 F9       		.byte	0xf9
 2289 02c2 D0040000 		.4byte	0x4d0
 2290 02c6 20       		.byte	0x20
 2291 02c7 0B       		.uleb128 0xb
 2292 02c8 79070000 		.4byte	.LASF59
 2293 02cc 06       		.byte	0x6
 2294 02cd 0001     		.2byte	0x100
 2295 02cf D0040000 		.4byte	0x4d0
 2296 02d3 21       		.byte	0x21
 2297 02d4 0B       		.uleb128 0xb
 2298 02d5 9C070000 		.4byte	.LASF60
 2299 02d9 06       		.byte	0x6
 2300 02da 0701     		.2byte	0x107
 2301 02dc D0040000 		.4byte	0x4d0
 2302 02e0 22       		.byte	0x22
 2303 02e1 0B       		.uleb128 0xb
 2304 02e2 B3070000 		.4byte	.LASF61
 2305 02e6 06       		.byte	0x6
 2306 02e7 0E01     		.2byte	0x10e
 2307 02e9 D0040000 		.4byte	0x4d0
 2308 02ed 23       		.byte	0x23
 2309 02ee 0B       		.uleb128 0xb
 2310 02ef BA000000 		.4byte	.LASF62
 2311 02f3 06       		.byte	0x6
 2312 02f4 1501     		.2byte	0x115
 2313 02f6 D0040000 		.4byte	0x4d0
 2314 02fa 24       		.byte	0x24
 2315 02fb 0B       		.uleb128 0xb
 2316 02fc 09010000 		.4byte	.LASF63
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 103


 2317 0300 06       		.byte	0x6
 2318 0301 1C01     		.2byte	0x11c
 2319 0303 D0040000 		.4byte	0x4d0
 2320 0307 25       		.byte	0x25
 2321 0308 0B       		.uleb128 0xb
 2322 0309 20010000 		.4byte	.LASF64
 2323 030d 06       		.byte	0x6
 2324 030e 2301     		.2byte	0x123
 2325 0310 D0040000 		.4byte	0x4d0
 2326 0314 26       		.byte	0x26
 2327 0315 0B       		.uleb128 0xb
 2328 0316 56050000 		.4byte	.LASF65
 2329 031a 06       		.byte	0x6
 2330 031b 2A01     		.2byte	0x12a
 2331 031d D0040000 		.4byte	0x4d0
 2332 0321 27       		.byte	0x27
 2333 0322 0B       		.uleb128 0xb
 2334 0323 61120000 		.4byte	.LASF66
 2335 0327 06       		.byte	0x6
 2336 0328 3101     		.2byte	0x131
 2337 032a D0040000 		.4byte	0x4d0
 2338 032e 28       		.byte	0x28
 2339 032f 0B       		.uleb128 0xb
 2340 0330 79120000 		.4byte	.LASF67
 2341 0334 06       		.byte	0x6
 2342 0335 3701     		.2byte	0x137
 2343 0337 D0040000 		.4byte	0x4d0
 2344 033b 29       		.byte	0x29
 2345 033c 0B       		.uleb128 0xb
 2346 033d 51090000 		.4byte	.LASF68
 2347 0341 06       		.byte	0x6
 2348 0342 3D01     		.2byte	0x13d
 2349 0344 D0040000 		.4byte	0x4d0
 2350 0348 2A       		.byte	0x2a
 2351 0349 0B       		.uleb128 0xb
 2352 034a 75090000 		.4byte	.LASF69
 2353 034e 06       		.byte	0x6
 2354 034f 4401     		.2byte	0x144
 2355 0351 D0040000 		.4byte	0x4d0
 2356 0355 2B       		.byte	0x2b
 2357 0356 0B       		.uleb128 0xb
 2358 0357 87000000 		.4byte	.LASF70
 2359 035b 06       		.byte	0x6
 2360 035c 4A01     		.2byte	0x14a
 2361 035e D0040000 		.4byte	0x4d0
 2362 0362 2C       		.byte	0x2c
 2363 0363 0B       		.uleb128 0xb
 2364 0364 430C0000 		.4byte	.LASF71
 2365 0368 06       		.byte	0x6
 2366 0369 5001     		.2byte	0x150
 2367 036b D0040000 		.4byte	0x4d0
 2368 036f 2D       		.byte	0x2d
 2369 0370 0B       		.uleb128 0xb
 2370 0371 9E120000 		.4byte	.LASF72
 2371 0375 06       		.byte	0x6
 2372 0376 5701     		.2byte	0x157
 2373 0378 D0040000 		.4byte	0x4d0
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 104


 2374 037c 2E       		.byte	0x2e
 2375 037d 0B       		.uleb128 0xb
 2376 037e F4030000 		.4byte	.LASF73
 2377 0382 06       		.byte	0x6
 2378 0383 5F01     		.2byte	0x15f
 2379 0385 D0040000 		.4byte	0x4d0
 2380 0389 2F       		.byte	0x2f
 2381 038a 0B       		.uleb128 0xb
 2382 038b 1C130000 		.4byte	.LASF74
 2383 038f 06       		.byte	0x6
 2384 0390 6801     		.2byte	0x168
 2385 0392 D0040000 		.4byte	0x4d0
 2386 0396 30       		.byte	0x30
 2387 0397 0B       		.uleb128 0xb
 2388 0398 41070000 		.4byte	.LASF75
 2389 039c 06       		.byte	0x6
 2390 039d 6E01     		.2byte	0x16e
 2391 039f D0040000 		.4byte	0x4d0
 2392 03a3 31       		.byte	0x31
 2393 03a4 0B       		.uleb128 0xb
 2394 03a5 64030000 		.4byte	.LASF76
 2395 03a9 06       		.byte	0x6
 2396 03aa 7401     		.2byte	0x174
 2397 03ac D0040000 		.4byte	0x4d0
 2398 03b0 32       		.byte	0x32
 2399 03b1 0B       		.uleb128 0xb
 2400 03b2 190B0000 		.4byte	.LASF77
 2401 03b6 06       		.byte	0x6
 2402 03b7 7A01     		.2byte	0x17a
 2403 03b9 D0040000 		.4byte	0x4d0
 2404 03bd 33       		.byte	0x33
 2405 03be 0B       		.uleb128 0xb
 2406 03bf 260B0000 		.4byte	.LASF78
 2407 03c3 06       		.byte	0x6
 2408 03c4 8001     		.2byte	0x180
 2409 03c6 D0040000 		.4byte	0x4d0
 2410 03ca 34       		.byte	0x34
 2411 03cb 0B       		.uleb128 0xb
 2412 03cc 74010000 		.4byte	.LASF79
 2413 03d0 06       		.byte	0x6
 2414 03d1 8601     		.2byte	0x186
 2415 03d3 D5040000 		.4byte	0x4d5
 2416 03d7 36       		.byte	0x36
 2417 03d8 0B       		.uleb128 0xb
 2418 03d9 5F100000 		.4byte	.LASF80
 2419 03dd 06       		.byte	0x6
 2420 03de 8B01     		.2byte	0x18b
 2421 03e0 D5040000 		.4byte	0x4d5
 2422 03e4 38       		.byte	0x38
 2423 03e5 0B       		.uleb128 0xb
 2424 03e6 6B100000 		.4byte	.LASF81
 2425 03ea 06       		.byte	0x6
 2426 03eb 9001     		.2byte	0x190
 2427 03ed D5040000 		.4byte	0x4d5
 2428 03f1 3A       		.byte	0x3a
 2429 03f2 0B       		.uleb128 0xb
 2430 03f3 08040000 		.4byte	.LASF82
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 105


 2431 03f7 06       		.byte	0x6
 2432 03f8 9501     		.2byte	0x195
 2433 03fa D5040000 		.4byte	0x4d5
 2434 03fe 3C       		.byte	0x3c
 2435 03ff 0B       		.uleb128 0xb
 2436 0400 00000000 		.4byte	.LASF83
 2437 0404 06       		.byte	0x6
 2438 0405 9A01     		.2byte	0x19a
 2439 0407 D5040000 		.4byte	0x4d5
 2440 040b 3E       		.byte	0x3e
 2441 040c 0B       		.uleb128 0xb
 2442 040d 8E020000 		.4byte	.LASF84
 2443 0411 06       		.byte	0x6
 2444 0412 A001     		.2byte	0x1a0
 2445 0414 D5040000 		.4byte	0x4d5
 2446 0418 40       		.byte	0x40
 2447 0419 0B       		.uleb128 0xb
 2448 041a F70C0000 		.4byte	.LASF85
 2449 041e 06       		.byte	0x6
 2450 041f A801     		.2byte	0x1a8
 2451 0421 D5040000 		.4byte	0x4d5
 2452 0425 42       		.byte	0x42
 2453 0426 0B       		.uleb128 0xb
 2454 0427 C1100000 		.4byte	.LASF86
 2455 042b 06       		.byte	0x6
 2456 042c AF01     		.2byte	0x1af
 2457 042e D5040000 		.4byte	0x4d5
 2458 0432 44       		.byte	0x44
 2459 0433 0B       		.uleb128 0xb
 2460 0434 A3060000 		.4byte	.LASF87
 2461 0438 06       		.byte	0x6
 2462 0439 B701     		.2byte	0x1b7
 2463 043b D5040000 		.4byte	0x4d5
 2464 043f 46       		.byte	0x46
 2465 0440 0B       		.uleb128 0xb
 2466 0441 2A110000 		.4byte	.LASF88
 2467 0445 06       		.byte	0x6
 2468 0446 BD01     		.2byte	0x1bd
 2469 0448 D5040000 		.4byte	0x4d5
 2470 044c 48       		.byte	0x48
 2471 044d 0B       		.uleb128 0xb
 2472 044e 1E070000 		.4byte	.LASF89
 2473 0452 06       		.byte	0x6
 2474 0453 C301     		.2byte	0x1c3
 2475 0455 D5040000 		.4byte	0x4d5
 2476 0459 4A       		.byte	0x4a
 2477 045a 0B       		.uleb128 0xb
 2478 045b 7F030000 		.4byte	.LASF90
 2479 045f 06       		.byte	0x6
 2480 0460 CC01     		.2byte	0x1cc
 2481 0462 D0040000 		.4byte	0x4d0
 2482 0466 4C       		.byte	0x4c
 2483 0467 0B       		.uleb128 0xb
 2484 0468 EA0B0000 		.4byte	.LASF91
 2485 046c 06       		.byte	0x6
 2486 046d D101     		.2byte	0x1d1
 2487 046f D0040000 		.4byte	0x4d0
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 106


 2488 0473 4D       		.byte	0x4d
 2489 0474 0B       		.uleb128 0xb
 2490 0475 390C0000 		.4byte	.LASF92
 2491 0479 06       		.byte	0x6
 2492 047a D601     		.2byte	0x1d6
 2493 047c D0040000 		.4byte	0x4d0
 2494 0480 4E       		.byte	0x4e
 2495 0481 0B       		.uleb128 0xb
 2496 0482 54020000 		.4byte	.LASF93
 2497 0486 06       		.byte	0x6
 2498 0487 DB01     		.2byte	0x1db
 2499 0489 D0040000 		.4byte	0x4d0
 2500 048d 4F       		.byte	0x4f
 2501 048e 0B       		.uleb128 0xb
 2502 048f 4B030000 		.4byte	.LASF94
 2503 0493 06       		.byte	0x6
 2504 0494 E001     		.2byte	0x1e0
 2505 0496 D0040000 		.4byte	0x4d0
 2506 049a 50       		.byte	0x50
 2507 049b 0B       		.uleb128 0xb
 2508 049c 090F0000 		.4byte	.LASF95
 2509 04a0 06       		.byte	0x6
 2510 04a1 E501     		.2byte	0x1e5
 2511 04a3 D0040000 		.4byte	0x4d0
 2512 04a7 51       		.byte	0x51
 2513 04a8 0B       		.uleb128 0xb
 2514 04a9 EA0E0000 		.4byte	.LASF96
 2515 04ad 06       		.byte	0x6
 2516 04ae EA01     		.2byte	0x1ea
 2517 04b0 D0040000 		.4byte	0x4d0
 2518 04b4 52       		.byte	0x52
 2519 04b5 0B       		.uleb128 0xb
 2520 04b6 49080000 		.4byte	.LASF97
 2521 04ba 06       		.byte	0x6
 2522 04bb EF01     		.2byte	0x1ef
 2523 04bd D0040000 		.4byte	0x4d0
 2524 04c1 53       		.byte	0x53
 2525 04c2 0B       		.uleb128 0xb
 2526 04c3 6E060000 		.4byte	.LASF98
 2527 04c7 06       		.byte	0x6
 2528 04c8 F401     		.2byte	0x1f4
 2529 04ca D0040000 		.4byte	0x4d0
 2530 04ce 54       		.byte	0x54
 2531 04cf 00       		.byte	0
 2532 04d0 06       		.uleb128 0x6
 2533 04d1 8C000000 		.4byte	0x8c
 2534 04d5 06       		.uleb128 0x6
 2535 04d6 97000000 		.4byte	0x97
 2536 04da 05       		.uleb128 0x5
 2537 04db BE0F0000 		.4byte	.LASF99
 2538 04df 06       		.byte	0x6
 2539 04e0 F501     		.2byte	0x1f5
 2540 04e2 33010000 		.4byte	0x133
 2541 04e6 0C       		.uleb128 0xc
 2542 04e7 01       		.byte	0x1
 2543 04e8 37000000 		.4byte	0x37
 2544 04ec 07       		.byte	0x7
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 107


 2545 04ed 61       		.byte	0x61
 2546 04ee 1D050000 		.4byte	0x51d
 2547 04f2 0D       		.uleb128 0xd
 2548 04f3 B00E0000 		.4byte	.LASF100
 2549 04f7 01       		.byte	0x1
 2550 04f8 0D       		.uleb128 0xd
 2551 04f9 CE0B0000 		.4byte	.LASF101
 2552 04fd 02       		.byte	0x2
 2553 04fe 0D       		.uleb128 0xd
 2554 04ff D3060000 		.4byte	.LASF102
 2555 0503 03       		.byte	0x3
 2556 0504 0D       		.uleb128 0xd
 2557 0505 68050000 		.4byte	.LASF103
 2558 0509 04       		.byte	0x4
 2559 050a 0D       		.uleb128 0xd
 2560 050b 23100000 		.4byte	.LASF104
 2561 050f 05       		.byte	0x5
 2562 0510 0D       		.uleb128 0xd
 2563 0511 11000000 		.4byte	.LASF105
 2564 0515 06       		.byte	0x6
 2565 0516 0D       		.uleb128 0xd
 2566 0517 220D0000 		.4byte	.LASF106
 2567 051b 07       		.byte	0x7
 2568 051c 00       		.byte	0
 2569 051d 03       		.uleb128 0x3
 2570 051e 600B0000 		.4byte	.LASF107
 2571 0522 07       		.byte	0x7
 2572 0523 69       		.byte	0x69
 2573 0524 E6040000 		.4byte	0x4e6
 2574 0528 0C       		.uleb128 0xc
 2575 0529 01       		.byte	0x1
 2576 052a 37000000 		.4byte	0x37
 2577 052e 07       		.byte	0x7
 2578 052f 70       		.byte	0x70
 2579 0530 53050000 		.4byte	0x553
 2580 0534 0D       		.uleb128 0xd
 2581 0535 37010000 		.4byte	.LASF108
 2582 0539 00       		.byte	0
 2583 053a 0D       		.uleb128 0xd
 2584 053b 860F0000 		.4byte	.LASF109
 2585 053f 01       		.byte	0x1
 2586 0540 0D       		.uleb128 0xd
 2587 0541 410E0000 		.4byte	.LASF110
 2588 0545 02       		.byte	0x2
 2589 0546 0D       		.uleb128 0xd
 2590 0547 8C110000 		.4byte	.LASF111
 2591 054b 03       		.byte	0x3
 2592 054c 0D       		.uleb128 0xd
 2593 054d 990C0000 		.4byte	.LASF112
 2594 0551 04       		.byte	0x4
 2595 0552 00       		.byte	0
 2596 0553 03       		.uleb128 0x3
 2597 0554 13090000 		.4byte	.LASF113
 2598 0558 07       		.byte	0x7
 2599 0559 76       		.byte	0x76
 2600 055a 28050000 		.4byte	0x528
 2601 055e 09       		.uleb128 0x9
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 108


 2602 055f 14       		.byte	0x14
 2603 0560 07       		.byte	0x7
 2604 0561 AD       		.byte	0xad
 2605 0562 1D060000 		.4byte	0x61d
 2606 0566 0A       		.uleb128 0xa
 2607 0567 93080000 		.4byte	.LASF114
 2608 056b 07       		.byte	0x7
 2609 056c B2       		.byte	0xb2
 2610 056d B9000000 		.4byte	0xb9
 2611 0571 00       		.byte	0
 2612 0572 0A       		.uleb128 0xa
 2613 0573 96100000 		.4byte	.LASF115
 2614 0577 07       		.byte	0x7
 2615 0578 B7       		.byte	0xb7
 2616 0579 1B010000 		.4byte	0x11b
 2617 057d 02       		.byte	0x2
 2618 057e 0A       		.uleb128 0xa
 2619 057f CA070000 		.4byte	.LASF116
 2620 0583 07       		.byte	0x7
 2621 0584 BC       		.byte	0xbc
 2622 0585 AD000000 		.4byte	0xad
 2623 0589 04       		.byte	0x4
 2624 058a 0A       		.uleb128 0xa
 2625 058b F80A0000 		.4byte	.LASF117
 2626 058f 07       		.byte	0x7
 2627 0590 C1       		.byte	0xc1
 2628 0591 AD000000 		.4byte	0xad
 2629 0595 05       		.byte	0x5
 2630 0596 0A       		.uleb128 0xa
 2631 0597 C8060000 		.4byte	.LASF118
 2632 059b 07       		.byte	0x7
 2633 059c C7       		.byte	0xc7
 2634 059d AD000000 		.4byte	0xad
 2635 05a1 06       		.byte	0x6
 2636 05a2 0A       		.uleb128 0xa
 2637 05a3 390A0000 		.4byte	.LASF119
 2638 05a7 07       		.byte	0x7
 2639 05a8 CD       		.byte	0xcd
 2640 05a9 AD000000 		.4byte	0xad
 2641 05ad 07       		.byte	0x7
 2642 05ae 0A       		.uleb128 0xa
 2643 05af 36070000 		.4byte	.LASF120
 2644 05b3 07       		.byte	0x7
 2645 05b4 D4       		.byte	0xd4
 2646 05b5 27010000 		.4byte	0x127
 2647 05b9 08       		.byte	0x8
 2648 05ba 0A       		.uleb128 0xa
 2649 05bb 1B100000 		.4byte	.LASF121
 2650 05bf 07       		.byte	0x7
 2651 05c0 DB       		.byte	0xdb
 2652 05c1 1D060000 		.4byte	0x61d
 2653 05c5 09       		.byte	0x9
 2654 05c6 0A       		.uleb128 0xa
 2655 05c7 FE0E0000 		.4byte	.LASF122
 2656 05cb 07       		.byte	0x7
 2657 05cc E2       		.byte	0xe2
 2658 05cd 1D060000 		.4byte	0x61d
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 109


 2659 05d1 0A       		.byte	0xa
 2660 05d2 0A       		.uleb128 0xa
 2661 05d3 6B070000 		.4byte	.LASF123
 2662 05d7 07       		.byte	0x7
 2663 05d8 E7       		.byte	0xe7
 2664 05d9 AD000000 		.4byte	0xad
 2665 05dd 0B       		.byte	0xb
 2666 05de 0A       		.uleb128 0xa
 2667 05df ED110000 		.4byte	.LASF124
 2668 05e3 07       		.byte	0x7
 2669 05e4 EF       		.byte	0xef
 2670 05e5 B9000000 		.4byte	0xb9
 2671 05e9 0C       		.byte	0xc
 2672 05ea 0A       		.uleb128 0xa
 2673 05eb 89080000 		.4byte	.LASF125
 2674 05ef 07       		.byte	0x7
 2675 05f0 F6       		.byte	0xf6
 2676 05f1 B9000000 		.4byte	0xb9
 2677 05f5 0E       		.byte	0xe
 2678 05f6 0A       		.uleb128 0xa
 2679 05f7 3C0D0000 		.4byte	.LASF126
 2680 05fb 07       		.byte	0x7
 2681 05fc FB       		.byte	0xfb
 2682 05fd AD000000 		.4byte	0xad
 2683 0601 10       		.byte	0x10
 2684 0602 0B       		.uleb128 0xb
 2685 0603 ED070000 		.4byte	.LASF127
 2686 0607 07       		.byte	0x7
 2687 0608 0001     		.2byte	0x100
 2688 060a AD000000 		.4byte	0xad
 2689 060e 11       		.byte	0x11
 2690 060f 0B       		.uleb128 0xb
 2691 0610 800B0000 		.4byte	.LASF128
 2692 0614 07       		.byte	0x7
 2693 0615 0601     		.2byte	0x106
 2694 0617 AD000000 		.4byte	0xad
 2695 061b 12       		.byte	0x12
 2696 061c 00       		.byte	0
 2697 061d 0E       		.uleb128 0xe
 2698 061e AD000000 		.4byte	0xad
 2699 0622 2D060000 		.4byte	0x62d
 2700 0626 0F       		.uleb128 0xf
 2701 0627 2D060000 		.4byte	0x62d
 2702 062b 00       		.byte	0
 2703 062c 00       		.byte	0
 2704 062d 02       		.uleb128 0x2
 2705 062e 04       		.byte	0x4
 2706 062f 07       		.byte	0x7
 2707 0630 5D0D0000 		.4byte	.LASF129
 2708 0634 05       		.uleb128 0x5
 2709 0635 440B0000 		.4byte	.LASF130
 2710 0639 07       		.byte	0x7
 2711 063a 0701     		.2byte	0x107
 2712 063c 5E050000 		.4byte	0x55e
 2713 0640 10       		.uleb128 0x10
 2714 0641 18       		.byte	0x18
 2715 0642 07       		.byte	0x7
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 110


 2716 0643 0C01     		.2byte	0x10c
 2717 0645 27070000 		.4byte	0x727
 2718 0649 0B       		.uleb128 0xb
 2719 064a 93080000 		.4byte	.LASF114
 2720 064e 07       		.byte	0x7
 2721 064f 1101     		.2byte	0x111
 2722 0651 B9000000 		.4byte	0xb9
 2723 0655 00       		.byte	0
 2724 0656 0B       		.uleb128 0xb
 2725 0657 96100000 		.4byte	.LASF115
 2726 065b 07       		.byte	0x7
 2727 065c 1601     		.2byte	0x116
 2728 065e 1B010000 		.4byte	0x11b
 2729 0662 02       		.byte	0x2
 2730 0663 0B       		.uleb128 0xb
 2731 0664 CA070000 		.4byte	.LASF116
 2732 0668 07       		.byte	0x7
 2733 0669 1B01     		.2byte	0x11b
 2734 066b AD000000 		.4byte	0xad
 2735 066f 04       		.byte	0x4
 2736 0670 0B       		.uleb128 0xb
 2737 0671 F80A0000 		.4byte	.LASF117
 2738 0675 07       		.byte	0x7
 2739 0676 2001     		.2byte	0x120
 2740 0678 AD000000 		.4byte	0xad
 2741 067c 05       		.byte	0x5
 2742 067d 0B       		.uleb128 0xb
 2743 067e C8060000 		.4byte	.LASF118
 2744 0682 07       		.byte	0x7
 2745 0683 2601     		.2byte	0x126
 2746 0685 AD000000 		.4byte	0xad
 2747 0689 06       		.byte	0x6
 2748 068a 0B       		.uleb128 0xb
 2749 068b 390A0000 		.4byte	.LASF119
 2750 068f 07       		.byte	0x7
 2751 0690 2C01     		.2byte	0x12c
 2752 0692 AD000000 		.4byte	0xad
 2753 0696 07       		.byte	0x7
 2754 0697 0B       		.uleb128 0xb
 2755 0698 36070000 		.4byte	.LASF120
 2756 069c 07       		.byte	0x7
 2757 069d 3301     		.2byte	0x133
 2758 069f 27010000 		.4byte	0x127
 2759 06a3 08       		.byte	0x8
 2760 06a4 0B       		.uleb128 0xb
 2761 06a5 1B100000 		.4byte	.LASF121
 2762 06a9 07       		.byte	0x7
 2763 06aa 3A01     		.2byte	0x13a
 2764 06ac 1D060000 		.4byte	0x61d
 2765 06b0 09       		.byte	0x9
 2766 06b1 0B       		.uleb128 0xb
 2767 06b2 FE0E0000 		.4byte	.LASF122
 2768 06b6 07       		.byte	0x7
 2769 06b7 4101     		.2byte	0x141
 2770 06b9 1D060000 		.4byte	0x61d
 2771 06bd 0A       		.byte	0xa
 2772 06be 0B       		.uleb128 0xb
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 111


 2773 06bf 6B070000 		.4byte	.LASF123
 2774 06c3 07       		.byte	0x7
 2775 06c4 4601     		.2byte	0x146
 2776 06c6 AD000000 		.4byte	0xad
 2777 06ca 0B       		.byte	0xb
 2778 06cb 0B       		.uleb128 0xb
 2779 06cc ED110000 		.4byte	.LASF124
 2780 06d0 07       		.byte	0x7
 2781 06d1 4E01     		.2byte	0x14e
 2782 06d3 B9000000 		.4byte	0xb9
 2783 06d7 0C       		.byte	0xc
 2784 06d8 0B       		.uleb128 0xb
 2785 06d9 89080000 		.4byte	.LASF125
 2786 06dd 07       		.byte	0x7
 2787 06de 5501     		.2byte	0x155
 2788 06e0 B9000000 		.4byte	0xb9
 2789 06e4 0E       		.byte	0xe
 2790 06e5 0B       		.uleb128 0xb
 2791 06e6 3C0D0000 		.4byte	.LASF126
 2792 06ea 07       		.byte	0x7
 2793 06eb 5A01     		.2byte	0x15a
 2794 06ed AD000000 		.4byte	0xad
 2795 06f1 10       		.byte	0x10
 2796 06f2 0B       		.uleb128 0xb
 2797 06f3 ED070000 		.4byte	.LASF127
 2798 06f7 07       		.byte	0x7
 2799 06f8 5F01     		.2byte	0x15f
 2800 06fa AD000000 		.4byte	0xad
 2801 06fe 11       		.byte	0x11
 2802 06ff 0B       		.uleb128 0xb
 2803 0700 800B0000 		.4byte	.LASF128
 2804 0704 07       		.byte	0x7
 2805 0705 6501     		.2byte	0x165
 2806 0707 AD000000 		.4byte	0xad
 2807 070b 12       		.byte	0x12
 2808 070c 0B       		.uleb128 0xb
 2809 070d 20110000 		.4byte	.LASF131
 2810 0711 07       		.byte	0x7
 2811 0712 6A01     		.2byte	0x16a
 2812 0714 B9000000 		.4byte	0xb9
 2813 0718 14       		.byte	0x14
 2814 0719 0B       		.uleb128 0xb
 2815 071a 25110000 		.4byte	.LASF132
 2816 071e 07       		.byte	0x7
 2817 071f 6F01     		.2byte	0x16f
 2818 0721 B9000000 		.4byte	0xb9
 2819 0725 16       		.byte	0x16
 2820 0726 00       		.byte	0
 2821 0727 05       		.uleb128 0x5
 2822 0728 140E0000 		.4byte	.LASF133
 2823 072c 07       		.byte	0x7
 2824 072d 7001     		.2byte	0x170
 2825 072f 40060000 		.4byte	0x640
 2826 0733 10       		.uleb128 0x10
 2827 0734 18       		.byte	0x18
 2828 0735 07       		.byte	0x7
 2829 0736 7601     		.2byte	0x176
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 112


 2830 0738 4A070000 		.4byte	0x74a
 2831 073c 0B       		.uleb128 0xb
 2832 073d 84050000 		.4byte	.LASF134
 2833 0741 07       		.byte	0x7
 2834 0742 7B01     		.2byte	0x17b
 2835 0744 27070000 		.4byte	0x727
 2836 0748 00       		.byte	0
 2837 0749 00       		.byte	0
 2838 074a 05       		.uleb128 0x5
 2839 074b 780E0000 		.4byte	.LASF135
 2840 074f 07       		.byte	0x7
 2841 0750 7C01     		.2byte	0x17c
 2842 0752 33070000 		.4byte	0x733
 2843 0756 10       		.uleb128 0x10
 2844 0757 0A       		.byte	0xa
 2845 0758 07       		.byte	0x7
 2846 0759 8201     		.2byte	0x182
 2847 075b AE070000 		.4byte	0x7ae
 2848 075f 11       		.uleb128 0x11
 2849 0760 72617700 		.ascii	"raw\000"
 2850 0764 07       		.byte	0x7
 2851 0765 8701     		.2byte	0x187
 2852 0767 AE070000 		.4byte	0x7ae
 2853 076b 00       		.byte	0
 2854 076c 0B       		.uleb128 0xb
 2855 076d 760B0000 		.4byte	.LASF136
 2856 0771 07       		.byte	0x7
 2857 0772 8C01     		.2byte	0x18c
 2858 0774 AE070000 		.4byte	0x7ae
 2859 0778 02       		.byte	0x2
 2860 0779 0B       		.uleb128 0xb
 2861 077a 9F100000 		.4byte	.LASF137
 2862 077e 07       		.byte	0x7
 2863 077f 9201     		.2byte	0x192
 2864 0781 1D060000 		.4byte	0x61d
 2865 0785 04       		.byte	0x4
 2866 0786 0B       		.uleb128 0xb
 2867 0787 0F0E0000 		.4byte	.LASF138
 2868 078b 07       		.byte	0x7
 2869 078c 9701     		.2byte	0x197
 2870 078e 1B010000 		.4byte	0x11b
 2871 0792 06       		.byte	0x6
 2872 0793 0B       		.uleb128 0xb
 2873 0794 2B130000 		.4byte	.LASF139
 2874 0798 07       		.byte	0x7
 2875 0799 9C01     		.2byte	0x19c
 2876 079b BE070000 		.4byte	0x7be
 2877 079f 08       		.byte	0x8
 2878 07a0 0B       		.uleb128 0xb
 2879 07a1 66090000 		.4byte	.LASF140
 2880 07a5 07       		.byte	0x7
 2881 07a6 A101     		.2byte	0x1a1
 2882 07a8 1D060000 		.4byte	0x61d
 2883 07ac 09       		.byte	0x9
 2884 07ad 00       		.byte	0
 2885 07ae 0E       		.uleb128 0xe
 2886 07af B9000000 		.4byte	0xb9
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 113


 2887 07b3 BE070000 		.4byte	0x7be
 2888 07b7 0F       		.uleb128 0xf
 2889 07b8 2D060000 		.4byte	0x62d
 2890 07bc 00       		.byte	0
 2891 07bd 00       		.byte	0
 2892 07be 0E       		.uleb128 0xe
 2893 07bf 27010000 		.4byte	0x127
 2894 07c3 CE070000 		.4byte	0x7ce
 2895 07c7 0F       		.uleb128 0xf
 2896 07c8 2D060000 		.4byte	0x62d
 2897 07cc 00       		.byte	0
 2898 07cd 00       		.byte	0
 2899 07ce 05       		.uleb128 0x5
 2900 07cf 3C060000 		.4byte	.LASF141
 2901 07d3 07       		.byte	0x7
 2902 07d4 A201     		.2byte	0x1a2
 2903 07d6 56070000 		.4byte	0x756
 2904 07da 10       		.uleb128 0x10
 2905 07db 8C       		.byte	0x8c
 2906 07dc 07       		.byte	0x7
 2907 07dd A801     		.2byte	0x1a8
 2908 07df F1070000 		.4byte	0x7f1
 2909 07e3 0B       		.uleb128 0xb
 2910 07e4 84050000 		.4byte	.LASF134
 2911 07e8 07       		.byte	0x7
 2912 07e9 AD01     		.2byte	0x1ad
 2913 07eb F1070000 		.4byte	0x7f1
 2914 07ef 00       		.byte	0
 2915 07f0 00       		.byte	0
 2916 07f1 0E       		.uleb128 0xe
 2917 07f2 CE070000 		.4byte	0x7ce
 2918 07f6 01080000 		.4byte	0x801
 2919 07fa 0F       		.uleb128 0xf
 2920 07fb 2D060000 		.4byte	0x62d
 2921 07ff 0D       		.byte	0xd
 2922 0800 00       		.byte	0
 2923 0801 05       		.uleb128 0x5
 2924 0802 0B140000 		.4byte	.LASF142
 2925 0806 07       		.byte	0x7
 2926 0807 AE01     		.2byte	0x1ae
 2927 0809 DA070000 		.4byte	0x7da
 2928 080d 12       		.uleb128 0x12
 2929 080e 2801     		.2byte	0x128
 2930 0810 07       		.byte	0x7
 2931 0811 B401     		.2byte	0x1b4
 2932 0813 3E090000 		.4byte	0x93e
 2933 0817 0B       		.uleb128 0xb
 2934 0818 E30C0000 		.4byte	.LASF143
 2935 081c 07       		.byte	0x7
 2936 081d BB01     		.2byte	0x1bb
 2937 081f B9000000 		.4byte	0xb9
 2938 0823 00       		.byte	0
 2939 0824 0B       		.uleb128 0xb
 2940 0825 6B130000 		.4byte	.LASF144
 2941 0829 07       		.byte	0x7
 2942 082a C001     		.2byte	0x1c0
 2943 082c B9000000 		.4byte	0xb9
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 114


 2944 0830 02       		.byte	0x2
 2945 0831 0B       		.uleb128 0xb
 2946 0832 9D010000 		.4byte	.LASF145
 2947 0836 07       		.byte	0x7
 2948 0837 C501     		.2byte	0x1c5
 2949 0839 B9000000 		.4byte	0xb9
 2950 083d 04       		.byte	0x4
 2951 083e 0B       		.uleb128 0xb
 2952 083f 380E0000 		.4byte	.LASF146
 2953 0843 07       		.byte	0x7
 2954 0844 CB01     		.2byte	0x1cb
 2955 0846 B9000000 		.4byte	0xb9
 2956 084a 06       		.byte	0x6
 2957 084b 0B       		.uleb128 0xb
 2958 084c 91010000 		.4byte	.LASF147
 2959 0850 07       		.byte	0x7
 2960 0851 D001     		.2byte	0x1d0
 2961 0853 B9000000 		.4byte	0xb9
 2962 0857 08       		.byte	0x8
 2963 0858 0B       		.uleb128 0xb
 2964 0859 A6080000 		.4byte	.LASF148
 2965 085d 07       		.byte	0x7
 2966 085e D501     		.2byte	0x1d5
 2967 0860 03010000 		.4byte	0x103
 2968 0864 0C       		.byte	0xc
 2969 0865 0B       		.uleb128 0xb
 2970 0866 040E0000 		.4byte	.LASF149
 2971 086a 07       		.byte	0x7
 2972 086b DB01     		.2byte	0x1db
 2973 086d 3E090000 		.4byte	0x93e
 2974 0871 10       		.byte	0x10
 2975 0872 0B       		.uleb128 0xb
 2976 0873 3A0F0000 		.4byte	.LASF150
 2977 0877 07       		.byte	0x7
 2978 0878 E201     		.2byte	0x1e2
 2979 087a 3E090000 		.4byte	0x93e
 2980 087e 14       		.byte	0x14
 2981 087f 0B       		.uleb128 0xb
 2982 0880 180D0000 		.4byte	.LASF151
 2983 0884 07       		.byte	0x7
 2984 0885 F201     		.2byte	0x1f2
 2985 0887 AE070000 		.4byte	0x7ae
 2986 088b 18       		.byte	0x18
 2987 088c 0B       		.uleb128 0xb
 2988 088d 010B0000 		.4byte	.LASF152
 2989 0891 07       		.byte	0x7
 2990 0892 F801     		.2byte	0x1f8
 2991 0894 B9000000 		.4byte	0xb9
 2992 0898 1A       		.byte	0x1a
 2993 0899 0B       		.uleb128 0xb
 2994 089a 32060000 		.4byte	.LASF153
 2995 089e 07       		.byte	0x7
 2996 089f FD01     		.2byte	0x1fd
 2997 08a1 AD000000 		.4byte	0xad
 2998 08a5 1C       		.byte	0x1c
 2999 08a6 0B       		.uleb128 0xb
 3000 08a7 630A0000 		.4byte	.LASF154
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 115


 3001 08ab 07       		.byte	0x7
 3002 08ac 0202     		.2byte	0x202
 3003 08ae 4A070000 		.4byte	0x74a
 3004 08b2 1E       		.byte	0x1e
 3005 08b3 0B       		.uleb128 0xb
 3006 08b4 22050000 		.4byte	.LASF155
 3007 08b8 07       		.byte	0x7
 3008 08b9 0702     		.2byte	0x207
 3009 08bb 01080000 		.4byte	0x801
 3010 08bf 36       		.byte	0x36
 3011 08c0 0B       		.uleb128 0xb
 3012 08c1 0A110000 		.4byte	.LASF156
 3013 08c5 07       		.byte	0x7
 3014 08c6 0C02     		.2byte	0x20c
 3015 08c8 DA040000 		.4byte	0x4da
 3016 08cc C2       		.byte	0xc2
 3017 08cd 13       		.uleb128 0x13
 3018 08ce B1030000 		.4byte	.LASF157
 3019 08d2 07       		.byte	0x7
 3020 08d3 1102     		.2byte	0x211
 3021 08d5 C5000000 		.4byte	0xc5
 3022 08d9 1801     		.2byte	0x118
 3023 08db 13       		.uleb128 0x13
 3024 08dc E3110000 		.4byte	.LASF158
 3025 08e0 07       		.byte	0x7
 3026 08e1 1602     		.2byte	0x216
 3027 08e3 C5000000 		.4byte	0xc5
 3028 08e7 1C01     		.2byte	0x11c
 3029 08e9 13       		.uleb128 0x13
 3030 08ea F9000000 		.4byte	.LASF159
 3031 08ee 07       		.byte	0x7
 3032 08ef 1B02     		.2byte	0x21b
 3033 08f1 AD000000 		.4byte	0xad
 3034 08f5 2001     		.2byte	0x120
 3035 08f7 13       		.uleb128 0x13
 3036 08f8 A7050000 		.4byte	.LASF160
 3037 08fc 07       		.byte	0x7
 3038 08fd 2002     		.2byte	0x220
 3039 08ff AD000000 		.4byte	0xad
 3040 0903 2101     		.2byte	0x121
 3041 0905 13       		.uleb128 0x13
 3042 0906 D00C0000 		.4byte	.LASF161
 3043 090a 07       		.byte	0x7
 3044 090b 2502     		.2byte	0x225
 3045 090d B9000000 		.4byte	0xb9
 3046 0911 2201     		.2byte	0x122
 3047 0913 13       		.uleb128 0x13
 3048 0914 E80A0000 		.4byte	.LASF162
 3049 0918 07       		.byte	0x7
 3050 0919 2A02     		.2byte	0x22a
 3051 091b AE070000 		.4byte	0x7ae
 3052 091f 2401     		.2byte	0x124
 3053 0921 13       		.uleb128 0x13
 3054 0922 B6100000 		.4byte	.LASF163
 3055 0926 07       		.byte	0x7
 3056 0927 2F02     		.2byte	0x22f
 3057 0929 AD000000 		.4byte	0xad
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 116


 3058 092d 2601     		.2byte	0x126
 3059 092f 13       		.uleb128 0x13
 3060 0930 48110000 		.4byte	.LASF164
 3061 0934 07       		.byte	0x7
 3062 0935 3402     		.2byte	0x234
 3063 0937 AD000000 		.4byte	0xad
 3064 093b 2701     		.2byte	0x127
 3065 093d 00       		.byte	0
 3066 093e 0E       		.uleb128 0xe
 3067 093f C5000000 		.4byte	0xc5
 3068 0943 4E090000 		.4byte	0x94e
 3069 0947 0F       		.uleb128 0xf
 3070 0948 2D060000 		.4byte	0x62d
 3071 094c 00       		.byte	0
 3072 094d 00       		.byte	0
 3073 094e 05       		.uleb128 0x5
 3074 094f CD0D0000 		.4byte	.LASF165
 3075 0953 07       		.byte	0x7
 3076 0954 3502     		.2byte	0x235
 3077 0956 0D080000 		.4byte	0x80d
 3078 095a 10       		.uleb128 0x10
 3079 095b 1C       		.byte	0x1c
 3080 095c 07       		.byte	0x7
 3081 095d 3B02     		.2byte	0x23b
 3082 095f D9090000 		.4byte	0x9d9
 3083 0963 0B       		.uleb128 0xb
 3084 0964 8A0B0000 		.4byte	.LASF166
 3085 0968 07       		.byte	0x7
 3086 0969 4002     		.2byte	0x240
 3087 096b D9090000 		.4byte	0x9d9
 3088 096f 00       		.byte	0
 3089 0970 0B       		.uleb128 0xb
 3090 0971 6F090000 		.4byte	.LASF167
 3091 0975 07       		.byte	0x7
 3092 0976 4502     		.2byte	0x245
 3093 0978 D9090000 		.4byte	0x9d9
 3094 097c 04       		.byte	0x4
 3095 097d 0B       		.uleb128 0xb
 3096 097e 78060000 		.4byte	.LASF168
 3097 0982 07       		.byte	0x7
 3098 0983 4A02     		.2byte	0x24a
 3099 0985 D9090000 		.4byte	0x9d9
 3100 0989 08       		.byte	0x8
 3101 098a 0B       		.uleb128 0xb
 3102 098b 5D0E0000 		.4byte	.LASF169
 3103 098f 07       		.byte	0x7
 3104 0990 4F02     		.2byte	0x24f
 3105 0992 D9090000 		.4byte	0x9d9
 3106 0996 0C       		.byte	0xc
 3107 0997 0B       		.uleb128 0xb
 3108 0998 D9110000 		.4byte	.LASF170
 3109 099c 07       		.byte	0x7
 3110 099d 5402     		.2byte	0x254
 3111 099f C5000000 		.4byte	0xc5
 3112 09a3 10       		.byte	0x10
 3113 09a4 0B       		.uleb128 0xb
 3114 09a5 C90B0000 		.4byte	.LASF171
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 117


 3115 09a9 07       		.byte	0x7
 3116 09aa 5902     		.2byte	0x259
 3117 09ac C5000000 		.4byte	0xc5
 3118 09b0 14       		.byte	0x14
 3119 09b1 0B       		.uleb128 0xb
 3120 09b2 55080000 		.4byte	.LASF172
 3121 09b6 07       		.byte	0x7
 3122 09b7 5E02     		.2byte	0x25e
 3123 09b9 AD000000 		.4byte	0xad
 3124 09bd 18       		.byte	0x18
 3125 09be 0B       		.uleb128 0xb
 3126 09bf F20F0000 		.4byte	.LASF173
 3127 09c3 07       		.byte	0x7
 3128 09c4 6302     		.2byte	0x263
 3129 09c6 AD000000 		.4byte	0xad
 3130 09ca 19       		.byte	0x19
 3131 09cb 0B       		.uleb128 0xb
 3132 09cc 41040000 		.4byte	.LASF174
 3133 09d0 07       		.byte	0x7
 3134 09d1 6802     		.2byte	0x268
 3135 09d3 AD000000 		.4byte	0xad
 3136 09d7 1A       		.byte	0x1a
 3137 09d8 00       		.byte	0
 3138 09d9 07       		.uleb128 0x7
 3139 09da 04       		.byte	0x4
 3140 09db F7000000 		.4byte	0xf7
 3141 09df 05       		.uleb128 0x5
 3142 09e0 8E050000 		.4byte	.LASF175
 3143 09e4 07       		.byte	0x7
 3144 09e5 6902     		.2byte	0x269
 3145 09e7 5A090000 		.4byte	0x95a
 3146 09eb 10       		.uleb128 0x10
 3147 09ec 34       		.byte	0x34
 3148 09ed 07       		.byte	0x7
 3149 09ee 9C02     		.2byte	0x29c
 3150 09f0 C50A0000 		.4byte	0xac5
 3151 09f4 0B       		.uleb128 0xb
 3152 09f5 800A0000 		.4byte	.LASF176
 3153 09f9 07       		.byte	0x7
 3154 09fa A502     		.2byte	0x2a5
 3155 09fc C50A0000 		.4byte	0xac5
 3156 0a00 00       		.byte	0
 3157 0a01 0B       		.uleb128 0xb
 3158 0a02 57110000 		.4byte	.LASF177
 3159 0a06 07       		.byte	0x7
 3160 0a07 AC02     		.2byte	0x2ac
 3161 0a09 CC0A0000 		.4byte	0xacc
 3162 0a0d 04       		.byte	0x4
 3163 0a0e 0B       		.uleb128 0xb
 3164 0a0f EC0C0000 		.4byte	.LASF178
 3165 0a13 07       		.byte	0x7
 3166 0a14 B202     		.2byte	0x2b2
 3167 0a16 CE0A0000 		.4byte	0xace
 3168 0a1a 08       		.byte	0x8
 3169 0a1b 0B       		.uleb128 0xb
 3170 0a1c 9A0B0000 		.4byte	.LASF179
 3171 0a20 07       		.byte	0x7
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 118


 3172 0a21 B802     		.2byte	0x2b8
 3173 0a23 CC0A0000 		.4byte	0xacc
 3174 0a27 0C       		.byte	0xc
 3175 0a28 0B       		.uleb128 0xb
 3176 0a29 4F100000 		.4byte	.LASF180
 3177 0a2d 07       		.byte	0x7
 3178 0a2e BF02     		.2byte	0x2bf
 3179 0a30 D40A0000 		.4byte	0xad4
 3180 0a34 10       		.byte	0x10
 3181 0a35 0B       		.uleb128 0xb
 3182 0a36 13110000 		.4byte	.LASF181
 3183 0a3a 07       		.byte	0x7
 3184 0a3b C402     		.2byte	0x2c4
 3185 0a3d C5000000 		.4byte	0xc5
 3186 0a41 14       		.byte	0x14
 3187 0a42 0B       		.uleb128 0xb
 3188 0a43 90070000 		.4byte	.LASF182
 3189 0a47 07       		.byte	0x7
 3190 0a48 CB02     		.2byte	0x2cb
 3191 0a4a B9000000 		.4byte	0xb9
 3192 0a4e 18       		.byte	0x18
 3193 0a4f 0B       		.uleb128 0xb
 3194 0a50 C2050000 		.4byte	.LASF183
 3195 0a54 07       		.byte	0x7
 3196 0a55 D202     		.2byte	0x2d2
 3197 0a57 AD000000 		.4byte	0xad
 3198 0a5b 1A       		.byte	0x1a
 3199 0a5c 0B       		.uleb128 0xb
 3200 0a5d 99090000 		.4byte	.LASF184
 3201 0a61 07       		.byte	0x7
 3202 0a62 DC02     		.2byte	0x2dc
 3203 0a64 AD000000 		.4byte	0xad
 3204 0a68 1B       		.byte	0x1b
 3205 0a69 0B       		.uleb128 0xb
 3206 0a6a A9110000 		.4byte	.LASF185
 3207 0a6e 07       		.byte	0x7
 3208 0a6f E402     		.2byte	0x2e4
 3209 0a71 AD000000 		.4byte	0xad
 3210 0a75 1C       		.byte	0x1c
 3211 0a76 0B       		.uleb128 0xb
 3212 0a77 660D0000 		.4byte	.LASF186
 3213 0a7b 07       		.byte	0x7
 3214 0a7c E902     		.2byte	0x2e9
 3215 0a7e B9000000 		.4byte	0xb9
 3216 0a82 1E       		.byte	0x1e
 3217 0a83 0B       		.uleb128 0xb
 3218 0a84 74130000 		.4byte	.LASF187
 3219 0a88 07       		.byte	0x7
 3220 0a89 EE02     		.2byte	0x2ee
 3221 0a8b B9000000 		.4byte	0xb9
 3222 0a8f 20       		.byte	0x20
 3223 0a90 0B       		.uleb128 0xb
 3224 0a91 82100000 		.4byte	.LASF188
 3225 0a95 07       		.byte	0x7
 3226 0a96 F702     		.2byte	0x2f7
 3227 0a98 C5000000 		.4byte	0xc5
 3228 0a9c 24       		.byte	0x24
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 119


 3229 0a9d 0B       		.uleb128 0xb
 3230 0a9e 490D0000 		.4byte	.LASF189
 3231 0aa2 07       		.byte	0x7
 3232 0aa3 0003     		.2byte	0x300
 3233 0aa5 C5000000 		.4byte	0xc5
 3234 0aa9 28       		.byte	0x28
 3235 0aaa 0B       		.uleb128 0xb
 3236 0aab A7100000 		.4byte	.LASF190
 3237 0aaf 07       		.byte	0x7
 3238 0ab0 0703     		.2byte	0x307
 3239 0ab2 CC0A0000 		.4byte	0xacc
 3240 0ab6 2C       		.byte	0x2c
 3241 0ab7 0B       		.uleb128 0xb
 3242 0ab8 55030000 		.4byte	.LASF191
 3243 0abc 07       		.byte	0x7
 3244 0abd 0C03     		.2byte	0x30c
 3245 0abf AD000000 		.4byte	0xad
 3246 0ac3 30       		.byte	0x30
 3247 0ac4 00       		.byte	0
 3248 0ac5 07       		.uleb128 0x7
 3249 0ac6 04       		.byte	0x4
 3250 0ac7 CB0A0000 		.4byte	0xacb
 3251 0acb 14       		.uleb128 0x14
 3252 0acc 15       		.uleb128 0x15
 3253 0acd 04       		.byte	0x4
 3254 0ace 07       		.uleb128 0x7
 3255 0acf 04       		.byte	0x4
 3256 0ad0 CE070000 		.4byte	0x7ce
 3257 0ad4 07       		.uleb128 0x7
 3258 0ad5 04       		.byte	0x4
 3259 0ad6 AD000000 		.4byte	0xad
 3260 0ada 05       		.uleb128 0x5
 3261 0adb FD060000 		.4byte	.LASF192
 3262 0adf 07       		.byte	0x7
 3263 0ae0 0D03     		.2byte	0x30d
 3264 0ae2 EB090000 		.4byte	0x9eb
 3265 0ae6 10       		.uleb128 0x10
 3266 0ae7 34       		.byte	0x34
 3267 0ae8 07       		.byte	0x7
 3268 0ae9 1303     		.2byte	0x313
 3269 0aeb FD0A0000 		.4byte	0xafd
 3270 0aef 0B       		.uleb128 0xb
 3271 0af0 50140000 		.4byte	.LASF193
 3272 0af4 07       		.byte	0x7
 3273 0af5 1803     		.2byte	0x318
 3274 0af7 FD0A0000 		.4byte	0xafd
 3275 0afb 00       		.byte	0
 3276 0afc 00       		.byte	0
 3277 0afd 0E       		.uleb128 0xe
 3278 0afe DA0A0000 		.4byte	0xada
 3279 0b02 0D0B0000 		.4byte	0xb0d
 3280 0b06 0F       		.uleb128 0xf
 3281 0b07 2D060000 		.4byte	0x62d
 3282 0b0b 00       		.byte	0
 3283 0b0c 00       		.byte	0
 3284 0b0d 05       		.uleb128 0x5
 3285 0b0e 8D0A0000 		.4byte	.LASF194
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 120


 3286 0b12 07       		.byte	0x7
 3287 0b13 1903     		.2byte	0x319
 3288 0b15 E60A0000 		.4byte	0xae6
 3289 0b19 02       		.uleb128 0x2
 3290 0b1a 08       		.byte	0x8
 3291 0b1b 04       		.byte	0x4
 3292 0b1c B50C0000 		.4byte	.LASF195
 3293 0b20 0C       		.uleb128 0xc
 3294 0b21 01       		.byte	0x1
 3295 0b22 37000000 		.4byte	0x37
 3296 0b26 08       		.byte	0x8
 3297 0b27 43       		.byte	0x43
 3298 0b28 4B0B0000 		.4byte	0xb4b
 3299 0b2c 0D       		.uleb128 0xd
 3300 0b2d 6C0A0000 		.4byte	.LASF196
 3301 0b31 00       		.byte	0
 3302 0b32 0D       		.uleb128 0xd
 3303 0b33 C6080000 		.4byte	.LASF197
 3304 0b37 01       		.byte	0x1
 3305 0b38 0D       		.uleb128 0xd
 3306 0b39 2D080000 		.4byte	.LASF198
 3307 0b3d 02       		.byte	0x2
 3308 0b3e 0D       		.uleb128 0xd
 3309 0b3f 8D130000 		.4byte	.LASF199
 3310 0b43 03       		.byte	0x3
 3311 0b44 0D       		.uleb128 0xd
 3312 0b45 11020000 		.4byte	.LASF200
 3313 0b49 04       		.byte	0x4
 3314 0b4a 00       		.byte	0
 3315 0b4b 03       		.uleb128 0x3
 3316 0b4c 120C0000 		.4byte	.LASF201
 3317 0b50 08       		.byte	0x8
 3318 0b51 49       		.byte	0x49
 3319 0b52 200B0000 		.4byte	0xb20
 3320 0b56 09       		.uleb128 0x9
 3321 0b57 08       		.byte	0x8
 3322 0b58 08       		.byte	0x8
 3323 0b59 CF       		.byte	0xcf
 3324 0b5a 770B0000 		.4byte	0xb77
 3325 0b5e 0A       		.uleb128 0xa
 3326 0b5f E20E0000 		.4byte	.LASF202
 3327 0b63 08       		.byte	0x8
 3328 0b64 D4       		.byte	0xd4
 3329 0b65 C5000000 		.4byte	0xc5
 3330 0b69 00       		.byte	0
 3331 0b6a 0A       		.uleb128 0xa
 3332 0b6b AA0B0000 		.4byte	.LASF203
 3333 0b6f 08       		.byte	0x8
 3334 0b70 D9       		.byte	0xd9
 3335 0b71 C5000000 		.4byte	0xc5
 3336 0b75 04       		.byte	0x4
 3337 0b76 00       		.byte	0
 3338 0b77 03       		.uleb128 0x3
 3339 0b78 7E060000 		.4byte	.LASF204
 3340 0b7c 08       		.byte	0x8
 3341 0b7d DA       		.byte	0xda
 3342 0b7e 560B0000 		.4byte	0xb56
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 121


 3343 0b82 16       		.uleb128 0x16
 3344 0b83 53070000 		.4byte	.LASF207
 3345 0b87 01       		.byte	0x1
 3346 0b88 3B0A     		.2byte	0xa3b
 3347 0b8a AD000000 		.4byte	0xad
 3348 0b8e 00000000 		.4byte	.LFB21
 3349 0b92 84000000 		.4byte	.LFE21-.LFB21
 3350 0b96 01       		.uleb128 0x1
 3351 0b97 9C       		.byte	0x9c
 3352 0b98 CD0B0000 		.4byte	0xbcd
 3353 0b9c 17       		.uleb128 0x17
 3354 0b9d 4F130000 		.4byte	.LASF205
 3355 0ba1 01       		.byte	0x1
 3356 0ba2 3B0A     		.2byte	0xa3b
 3357 0ba4 C5000000 		.4byte	0xc5
 3358 0ba8 00000000 		.4byte	.LLST0
 3359 0bac 17       		.uleb128 0x17
 3360 0bad 440A0000 		.4byte	.LASF206
 3361 0bb1 01       		.byte	0x1
 3362 0bb2 3B0A     		.2byte	0xa3b
 3363 0bb4 C5000000 		.4byte	0xc5
 3364 0bb8 2C000000 		.4byte	.LLST1
 3365 0bbc 18       		.uleb128 0x18
 3366 0bbd CB050000 		.4byte	.LASF209
 3367 0bc1 01       		.byte	0x1
 3368 0bc2 3D0A     		.2byte	0xa3d
 3369 0bc4 AD000000 		.4byte	0xad
 3370 0bc8 58000000 		.4byte	.LLST2
 3371 0bcc 00       		.byte	0
 3372 0bcd 16       		.uleb128 0x16
 3373 0bce 22040000 		.4byte	.LASF208
 3374 0bd2 01       		.byte	0x1
 3375 0bd3 870A     		.2byte	0xa87
 3376 0bd5 AD000000 		.4byte	0xad
 3377 0bd9 00000000 		.4byte	.LFB22
 3378 0bdd 42000000 		.4byte	.LFE22-.LFB22
 3379 0be1 01       		.uleb128 0x1
 3380 0be2 9C       		.byte	0x9c
 3381 0be3 380C0000 		.4byte	0xc38
 3382 0be7 17       		.uleb128 0x17
 3383 0be8 4F130000 		.4byte	.LASF205
 3384 0bec 01       		.byte	0x1
 3385 0bed 870A     		.2byte	0xa87
 3386 0bef C5000000 		.4byte	0xc5
 3387 0bf3 77000000 		.4byte	.LLST3
 3388 0bf7 17       		.uleb128 0x17
 3389 0bf8 CB050000 		.4byte	.LASF209
 3390 0bfc 01       		.byte	0x1
 3391 0bfd 870A     		.2byte	0xa87
 3392 0bff AD000000 		.4byte	0xad
 3393 0c03 BC000000 		.4byte	.LLST4
 3394 0c07 18       		.uleb128 0x18
 3395 0c08 C7020000 		.4byte	.LASF210
 3396 0c0c 01       		.byte	0x1
 3397 0c0d 890A     		.2byte	0xa89
 3398 0c0f C5000000 		.4byte	0xc5
 3399 0c13 F6000000 		.4byte	.LLST5
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 122


 3400 0c17 18       		.uleb128 0x18
 3401 0c18 A0020000 		.4byte	.LASF211
 3402 0c1c 01       		.byte	0x1
 3403 0c1d 8A0A     		.2byte	0xa8a
 3404 0c1f C5000000 		.4byte	0xc5
 3405 0c23 20010000 		.4byte	.LLST6
 3406 0c27 18       		.uleb128 0x18
 3407 0c28 77100000 		.4byte	.LASF212
 3408 0c2c 01       		.byte	0x1
 3409 0c2d 8B0A     		.2byte	0xa8b
 3410 0c2f C5000000 		.4byte	0xc5
 3411 0c33 49010000 		.4byte	.LLST7
 3412 0c37 00       		.byte	0
 3413 0c38 19       		.uleb128 0x19
 3414 0c39 D1020000 		.4byte	.LASF298
 3415 0c3d 01       		.byte	0x1
 3416 0c3e EC       		.byte	0xec
 3417 0c3f C5000000 		.4byte	0xc5
 3418 0c43 00000000 		.4byte	.LFB1
 3419 0c47 10000000 		.4byte	.LFE1-.LFB1
 3420 0c4b 01       		.uleb128 0x1
 3421 0c4c 9C       		.byte	0x9c
 3422 0c4d 1A       		.uleb128 0x1a
 3423 0c4e 630E0000 		.4byte	.LASF215
 3424 0c52 01       		.byte	0x1
 3425 0c53 1A01     		.2byte	0x11a
 3426 0c55 E6000000 		.4byte	0xe6
 3427 0c59 00000000 		.4byte	.LFB2
 3428 0c5d 40000000 		.4byte	.LFE2-.LFB2
 3429 0c61 01       		.uleb128 0x1
 3430 0c62 9C       		.byte	0x9c
 3431 0c63 910C0000 		.4byte	0xc91
 3432 0c67 17       		.uleb128 0x17
 3433 0c68 A9130000 		.4byte	.LASF213
 3434 0c6c 01       		.byte	0x1
 3435 0c6d 1A01     		.2byte	0x11a
 3436 0c6f C5000000 		.4byte	0xc5
 3437 0c73 5C010000 		.4byte	.LLST8
 3438 0c77 18       		.uleb128 0x18
 3439 0c78 80130000 		.4byte	.LASF214
 3440 0c7c 01       		.byte	0x1
 3441 0c7d 1C01     		.2byte	0x11c
 3442 0c7f E6000000 		.4byte	0xe6
 3443 0c83 7D010000 		.4byte	.LLST9
 3444 0c87 1B       		.uleb128 0x1b
 3445 0c88 38000000 		.4byte	.LVL27
 3446 0c8c D1160000 		.4byte	0x16d1
 3447 0c90 00       		.byte	0
 3448 0c91 1A       		.uleb128 0x1a
 3449 0c92 A30A0000 		.4byte	.LASF216
 3450 0c96 01       		.byte	0x1
 3451 0c97 6D01     		.2byte	0x16d
 3452 0c99 E6000000 		.4byte	0xe6
 3453 0c9d 00000000 		.4byte	.LFB3
 3454 0ca1 2C000000 		.4byte	.LFE3-.LFB3
 3455 0ca5 01       		.uleb128 0x1
 3456 0ca6 9C       		.byte	0x9c
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 123


 3457 0ca7 C50C0000 		.4byte	0xcc5
 3458 0cab 18       		.uleb128 0x18
 3459 0cac 95000000 		.4byte	.LASF217
 3460 0cb0 01       		.byte	0x1
 3461 0cb1 6F01     		.2byte	0x16f
 3462 0cb3 E6000000 		.4byte	0xe6
 3463 0cb7 9B010000 		.4byte	.LLST10
 3464 0cbb 1B       		.uleb128 0x1b
 3465 0cbc 16000000 		.4byte	.LVL30
 3466 0cc0 DD160000 		.4byte	0x16dd
 3467 0cc4 00       		.byte	0
 3468 0cc5 1A       		.uleb128 0x1a
 3469 0cc6 C1110000 		.4byte	.LASF218
 3470 0cca 01       		.byte	0x1
 3471 0ccb AB01     		.2byte	0x1ab
 3472 0ccd E6000000 		.4byte	0xe6
 3473 0cd1 00000000 		.4byte	.LFB4
 3474 0cd5 3C000000 		.4byte	.LFE4-.LFB4
 3475 0cd9 01       		.uleb128 0x1
 3476 0cda 9C       		.byte	0x9c
 3477 0cdb 1D0D0000 		.4byte	0xd1d
 3478 0cdf 18       		.uleb128 0x18
 3479 0ce0 95000000 		.4byte	.LASF217
 3480 0ce4 01       		.byte	0x1
 3481 0ce5 AD01     		.2byte	0x1ad
 3482 0ce7 E6000000 		.4byte	0xe6
 3483 0ceb BA010000 		.4byte	.LLST11
 3484 0cef 18       		.uleb128 0x18
 3485 0cf0 6A0C0000 		.4byte	.LASF219
 3486 0cf4 01       		.byte	0x1
 3487 0cf5 AF01     		.2byte	0x1af
 3488 0cf7 C5000000 		.4byte	0xc5
 3489 0cfb 08020000 		.4byte	.LLST12
 3490 0cff 1C       		.uleb128 0x1c
 3491 0d00 18000000 		.4byte	.LVL35
 3492 0d04 4D0C0000 		.4byte	0xc4d
 3493 0d08 130D0000 		.4byte	0xd13
 3494 0d0c 1D       		.uleb128 0x1d
 3495 0d0d 01       		.uleb128 0x1
 3496 0d0e 50       		.byte	0x50
 3497 0d0f 02       		.uleb128 0x2
 3498 0d10 74       		.byte	0x74
 3499 0d11 00       		.sleb128 0
 3500 0d12 00       		.byte	0
 3501 0d13 1B       		.uleb128 0x1b
 3502 0d14 26000000 		.4byte	.LVL36
 3503 0d18 910C0000 		.4byte	0xc91
 3504 0d1c 00       		.byte	0
 3505 0d1d 1A       		.uleb128 0x1a
 3506 0d1e CC000000 		.4byte	.LASF220
 3507 0d22 01       		.byte	0x1
 3508 0d23 1702     		.2byte	0x217
 3509 0d25 E6000000 		.4byte	0xe6
 3510 0d29 00000000 		.4byte	.LFB5
 3511 0d2d 58000000 		.4byte	.LFE5-.LFB5
 3512 0d31 01       		.uleb128 0x1
 3513 0d32 9C       		.byte	0x9c
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 124


 3514 0d33 710D0000 		.4byte	0xd71
 3515 0d37 17       		.uleb128 0x17
 3516 0d38 A9130000 		.4byte	.LASF213
 3517 0d3c 01       		.byte	0x1
 3518 0d3d 1702     		.2byte	0x217
 3519 0d3f C5000000 		.4byte	0xc5
 3520 0d43 1B020000 		.4byte	.LLST13
 3521 0d47 17       		.uleb128 0x17
 3522 0d48 76030000 		.4byte	.LASF221
 3523 0d4c 01       		.byte	0x1
 3524 0d4d 1702     		.2byte	0x217
 3525 0d4f C5000000 		.4byte	0xc5
 3526 0d53 3C020000 		.4byte	.LLST14
 3527 0d57 18       		.uleb128 0x18
 3528 0d58 80130000 		.4byte	.LASF214
 3529 0d5c 01       		.byte	0x1
 3530 0d5d 1902     		.2byte	0x219
 3531 0d5f E6000000 		.4byte	0xe6
 3532 0d63 5D020000 		.4byte	.LLST15
 3533 0d67 1B       		.uleb128 0x1b
 3534 0d68 4A000000 		.4byte	.LVL42
 3535 0d6c E9160000 		.4byte	0x16e9
 3536 0d70 00       		.byte	0
 3537 0d71 1A       		.uleb128 0x1a
 3538 0d72 330B0000 		.4byte	.LASF222
 3539 0d76 01       		.byte	0x1
 3540 0d77 8102     		.2byte	0x281
 3541 0d79 E6000000 		.4byte	0xe6
 3542 0d7d 00000000 		.4byte	.LFB6
 3543 0d81 2C000000 		.4byte	.LFE6-.LFB6
 3544 0d85 01       		.uleb128 0x1
 3545 0d86 9C       		.byte	0x9c
 3546 0d87 A50D0000 		.4byte	0xda5
 3547 0d8b 18       		.uleb128 0x18
 3548 0d8c 95000000 		.4byte	.LASF217
 3549 0d90 01       		.byte	0x1
 3550 0d91 8302     		.2byte	0x283
 3551 0d93 E6000000 		.4byte	0xe6
 3552 0d97 7B020000 		.4byte	.LLST16
 3553 0d9b 1B       		.uleb128 0x1b
 3554 0d9c 16000000 		.4byte	.LVL45
 3555 0da0 F5160000 		.4byte	0x16f5
 3556 0da4 00       		.byte	0
 3557 0da5 1E       		.uleb128 0x1e
 3558 0da6 F5100000 		.4byte	.LASF229
 3559 0daa 01       		.byte	0x1
 3560 0dab 4803     		.2byte	0x348
 3561 0dad 00000000 		.4byte	.LFB8
 3562 0db1 9C000000 		.4byte	.LFE8-.LFB8
 3563 0db5 01       		.uleb128 0x1
 3564 0db6 9C       		.byte	0x9c
 3565 0db7 6F0E0000 		.4byte	0xe6f
 3566 0dbb 17       		.uleb128 0x17
 3567 0dbc A9130000 		.4byte	.LASF213
 3568 0dc0 01       		.byte	0x1
 3569 0dc1 4803     		.2byte	0x348
 3570 0dc3 C5000000 		.4byte	0xc5
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 125


 3571 0dc7 9A020000 		.4byte	.LLST17
 3572 0dcb 17       		.uleb128 0x17
 3573 0dcc 53000000 		.4byte	.LASF223
 3574 0dd0 01       		.byte	0x1
 3575 0dd1 4803     		.2byte	0x348
 3576 0dd3 C5000000 		.4byte	0xc5
 3577 0dd7 BB020000 		.4byte	.LLST18
 3578 0ddb 17       		.uleb128 0x17
 3579 0ddc B1110000 		.4byte	.LASF224
 3580 0de0 01       		.byte	0x1
 3581 0de1 4803     		.2byte	0x348
 3582 0de3 C5000000 		.4byte	0xc5
 3583 0de7 DC020000 		.4byte	.LLST19
 3584 0deb 1F       		.uleb128 0x1f
 3585 0dec 16070000 		.4byte	.LASF225
 3586 0df0 01       		.byte	0x1
 3587 0df1 4A03     		.2byte	0x34a
 3588 0df3 C5000000 		.4byte	0xc5
 3589 0df7 01       		.byte	0x1
 3590 0df8 18       		.uleb128 0x18
 3591 0df9 B7110000 		.4byte	.LASF226
 3592 0dfd 01       		.byte	0x1
 3593 0dfe 4B03     		.2byte	0x34b
 3594 0e00 C5000000 		.4byte	0xc5
 3595 0e04 08030000 		.4byte	.LLST20
 3596 0e08 18       		.uleb128 0x18
 3597 0e09 090D0000 		.4byte	.LASF227
 3598 0e0d 01       		.byte	0x1
 3599 0e0e 4C03     		.2byte	0x34c
 3600 0e10 AD000000 		.4byte	0xad
 3601 0e14 27030000 		.4byte	.LLST21
 3602 0e18 18       		.uleb128 0x18
 3603 0e19 42110000 		.4byte	.LASF228
 3604 0e1d 01       		.byte	0x1
 3605 0e1e 4D03     		.2byte	0x34d
 3606 0e20 6F0E0000 		.4byte	0xe6f
 3607 0e24 50030000 		.4byte	.LLST22
 3608 0e28 1B       		.uleb128 0x1b
 3609 0e29 1C000000 		.4byte	.LVL52
 3610 0e2d 01170000 		.4byte	0x1701
 3611 0e31 1B       		.uleb128 0x1b
 3612 0e32 3C000000 		.4byte	.LVL53
 3613 0e36 0C170000 		.4byte	0x170c
 3614 0e3a 1B       		.uleb128 0x1b
 3615 0e3b 4E000000 		.4byte	.LVL54
 3616 0e3f 01170000 		.4byte	0x1701
 3617 0e43 1B       		.uleb128 0x1b
 3618 0e44 6E000000 		.4byte	.LVL55
 3619 0e48 0C170000 		.4byte	0x170c
 3620 0e4c 1B       		.uleb128 0x1b
 3621 0e4d 74000000 		.4byte	.LVL56
 3622 0e51 01170000 		.4byte	0x1701
 3623 0e55 1B       		.uleb128 0x1b
 3624 0e56 86000000 		.4byte	.LVL57
 3625 0e5a 0C170000 		.4byte	0x170c
 3626 0e5e 20       		.uleb128 0x20
 3627 0e5f 8E000000 		.4byte	.LVL58
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 126


 3628 0e63 17170000 		.4byte	0x1717
 3629 0e67 1D       		.uleb128 0x1d
 3630 0e68 01       		.uleb128 0x1
 3631 0e69 50       		.byte	0x50
 3632 0e6a 02       		.uleb128 0x2
 3633 0e6b 74       		.byte	0x74
 3634 0e6c 00       		.sleb128 0
 3635 0e6d 00       		.byte	0
 3636 0e6e 00       		.byte	0
 3637 0e6f 07       		.uleb128 0x7
 3638 0e70 04       		.byte	0x4
 3639 0e71 750E0000 		.4byte	0xe75
 3640 0e75 21       		.uleb128 0x21
 3641 0e76 DF090000 		.4byte	0x9df
 3642 0e7a 1E       		.uleb128 0x1e
 3643 0e7b E10D0000 		.4byte	.LASF230
 3644 0e7f 01       		.byte	0x1
 3645 0e80 8E04     		.2byte	0x48e
 3646 0e82 00000000 		.4byte	.LFB11
 3647 0e86 80000000 		.4byte	.LFE11-.LFB11
 3648 0e8a 01       		.uleb128 0x1
 3649 0e8b 9C       		.byte	0x9c
 3650 0e8c 230F0000 		.4byte	0xf23
 3651 0e90 17       		.uleb128 0x17
 3652 0e91 B1110000 		.4byte	.LASF224
 3653 0e95 01       		.byte	0x1
 3654 0e96 8E04     		.2byte	0x48e
 3655 0e98 C5000000 		.4byte	0xc5
 3656 0e9c 63030000 		.4byte	.LLST23
 3657 0ea0 18       		.uleb128 0x18
 3658 0ea1 090D0000 		.4byte	.LASF227
 3659 0ea5 01       		.byte	0x1
 3660 0ea6 9004     		.2byte	0x490
 3661 0ea8 AD000000 		.4byte	0xad
 3662 0eac 84030000 		.4byte	.LLST24
 3663 0eb0 18       		.uleb128 0x18
 3664 0eb1 18040000 		.4byte	.LASF231
 3665 0eb5 01       		.byte	0x1
 3666 0eb6 9204     		.2byte	0x492
 3667 0eb8 C5000000 		.4byte	0xc5
 3668 0ebc 97030000 		.4byte	.LLST25
 3669 0ec0 18       		.uleb128 0x18
 3670 0ec1 BC060000 		.4byte	.LASF232
 3671 0ec5 01       		.byte	0x1
 3672 0ec6 9404     		.2byte	0x494
 3673 0ec8 C5000000 		.4byte	0xc5
 3674 0ecc B6030000 		.4byte	.LLST26
 3675 0ed0 18       		.uleb128 0x18
 3676 0ed1 FB050000 		.4byte	.LASF233
 3677 0ed5 01       		.byte	0x1
 3678 0ed6 9504     		.2byte	0x495
 3679 0ed8 C5000000 		.4byte	0xc5
 3680 0edc D5030000 		.4byte	.LLST27
 3681 0ee0 18       		.uleb128 0x18
 3682 0ee1 1D080000 		.4byte	.LASF234
 3683 0ee5 01       		.byte	0x1
 3684 0ee6 9704     		.2byte	0x497
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 127


 3685 0ee8 C5000000 		.4byte	0xc5
 3686 0eec F4030000 		.4byte	.LLST28
 3687 0ef0 18       		.uleb128 0x18
 3688 0ef1 C80A0000 		.4byte	.LASF235
 3689 0ef5 01       		.byte	0x1
 3690 0ef6 9804     		.2byte	0x498
 3691 0ef8 C5000000 		.4byte	0xc5
 3692 0efc 1E040000 		.4byte	.LLST29
 3693 0f00 18       		.uleb128 0x18
 3694 0f01 19050000 		.4byte	.LASF236
 3695 0f05 01       		.byte	0x1
 3696 0f06 9A04     		.2byte	0x49a
 3697 0f08 6F0E0000 		.4byte	0xe6f
 3698 0f0c 31040000 		.4byte	.LLST30
 3699 0f10 1B       		.uleb128 0x1b
 3700 0f11 34000000 		.4byte	.LVL69
 3701 0f15 01170000 		.4byte	0x1701
 3702 0f19 1B       		.uleb128 0x1b
 3703 0f1a 6C000000 		.4byte	.LVL80
 3704 0f1e 0C170000 		.4byte	0x170c
 3705 0f22 00       		.byte	0
 3706 0f23 22       		.uleb128 0x22
 3707 0f24 BD120000 		.4byte	.LASF299
 3708 0f28 01       		.byte	0x1
 3709 0f29 2405     		.2byte	0x524
 3710 0f2b 00000000 		.4byte	.LFB12
 3711 0f2f 02000000 		.4byte	.LFE12-.LFB12
 3712 0f33 01       		.uleb128 0x1
 3713 0f34 9C       		.byte	0x9c
 3714 0f35 1E       		.uleb128 0x1e
 3715 0f36 720D0000 		.4byte	.LASF237
 3716 0f3a 01       		.byte	0x1
 3717 0f3b 7105     		.2byte	0x571
 3718 0f3d 00000000 		.4byte	.LFB13
 3719 0f41 08000000 		.4byte	.LFE13-.LFB13
 3720 0f45 01       		.uleb128 0x1
 3721 0f46 9C       		.byte	0x9c
 3722 0f47 6D0F0000 		.4byte	0xf6d
 3723 0f4b 17       		.uleb128 0x17
 3724 0f4c 13100000 		.4byte	.LASF238
 3725 0f50 01       		.byte	0x1
 3726 0f51 7105     		.2byte	0x571
 3727 0f53 08010000 		.4byte	0x108
 3728 0f57 44040000 		.4byte	.LLST31
 3729 0f5b 20       		.uleb128 0x20
 3730 0f5c 06000000 		.4byte	.LVL88
 3731 0f60 23170000 		.4byte	0x1723
 3732 0f64 1D       		.uleb128 0x1d
 3733 0f65 01       		.uleb128 0x1
 3734 0f66 50       		.byte	0x50
 3735 0f67 03       		.uleb128 0x3
 3736 0f68 F3       		.byte	0xf3
 3737 0f69 01       		.uleb128 0x1
 3738 0f6a 50       		.byte	0x50
 3739 0f6b 00       		.byte	0
 3740 0f6c 00       		.byte	0
 3741 0f6d 1E       		.uleb128 0x1e
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 128


 3742 0f6e EA020000 		.4byte	.LASF239
 3743 0f72 01       		.byte	0x1
 3744 0f73 8805     		.2byte	0x588
 3745 0f75 00000000 		.4byte	.LFB14
 3746 0f79 30000000 		.4byte	.LFE14-.LFB14
 3747 0f7d 01       		.uleb128 0x1
 3748 0f7e 9C       		.byte	0x9c
 3749 0f7f 940F0000 		.4byte	0xf94
 3750 0f83 17       		.uleb128 0x17
 3751 0f84 B5060000 		.4byte	.LASF240
 3752 0f88 01       		.byte	0x1
 3753 0f89 8805     		.2byte	0x588
 3754 0f8b C5000000 		.4byte	0xc5
 3755 0f8f 65040000 		.4byte	.LLST32
 3756 0f93 00       		.byte	0
 3757 0f94 1E       		.uleb128 0x1e
 3758 0f95 F5080000 		.4byte	.LASF241
 3759 0f99 01       		.byte	0x1
 3760 0f9a CC05     		.2byte	0x5cc
 3761 0f9c 00000000 		.4byte	.LFB15
 3762 0fa0 14000000 		.4byte	.LFE15-.LFB15
 3763 0fa4 01       		.uleb128 0x1
 3764 0fa5 9C       		.byte	0x9c
 3765 0fa6 CB0F0000 		.4byte	0xfcb
 3766 0faa 17       		.uleb128 0x17
 3767 0fab ED110000 		.4byte	.LASF124
 3768 0faf 01       		.byte	0x1
 3769 0fb0 CC05     		.2byte	0x5cc
 3770 0fb2 C5000000 		.4byte	0xc5
 3771 0fb6 93040000 		.4byte	.LLST33
 3772 0fba 18       		.uleb128 0x18
 3773 0fbb 03130000 		.4byte	.LASF242
 3774 0fbf 01       		.byte	0x1
 3775 0fc0 CF05     		.2byte	0x5cf
 3776 0fc2 C5000000 		.4byte	0xc5
 3777 0fc6 C1040000 		.4byte	.LLST34
 3778 0fca 00       		.byte	0
 3779 0fcb 1E       		.uleb128 0x1e
 3780 0fcc F60B0000 		.4byte	.LASF243
 3781 0fd0 01       		.byte	0x1
 3782 0fd1 2006     		.2byte	0x620
 3783 0fd3 00000000 		.4byte	.LFB16
 3784 0fd7 12000000 		.4byte	.LFE16-.LFB16
 3785 0fdb 01       		.uleb128 0x1
 3786 0fdc 9C       		.byte	0x9c
 3787 0fdd 27100000 		.4byte	0x1027
 3788 0fe1 17       		.uleb128 0x17
 3789 0fe2 ED110000 		.4byte	.LASF124
 3790 0fe6 01       		.byte	0x1
 3791 0fe7 2006     		.2byte	0x620
 3792 0fe9 C5000000 		.4byte	0xc5
 3793 0fed EA040000 		.4byte	.LLST35
 3794 0ff1 17       		.uleb128 0x17
 3795 0ff2 B5060000 		.4byte	.LASF240
 3796 0ff6 01       		.byte	0x1
 3797 0ff7 2006     		.2byte	0x620
 3798 0ff9 C5000000 		.4byte	0xc5
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 129


 3799 0ffd 16050000 		.4byte	.LLST36
 3800 1001 1C       		.uleb128 0x1c
 3801 1002 0A000000 		.4byte	.LVL100
 3802 1006 6D0F0000 		.4byte	0xf6d
 3803 100a 16100000 		.4byte	0x1016
 3804 100e 1D       		.uleb128 0x1d
 3805 100f 01       		.uleb128 0x1
 3806 1010 50       		.byte	0x50
 3807 1011 03       		.uleb128 0x3
 3808 1012 F3       		.byte	0xf3
 3809 1013 01       		.uleb128 0x1
 3810 1014 51       		.byte	0x51
 3811 1015 00       		.byte	0
 3812 1016 20       		.uleb128 0x20
 3813 1017 10000000 		.4byte	.LVL101
 3814 101b 940F0000 		.4byte	0xf94
 3815 101f 1D       		.uleb128 0x1d
 3816 1020 01       		.uleb128 0x1
 3817 1021 50       		.byte	0x50
 3818 1022 02       		.uleb128 0x2
 3819 1023 74       		.byte	0x74
 3820 1024 00       		.sleb128 0
 3821 1025 00       		.byte	0
 3822 1026 00       		.byte	0
 3823 1027 1A       		.uleb128 0x1a
 3824 1028 AD080000 		.4byte	.LASF244
 3825 102c 01       		.byte	0x1
 3826 102d 5406     		.2byte	0x654
 3827 102f E6000000 		.4byte	0xe6
 3828 1033 00000000 		.4byte	.LFB17
 3829 1037 1A000000 		.4byte	.LFE17-.LFB17
 3830 103b 01       		.uleb128 0x1
 3831 103c 9C       		.byte	0x9c
 3832 103d 79100000 		.4byte	0x1079
 3833 1041 17       		.uleb128 0x17
 3834 1042 A9130000 		.4byte	.LASF213
 3835 1046 01       		.byte	0x1
 3836 1047 5406     		.2byte	0x654
 3837 1049 C5000000 		.4byte	0xc5
 3838 104d 37050000 		.4byte	.LLST37
 3839 1051 18       		.uleb128 0x18
 3840 1052 530A0000 		.4byte	.LASF245
 3841 1056 01       		.byte	0x1
 3842 1057 5606     		.2byte	0x656
 3843 1059 E6000000 		.4byte	0xe6
 3844 105d 79050000 		.4byte	.LLST38
 3845 1061 20       		.uleb128 0x20
 3846 1062 18000000 		.4byte	.LVL109
 3847 1066 2E170000 		.4byte	0x172e
 3848 106a 1D       		.uleb128 0x1d
 3849 106b 01       		.uleb128 0x1
 3850 106c 50       		.byte	0x50
 3851 106d 03       		.uleb128 0x3
 3852 106e F3       		.byte	0xf3
 3853 106f 01       		.uleb128 0x1
 3854 1070 50       		.byte	0x50
 3855 1071 1D       		.uleb128 0x1d
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 130


 3856 1072 01       		.uleb128 0x1
 3857 1073 51       		.byte	0x51
 3858 1074 02       		.uleb128 0x2
 3859 1075 08       		.byte	0x8
 3860 1076 55       		.byte	0x55
 3861 1077 00       		.byte	0
 3862 1078 00       		.byte	0
 3863 1079 1A       		.uleb128 0x1a
 3864 107a AA020000 		.4byte	.LASF246
 3865 107e 01       		.byte	0x1
 3866 107f C906     		.2byte	0x6c9
 3867 1081 E6000000 		.4byte	0xe6
 3868 1085 00000000 		.4byte	.LFB18
 3869 1089 1A000000 		.4byte	.LFE18-.LFB18
 3870 108d 01       		.uleb128 0x1
 3871 108e 9C       		.byte	0x9c
 3872 108f C4100000 		.4byte	0x10c4
 3873 1093 18       		.uleb128 0x18
 3874 1094 530A0000 		.4byte	.LASF245
 3875 1098 01       		.byte	0x1
 3876 1099 CB06     		.2byte	0x6cb
 3877 109b E6000000 		.4byte	0xe6
 3878 109f A3050000 		.4byte	.LLST39
 3879 10a3 18       		.uleb128 0x18
 3880 10a4 6A0C0000 		.4byte	.LASF219
 3881 10a8 01       		.byte	0x1
 3882 10a9 CC06     		.2byte	0x6cc
 3883 10ab C5000000 		.4byte	0xc5
 3884 10af CD050000 		.4byte	.LLST40
 3885 10b3 20       		.uleb128 0x20
 3886 10b4 0E000000 		.4byte	.LVL112
 3887 10b8 27100000 		.4byte	0x1027
 3888 10bc 1D       		.uleb128 0x1d
 3889 10bd 01       		.uleb128 0x1
 3890 10be 50       		.byte	0x50
 3891 10bf 02       		.uleb128 0x2
 3892 10c0 74       		.byte	0x74
 3893 10c1 00       		.sleb128 0
 3894 10c2 00       		.byte	0
 3895 10c3 00       		.byte	0
 3896 10c4 1A       		.uleb128 0x1a
 3897 10c5 DD010000 		.4byte	.LASF247
 3898 10c9 01       		.byte	0x1
 3899 10ca E80A     		.2byte	0xae8
 3900 10cc C5000000 		.4byte	0xc5
 3901 10d0 00000000 		.4byte	.LFB23
 3902 10d4 14000000 		.4byte	.LFE23-.LFB23
 3903 10d8 01       		.uleb128 0x1
 3904 10d9 9C       		.byte	0x9c
 3905 10da 0B110000 		.4byte	0x110b
 3906 10de 17       		.uleb128 0x17
 3907 10df A9130000 		.4byte	.LASF213
 3908 10e3 01       		.byte	0x1
 3909 10e4 E80A     		.2byte	0xae8
 3910 10e6 C5000000 		.4byte	0xc5
 3911 10ea EC050000 		.4byte	.LLST41
 3912 10ee 23       		.uleb128 0x23
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 131


 3913 10ef 0C100000 		.4byte	.LASF248
 3914 10f3 01       		.byte	0x1
 3915 10f4 EA0A     		.2byte	0xaea
 3916 10f6 C5000000 		.4byte	0xc5
 3917 10fa 01       		.uleb128 0x1
 3918 10fb 50       		.byte	0x50
 3919 10fc 23       		.uleb128 0x23
 3920 10fd C3030000 		.4byte	.LASF249
 3921 1101 01       		.byte	0x1
 3922 1102 EE0A     		.2byte	0xaee
 3923 1104 0B110000 		.4byte	0x110b
 3924 1108 01       		.uleb128 0x1
 3925 1109 53       		.byte	0x53
 3926 110a 00       		.byte	0
 3927 110b 07       		.uleb128 0x7
 3928 110c 04       		.byte	0x4
 3929 110d 34060000 		.4byte	0x634
 3930 1111 1A       		.uleb128 0x1a
 3931 1112 60080000 		.4byte	.LASF250
 3932 1116 01       		.byte	0x1
 3933 1117 140B     		.2byte	0xb14
 3934 1119 C5000000 		.4byte	0xc5
 3935 111d 00000000 		.4byte	.LFB24
 3936 1121 14000000 		.4byte	.LFE24-.LFB24
 3937 1125 01       		.uleb128 0x1
 3938 1126 9C       		.byte	0x9c
 3939 1127 58110000 		.4byte	0x1158
 3940 112b 17       		.uleb128 0x17
 3941 112c A9130000 		.4byte	.LASF213
 3942 1130 01       		.byte	0x1
 3943 1131 140B     		.2byte	0xb14
 3944 1133 C5000000 		.4byte	0xc5
 3945 1137 0D060000 		.4byte	.LLST42
 3946 113b 23       		.uleb128 0x23
 3947 113c 0C100000 		.4byte	.LASF248
 3948 1140 01       		.byte	0x1
 3949 1141 160B     		.2byte	0xb16
 3950 1143 C5000000 		.4byte	0xc5
 3951 1147 01       		.uleb128 0x1
 3952 1148 50       		.byte	0x50
 3953 1149 23       		.uleb128 0x23
 3954 114a C3030000 		.4byte	.LASF249
 3955 114e 01       		.byte	0x1
 3956 114f 1A0B     		.2byte	0xb1a
 3957 1151 0B110000 		.4byte	0x110b
 3958 1155 01       		.uleb128 0x1
 3959 1156 53       		.byte	0x53
 3960 1157 00       		.byte	0
 3961 1158 1A       		.uleb128 0x1a
 3962 1159 54060000 		.4byte	.LASF251
 3963 115d 01       		.byte	0x1
 3964 115e 400B     		.2byte	0xb40
 3965 1160 AD000000 		.4byte	0xad
 3966 1164 00000000 		.4byte	.LFB25
 3967 1168 24000000 		.4byte	.LFE25-.LFB25
 3968 116c 01       		.uleb128 0x1
 3969 116d 9C       		.byte	0x9c
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 132


 3970 116e AE110000 		.4byte	0x11ae
 3971 1172 17       		.uleb128 0x17
 3972 1173 4F130000 		.4byte	.LASF205
 3973 1177 01       		.byte	0x1
 3974 1178 400B     		.2byte	0xb40
 3975 117a C5000000 		.4byte	0xc5
 3976 117e 2E060000 		.4byte	.LLST43
 3977 1182 24       		.uleb128 0x24
 3978 1183 93080000 		.4byte	.LASF114
 3979 1187 01       		.byte	0x1
 3980 1188 400B     		.2byte	0xb40
 3981 118a C5000000 		.4byte	0xc5
 3982 118e 01       		.uleb128 0x1
 3983 118f 51       		.byte	0x51
 3984 1190 18       		.uleb128 0x18
 3985 1191 D90F0000 		.4byte	.LASF252
 3986 1195 01       		.byte	0x1
 3987 1196 420B     		.2byte	0xb42
 3988 1198 C5000000 		.4byte	0xc5
 3989 119c 68060000 		.4byte	.LLST44
 3990 11a0 1F       		.uleb128 0x1f
 3991 11a1 5D130000 		.4byte	.LASF253
 3992 11a5 01       		.byte	0x1
 3993 11a6 430B     		.2byte	0xb43
 3994 11a8 C5000000 		.4byte	0xc5
 3995 11ac 01       		.byte	0x1
 3996 11ad 00       		.byte	0
 3997 11ae 25       		.uleb128 0x25
 3998 11af D4030000 		.4byte	.LASF265
 3999 11b3 01       		.byte	0x1
 4000 11b4 9909     		.2byte	0x999
 4001 11b6 00000000 		.4byte	.LFB20
 4002 11ba 84000000 		.4byte	.LFE20-.LFB20
 4003 11be 01       		.uleb128 0x1
 4004 11bf 9C       		.byte	0x9c
 4005 11c0 F8120000 		.4byte	0x12f8
 4006 11c4 17       		.uleb128 0x17
 4007 11c5 6A0C0000 		.4byte	.LASF219
 4008 11c9 01       		.byte	0x1
 4009 11ca 9909     		.2byte	0x999
 4010 11cc C5000000 		.4byte	0xc5
 4011 11d0 7B060000 		.4byte	.LLST45
 4012 11d4 17       		.uleb128 0x17
 4013 11d5 C3030000 		.4byte	.LASF249
 4014 11d9 01       		.byte	0x1
 4015 11da 9909     		.2byte	0x999
 4016 11dc 0B110000 		.4byte	0x110b
 4017 11e0 A7060000 		.4byte	.LLST46
 4018 11e4 18       		.uleb128 0x18
 4019 11e5 CB050000 		.4byte	.LASF209
 4020 11e9 01       		.byte	0x1
 4021 11ea 9B09     		.2byte	0x99b
 4022 11ec AD000000 		.4byte	0xad
 4023 11f0 D3060000 		.4byte	.LLST47
 4024 11f4 18       		.uleb128 0x18
 4025 11f5 C7020000 		.4byte	.LASF210
 4026 11f9 01       		.byte	0x1
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 133


 4027 11fa 9C09     		.2byte	0x99c
 4028 11fc AD000000 		.4byte	0xad
 4029 1200 07070000 		.4byte	.LLST48
 4030 1204 18       		.uleb128 0x18
 4031 1205 440A0000 		.4byte	.LASF206
 4032 1209 01       		.byte	0x1
 4033 120a A009     		.2byte	0x9a0
 4034 120c C5000000 		.4byte	0xc5
 4035 1210 25070000 		.4byte	.LLST49
 4036 1214 18       		.uleb128 0x18
 4037 1215 4F130000 		.4byte	.LASF205
 4038 1219 01       		.byte	0x1
 4039 121a A209     		.2byte	0x9a2
 4040 121c C5000000 		.4byte	0xc5
 4041 1220 4F070000 		.4byte	.LLST50
 4042 1224 1C       		.uleb128 0x1c
 4043 1225 0C000000 		.4byte	.LVL132
 4044 1229 C4100000 		.4byte	0x10c4
 4045 122d 38120000 		.4byte	0x1238
 4046 1231 1D       		.uleb128 0x1d
 4047 1232 01       		.uleb128 0x1
 4048 1233 50       		.byte	0x50
 4049 1234 02       		.uleb128 0x2
 4050 1235 74       		.byte	0x74
 4051 1236 00       		.sleb128 0
 4052 1237 00       		.byte	0
 4053 1238 1C       		.uleb128 0x1c
 4054 1239 16000000 		.4byte	.LVL134
 4055 123d 3A170000 		.4byte	0x173a
 4056 1241 51120000 		.4byte	0x1251
 4057 1245 1D       		.uleb128 0x1d
 4058 1246 01       		.uleb128 0x1
 4059 1247 50       		.byte	0x50
 4060 1248 02       		.uleb128 0x2
 4061 1249 76       		.byte	0x76
 4062 124a 00       		.sleb128 0
 4063 124b 1D       		.uleb128 0x1d
 4064 124c 01       		.uleb128 0x1
 4065 124d 52       		.byte	0x52
 4066 124e 01       		.uleb128 0x1
 4067 124f 30       		.byte	0x30
 4068 1250 00       		.byte	0
 4069 1251 1C       		.uleb128 0x1c
 4070 1252 20000000 		.4byte	.LVL137
 4071 1256 820B0000 		.4byte	0xb82
 4072 125a 6C120000 		.4byte	0x126c
 4073 125e 1D       		.uleb128 0x1d
 4074 125f 01       		.uleb128 0x1
 4075 1260 50       		.byte	0x50
 4076 1261 02       		.uleb128 0x2
 4077 1262 76       		.byte	0x76
 4078 1263 00       		.sleb128 0
 4079 1264 1D       		.uleb128 0x1d
 4080 1265 01       		.uleb128 0x1
 4081 1266 51       		.byte	0x51
 4082 1267 03       		.uleb128 0x3
 4083 1268 91       		.byte	0x91
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 134


 4084 1269 64       		.sleb128 -28
 4085 126a 06       		.byte	0x6
 4086 126b 00       		.byte	0
 4087 126c 1C       		.uleb128 0x1c
 4088 126d 2C000000 		.4byte	.LVL140
 4089 1271 58110000 		.4byte	0x1158
 4090 1275 82120000 		.4byte	0x1282
 4091 1279 1D       		.uleb128 0x1d
 4092 127a 01       		.uleb128 0x1
 4093 127b 50       		.byte	0x50
 4094 127c 04       		.uleb128 0x4
 4095 127d 76       		.byte	0x76
 4096 127e 00       		.sleb128 0
 4097 127f 31       		.byte	0x31
 4098 1280 24       		.byte	0x24
 4099 1281 00       		.byte	0
 4100 1282 1C       		.uleb128 0x1c
 4101 1283 36000000 		.4byte	.LVL142
 4102 1287 CD0B0000 		.4byte	0xbcd
 4103 128b 9C120000 		.4byte	0x129c
 4104 128f 1D       		.uleb128 0x1d
 4105 1290 01       		.uleb128 0x1
 4106 1291 50       		.byte	0x50
 4107 1292 02       		.uleb128 0x2
 4108 1293 76       		.byte	0x76
 4109 1294 00       		.sleb128 0
 4110 1295 1D       		.uleb128 0x1d
 4111 1296 01       		.uleb128 0x1
 4112 1297 51       		.byte	0x51
 4113 1298 02       		.uleb128 0x2
 4114 1299 75       		.byte	0x75
 4115 129a 00       		.sleb128 0
 4116 129b 00       		.byte	0
 4117 129c 1C       		.uleb128 0x1c
 4118 129d 56000000 		.4byte	.LVL144
 4119 12a1 11110000 		.4byte	0x1111
 4120 12a5 B0120000 		.4byte	0x12b0
 4121 12a9 1D       		.uleb128 0x1d
 4122 12aa 01       		.uleb128 0x1
 4123 12ab 50       		.byte	0x50
 4124 12ac 02       		.uleb128 0x2
 4125 12ad 74       		.byte	0x74
 4126 12ae 00       		.sleb128 0
 4127 12af 00       		.byte	0
 4128 12b0 1C       		.uleb128 0x1c
 4129 12b1 5E000000 		.4byte	.LVL146
 4130 12b5 820B0000 		.4byte	0xb82
 4131 12b9 CB120000 		.4byte	0x12cb
 4132 12bd 1D       		.uleb128 0x1d
 4133 12be 01       		.uleb128 0x1
 4134 12bf 50       		.byte	0x50
 4135 12c0 02       		.uleb128 0x2
 4136 12c1 76       		.byte	0x76
 4137 12c2 00       		.sleb128 0
 4138 12c3 1D       		.uleb128 0x1d
 4139 12c4 01       		.uleb128 0x1
 4140 12c5 51       		.byte	0x51
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 135


 4141 12c6 03       		.uleb128 0x3
 4142 12c7 91       		.byte	0x91
 4143 12c8 64       		.sleb128 -28
 4144 12c9 06       		.byte	0x6
 4145 12ca 00       		.byte	0
 4146 12cb 1C       		.uleb128 0x1c
 4147 12cc 6A000000 		.4byte	.LVL149
 4148 12d0 58110000 		.4byte	0x1158
 4149 12d4 E1120000 		.4byte	0x12e1
 4150 12d8 1D       		.uleb128 0x1d
 4151 12d9 01       		.uleb128 0x1
 4152 12da 50       		.byte	0x50
 4153 12db 04       		.uleb128 0x4
 4154 12dc 76       		.byte	0x76
 4155 12dd 00       		.sleb128 0
 4156 12de 31       		.byte	0x31
 4157 12df 24       		.byte	0x24
 4158 12e0 00       		.byte	0
 4159 12e1 20       		.uleb128 0x20
 4160 12e2 74000000 		.4byte	.LVL151
 4161 12e6 CD0B0000 		.4byte	0xbcd
 4162 12ea 1D       		.uleb128 0x1d
 4163 12eb 01       		.uleb128 0x1
 4164 12ec 50       		.byte	0x50
 4165 12ed 02       		.uleb128 0x2
 4166 12ee 76       		.byte	0x76
 4167 12ef 00       		.sleb128 0
 4168 12f0 1D       		.uleb128 0x1d
 4169 12f1 01       		.uleb128 0x1
 4170 12f2 51       		.byte	0x51
 4171 12f3 02       		.uleb128 0x2
 4172 12f4 74       		.byte	0x74
 4173 12f5 00       		.sleb128 0
 4174 12f6 00       		.byte	0
 4175 12f7 00       		.byte	0
 4176 12f8 1E       		.uleb128 0x1e
 4177 12f9 D0130000 		.4byte	.LASF254
 4178 12fd 01       		.byte	0x1
 4179 12fe 6409     		.2byte	0x964
 4180 1300 00000000 		.4byte	.LFB19
 4181 1304 24000000 		.4byte	.LFE19-.LFB19
 4182 1308 01       		.uleb128 0x1
 4183 1309 9C       		.byte	0x9c
 4184 130a 3F130000 		.4byte	0x133f
 4185 130e 18       		.uleb128 0x18
 4186 130f 6A0C0000 		.4byte	.LASF219
 4187 1313 01       		.byte	0x1
 4188 1314 6609     		.2byte	0x966
 4189 1316 C5000000 		.4byte	0xc5
 4190 131a 83070000 		.4byte	.LLST51
 4191 131e 18       		.uleb128 0x18
 4192 131f C3030000 		.4byte	.LASF249
 4193 1323 01       		.byte	0x1
 4194 1324 6709     		.2byte	0x967
 4195 1326 0B110000 		.4byte	0x110b
 4196 132a A2070000 		.4byte	.LLST52
 4197 132e 20       		.uleb128 0x20
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 136


 4198 132f 16000000 		.4byte	.LVL159
 4199 1333 AE110000 		.4byte	0x11ae
 4200 1337 1D       		.uleb128 0x1d
 4201 1338 01       		.uleb128 0x1
 4202 1339 50       		.byte	0x50
 4203 133a 02       		.uleb128 0x2
 4204 133b 74       		.byte	0x74
 4205 133c 00       		.sleb128 0
 4206 133d 00       		.byte	0
 4207 133e 00       		.byte	0
 4208 133f 1E       		.uleb128 0x1e
 4209 1340 FD070000 		.4byte	.LASF255
 4210 1344 01       		.byte	0x1
 4211 1345 7A0B     		.2byte	0xb7a
 4212 1347 00000000 		.4byte	.LFB26
 4213 134b C0000000 		.4byte	.LFE26-.LFB26
 4214 134f 01       		.uleb128 0x1
 4215 1350 9C       		.byte	0x9c
 4216 1351 38140000 		.4byte	0x1438
 4217 1355 17       		.uleb128 0x17
 4218 1356 EF060000 		.4byte	.LASF256
 4219 135a 01       		.byte	0x1
 4220 135b 7A0B     		.2byte	0xb7a
 4221 135d C5000000 		.4byte	0xc5
 4222 1361 B5070000 		.4byte	.LLST53
 4223 1365 18       		.uleb128 0x18
 4224 1366 E1020000 		.4byte	.LASF257
 4225 136a 01       		.byte	0x1
 4226 136b 7C0B     		.2byte	0xb7c
 4227 136d C5000000 		.4byte	0xc5
 4228 1371 E2070000 		.4byte	.LLST54
 4229 1375 18       		.uleb128 0x18
 4230 1376 60020000 		.4byte	.LASF258
 4231 137a 01       		.byte	0x1
 4232 137b 7D0B     		.2byte	0xb7d
 4233 137d C5000000 		.4byte	0xc5
 4234 1381 01080000 		.4byte	.LLST55
 4235 1385 18       		.uleb128 0x18
 4236 1386 EF050000 		.4byte	.LASF259
 4237 138a 01       		.byte	0x1
 4238 138b 7E0B     		.2byte	0xb7e
 4239 138d C5000000 		.4byte	0xc5
 4240 1391 1F080000 		.4byte	.LLST56
 4241 1395 18       		.uleb128 0x18
 4242 1396 03130000 		.4byte	.LASF242
 4243 139a 01       		.byte	0x1
 4244 139b 7F0B     		.2byte	0xb7f
 4245 139d C5000000 		.4byte	0xc5
 4246 13a1 3D080000 		.4byte	.LLST57
 4247 13a5 18       		.uleb128 0x18
 4248 13a6 090D0000 		.4byte	.LASF227
 4249 13aa 01       		.byte	0x1
 4250 13ab 800B     		.2byte	0xb80
 4251 13ad AD000000 		.4byte	0xad
 4252 13b1 87080000 		.4byte	.LLST58
 4253 13b5 1B       		.uleb128 0x1b
 4254 13b6 36000000 		.4byte	.LVL168
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 137


 4255 13ba 01170000 		.4byte	0x1701
 4256 13be 1B       		.uleb128 0x1b
 4257 13bf 40000000 		.4byte	.LVL172
 4258 13c3 0C170000 		.4byte	0x170c
 4259 13c7 1B       		.uleb128 0x1b
 4260 13c8 44000000 		.4byte	.LVL173
 4261 13cc 01170000 		.4byte	0x1701
 4262 13d0 1B       		.uleb128 0x1b
 4263 13d1 50000000 		.4byte	.LVL176
 4264 13d5 0C170000 		.4byte	0x170c
 4265 13d9 1B       		.uleb128 0x1b
 4266 13da 54000000 		.4byte	.LVL177
 4267 13de 01170000 		.4byte	0x1701
 4268 13e2 1B       		.uleb128 0x1b
 4269 13e3 64000000 		.4byte	.LVL181
 4270 13e7 0C170000 		.4byte	0x170c
 4271 13eb 1C       		.uleb128 0x1c
 4272 13ec 6C000000 		.4byte	.LVL182
 4273 13f0 46170000 		.4byte	0x1746
 4274 13f4 01140000 		.4byte	0x1401
 4275 13f8 1D       		.uleb128 0x1d
 4276 13f9 01       		.uleb128 0x1
 4277 13fa 50       		.byte	0x50
 4278 13fb 04       		.uleb128 0x4
 4279 13fc 7D       		.byte	0x7d
 4280 13fd 04       		.sleb128 4
 4281 13fe 94       		.byte	0x94
 4282 13ff 02       		.byte	0x2
 4283 1400 00       		.byte	0
 4284 1401 1B       		.uleb128 0x1b
 4285 1402 70000000 		.4byte	.LVL183
 4286 1406 01170000 		.4byte	0x1701
 4287 140a 1B       		.uleb128 0x1b
 4288 140b 80000000 		.4byte	.LVL187
 4289 140f 0C170000 		.4byte	0x170c
 4290 1413 1B       		.uleb128 0x1b
 4291 1414 84000000 		.4byte	.LVL188
 4292 1418 01170000 		.4byte	0x1701
 4293 141c 1B       		.uleb128 0x1b
 4294 141d 94000000 		.4byte	.LVL192
 4295 1421 0C170000 		.4byte	0x170c
 4296 1425 1B       		.uleb128 0x1b
 4297 1426 98000000 		.4byte	.LVL193
 4298 142a 01170000 		.4byte	0x1701
 4299 142e 1B       		.uleb128 0x1b
 4300 142f A6000000 		.4byte	.LVL197
 4301 1433 0C170000 		.4byte	0x170c
 4302 1437 00       		.byte	0
 4303 1438 1A       		.uleb128 0x1a
 4304 1439 2E090000 		.4byte	.LASF260
 4305 143d 01       		.byte	0x1
 4306 143e 840C     		.2byte	0xc84
 4307 1440 A2000000 		.4byte	0xa2
 4308 1444 00000000 		.4byte	.LFB27
 4309 1448 20000000 		.4byte	.LFE27-.LFB27
 4310 144c 01       		.uleb128 0x1
 4311 144d 9C       		.byte	0x9c
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 138


 4312 144e 92140000 		.4byte	0x1492
 4313 1452 17       		.uleb128 0x17
 4314 1453 9E060000 		.4byte	.LASF261
 4315 1457 01       		.byte	0x1
 4316 1458 840C     		.2byte	0xc84
 4317 145a 4B0B0000 		.4byte	0xb4b
 4318 145e D1080000 		.4byte	.LLST59
 4319 1462 17       		.uleb128 0x17
 4320 1463 B1110000 		.4byte	.LASF224
 4321 1467 01       		.byte	0x1
 4322 1468 840C     		.2byte	0xc84
 4323 146a A2000000 		.4byte	0xa2
 4324 146e F2080000 		.4byte	.LLST60
 4325 1472 18       		.uleb128 0x18
 4326 1473 0C100000 		.4byte	.LASF248
 4327 1477 01       		.byte	0x1
 4328 1478 860C     		.2byte	0xc86
 4329 147a A2000000 		.4byte	0xa2
 4330 147e 13090000 		.4byte	.LLST61
 4331 1482 20       		.uleb128 0x20
 4332 1483 16000000 		.4byte	.LVL203
 4333 1487 51170000 		.4byte	0x1751
 4334 148b 1D       		.uleb128 0x1d
 4335 148c 01       		.uleb128 0x1
 4336 148d 50       		.byte	0x50
 4337 148e 01       		.uleb128 0x1
 4338 148f 30       		.byte	0x30
 4339 1490 00       		.byte	0
 4340 1491 00       		.byte	0
 4341 1492 1E       		.uleb128 0x1e
 4342 1493 B10A0000 		.4byte	.LASF262
 4343 1497 01       		.byte	0x1
 4344 1498 D90C     		.2byte	0xcd9
 4345 149a 00000000 		.4byte	.LFB28
 4346 149e 1C000000 		.4byte	.LFE28-.LFB28
 4347 14a2 01       		.uleb128 0x1
 4348 14a3 9C       		.byte	0x9c
 4349 14a4 FB140000 		.4byte	0x14fb
 4350 14a8 17       		.uleb128 0x17
 4351 14a9 1C030000 		.4byte	.LASF263
 4352 14ad 01       		.byte	0x1
 4353 14ae D90C     		.2byte	0xcd9
 4354 14b0 D9090000 		.4byte	0x9d9
 4355 14b4 3E090000 		.4byte	.LLST62
 4356 14b8 17       		.uleb128 0x17
 4357 14b9 C90B0000 		.4byte	.LASF171
 4358 14bd 01       		.byte	0x1
 4359 14be D90C     		.2byte	0xcd9
 4360 14c0 C5000000 		.4byte	0xc5
 4361 14c4 6A090000 		.4byte	.LLST63
 4362 14c8 17       		.uleb128 0x17
 4363 14c9 F5050000 		.4byte	.LASF264
 4364 14cd 01       		.byte	0x1
 4365 14ce D90C     		.2byte	0xcd9
 4366 14d0 C5000000 		.4byte	0xc5
 4367 14d4 96090000 		.4byte	.LLST64
 4368 14d8 18       		.uleb128 0x18
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 139


 4369 14d9 090D0000 		.4byte	.LASF227
 4370 14dd 01       		.byte	0x1
 4371 14de DB0C     		.2byte	0xcdb
 4372 14e0 AD000000 		.4byte	0xad
 4373 14e4 C2090000 		.4byte	.LLST65
 4374 14e8 1B       		.uleb128 0x1b
 4375 14e9 0C000000 		.4byte	.LVL206
 4376 14ed 01170000 		.4byte	0x1701
 4377 14f1 1B       		.uleb128 0x1b
 4378 14f2 1A000000 		.4byte	.LVL208
 4379 14f6 0C170000 		.4byte	0x170c
 4380 14fa 00       		.byte	0
 4381 14fb 25       		.uleb128 0x25
 4382 14fc A0000000 		.4byte	.LASF266
 4383 1500 01       		.byte	0x1
 4384 1501 B903     		.2byte	0x3b9
 4385 1503 00000000 		.4byte	.LFB9
 4386 1507 24000000 		.4byte	.LFE9-.LFB9
 4387 150b 01       		.uleb128 0x1
 4388 150c 9C       		.byte	0x9c
 4389 150d 4D150000 		.4byte	0x154d
 4390 1511 18       		.uleb128 0x18
 4391 1512 03130000 		.4byte	.LASF242
 4392 1516 01       		.byte	0x1
 4393 1517 BE03     		.2byte	0x3be
 4394 1519 C5000000 		.4byte	0xc5
 4395 151d D5090000 		.4byte	.LLST66
 4396 1521 1C       		.uleb128 0x1c
 4397 1522 16000000 		.4byte	.LVL213
 4398 1526 92140000 		.4byte	0x1492
 4399 152a 43150000 		.4byte	0x1543
 4400 152e 1D       		.uleb128 0x1d
 4401 152f 01       		.uleb128 0x1
 4402 1530 50       		.byte	0x50
 4403 1531 05       		.uleb128 0x5
 4404 1532 0C       		.byte	0xc
 4405 1533 00040240 		.4byte	0x40020400
 4406 1537 1D       		.uleb128 0x1d
 4407 1538 01       		.uleb128 0x1
 4408 1539 51       		.byte	0x51
 4409 153a 02       		.uleb128 0x2
 4410 153b 08       		.byte	0x8
 4411 153c F0       		.byte	0xf0
 4412 153d 1D       		.uleb128 0x1d
 4413 153e 01       		.uleb128 0x1
 4414 153f 52       		.byte	0x52
 4415 1540 01       		.uleb128 0x1
 4416 1541 30       		.byte	0x30
 4417 1542 00       		.byte	0
 4418 1543 1B       		.uleb128 0x1b
 4419 1544 1A000000 		.4byte	.LVL214
 4420 1548 5C170000 		.4byte	0x175c
 4421 154c 00       		.byte	0
 4422 154d 1E       		.uleb128 0x1e
 4423 154e F4110000 		.4byte	.LASF267
 4424 1552 01       		.byte	0x1
 4425 1553 2B04     		.2byte	0x42b
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 140


 4426 1555 00000000 		.4byte	.LFB10
 4427 1559 3C000000 		.4byte	.LFE10-.LFB10
 4428 155d 01       		.uleb128 0x1
 4429 155e 9C       		.byte	0x9c
 4430 155f 86150000 		.4byte	0x1586
 4431 1563 17       		.uleb128 0x17
 4432 1564 9E060000 		.4byte	.LASF261
 4433 1568 01       		.byte	0x1
 4434 1569 2B04     		.2byte	0x42b
 4435 156b 53050000 		.4byte	0x553
 4436 156f E8090000 		.4byte	.LLST67
 4437 1573 1B       		.uleb128 0x1b
 4438 1574 14000000 		.4byte	.LVL216
 4439 1578 FB140000 		.4byte	0x14fb
 4440 157c 1B       		.uleb128 0x1b
 4441 157d 1C000000 		.4byte	.LVL217
 4442 1581 68170000 		.4byte	0x1768
 4443 1585 00       		.byte	0
 4444 1586 1A       		.uleb128 0x1a
 4445 1587 39130000 		.4byte	.LASF268
 4446 158b 01       		.byte	0x1
 4447 158c C302     		.2byte	0x2c3
 4448 158e E6000000 		.4byte	0xe6
 4449 1592 00000000 		.4byte	.LFB7
 4450 1596 2C000000 		.4byte	.LFE7-.LFB7
 4451 159a 01       		.uleb128 0x1
 4452 159b 9C       		.byte	0x9c
 4453 159c EC150000 		.4byte	0x15ec
 4454 15a0 1F       		.uleb128 0x1f
 4455 15a1 FF010000 		.4byte	.LASF269
 4456 15a5 01       		.byte	0x1
 4457 15a6 C502     		.2byte	0x2c5
 4458 15a8 E6000000 		.4byte	0xe6
 4459 15ac 00       		.byte	0
 4460 15ad 1B       		.uleb128 0x1b
 4461 15ae 06000000 		.4byte	.LVL219
 4462 15b2 F8120000 		.4byte	0x12f8
 4463 15b6 1C       		.uleb128 0x1c
 4464 15b7 0C000000 		.4byte	.LVL220
 4465 15bb 7A0E0000 		.4byte	0xe7a
 4466 15bf C9150000 		.4byte	0x15c9
 4467 15c3 1D       		.uleb128 0x1d
 4468 15c4 01       		.uleb128 0x1
 4469 15c5 50       		.byte	0x50
 4470 15c6 01       		.uleb128 0x1
 4471 15c7 30       		.byte	0x30
 4472 15c8 00       		.byte	0
 4473 15c9 1C       		.uleb128 0x1c
 4474 15ca 1C000000 		.4byte	.LVL221
 4475 15ce 4D150000 		.4byte	0x154d
 4476 15d2 DC150000 		.4byte	0x15dc
 4477 15d6 1D       		.uleb128 0x1d
 4478 15d7 01       		.uleb128 0x1
 4479 15d8 50       		.byte	0x50
 4480 15d9 01       		.uleb128 0x1
 4481 15da 30       		.byte	0x30
 4482 15db 00       		.byte	0
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 141


 4483 15dc 20       		.uleb128 0x20
 4484 15dd 22000000 		.4byte	.LVL222
 4485 15e1 4D150000 		.4byte	0x154d
 4486 15e5 1D       		.uleb128 0x1d
 4487 15e6 01       		.uleb128 0x1
 4488 15e7 50       		.byte	0x50
 4489 15e8 01       		.uleb128 0x1
 4490 15e9 31       		.byte	0x31
 4491 15ea 00       		.byte	0
 4492 15eb 00       		.byte	0
 4493 15ec 26       		.uleb128 0x26
 4494 15ed D90A0000 		.4byte	.LASF270
 4495 15f1 07       		.byte	0x7
 4496 15f2 AD04     		.2byte	0x4ad
 4497 15f4 4E090000 		.4byte	0x94e
 4498 15f8 26       		.uleb128 0x26
 4499 15f9 150F0000 		.4byte	.LASF271
 4500 15fd 07       		.byte	0x7
 4501 15fe AE04     		.2byte	0x4ae
 4502 1600 04160000 		.4byte	0x1604
 4503 1604 21       		.uleb128 0x21
 4504 1605 0D0B0000 		.4byte	0xb0d
 4505 1609 0E       		.uleb128 0xe
 4506 160a 750E0000 		.4byte	0xe75
 4507 160e 19160000 		.4byte	0x1619
 4508 1612 0F       		.uleb128 0xf
 4509 1613 2D060000 		.4byte	0x62d
 4510 1617 0D       		.byte	0xd
 4511 1618 00       		.byte	0
 4512 1619 26       		.uleb128 0x26
 4513 161a AD120000 		.4byte	.LASF272
 4514 161e 07       		.byte	0x7
 4515 161f AF04     		.2byte	0x4af
 4516 1621 25160000 		.4byte	0x1625
 4517 1625 21       		.uleb128 0x21
 4518 1626 09160000 		.4byte	0x1609
 4519 162a 27       		.uleb128 0x27
 4520 162b E4000000 		.4byte	.LASF273
 4521 162f 01       		.byte	0x1
 4522 1630 BC       		.byte	0xbc
 4523 1631 F2000000 		.4byte	0xf2
 4524 1635 05       		.uleb128 0x5
 4525 1636 03       		.byte	0x3
 4526 1637 00000000 		.4byte	CapSense_widgetIndex
 4527 163b 27       		.uleb128 0x27
 4528 163c 41050000 		.4byte	.LASF274
 4529 1640 01       		.byte	0x1
 4530 1641 BD       		.byte	0xbd
 4531 1642 F2000000 		.4byte	0xf2
 4532 1646 05       		.uleb128 0x5
 4533 1647 03       		.byte	0x3
 4534 1648 00000000 		.4byte	CapSense_sensorIndex
 4535 164c 27       		.uleb128 0x27
 4536 164d B2130000 		.4byte	.LASF275
 4537 1651 01       		.byte	0x1
 4538 1652 BE       		.byte	0xbe
 4539 1653 AD000000 		.4byte	0xad
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 142


 4540 1657 05       		.uleb128 0x5
 4541 1658 03       		.byte	0x3
 4542 1659 00000000 		.4byte	CapSense_requestScanAllWidget
 4543 165d 27       		.uleb128 0x27
 4544 165e 28120000 		.4byte	.LASF276
 4545 1662 01       		.byte	0x1
 4546 1663 C1       		.byte	0xc1
 4547 1664 CE0A0000 		.4byte	0xace
 4548 1668 05       		.uleb128 0x5
 4549 1669 03       		.byte	0x3
 4550 166a 00000000 		.4byte	CapSense_curRamSnsPtr
 4551 166e 27       		.uleb128 0x27
 4552 166f A20F0000 		.4byte	.LASF277
 4553 1673 01       		.byte	0x1
 4554 1674 AF       		.byte	0xaf
 4555 1675 53050000 		.4byte	0x553
 4556 1679 05       		.uleb128 0x5
 4557 167a 03       		.byte	0x3
 4558 167b 00000000 		.4byte	CapSense_currentSenseMethod
 4559 167f 27       		.uleb128 0x27
 4560 1680 4A120000 		.4byte	.LASF278
 4561 1684 01       		.byte	0x1
 4562 1685 B8       		.byte	0xb8
 4563 1686 90160000 		.4byte	0x1690
 4564 168a 05       		.uleb128 0x5
 4565 168b 03       		.byte	0x3
 4566 168c 00000000 		.4byte	CapSense_scanFreqIndex
 4567 1690 21       		.uleb128 0x21
 4568 1691 AD000000 		.4byte	0xad
 4569 1695 27       		.uleb128 0x27
 4570 1696 B40B0000 		.4byte	.LASF279
 4571 169a 01       		.byte	0x1
 4572 169b D0       		.byte	0xd0
 4573 169c 6F0E0000 		.4byte	0xe6f
 4574 16a0 05       		.uleb128 0x5
 4575 16a1 03       		.byte	0x3
 4576 16a2 00000000 		.4byte	CapSense_curSnsIOPtr
 4577 16a6 0E       		.uleb128 0xe
 4578 16a7 B6160000 		.4byte	0x16b6
 4579 16ab B6160000 		.4byte	0x16b6
 4580 16af 0F       		.uleb128 0xf
 4581 16b0 2D060000 		.4byte	0x62d
 4582 16b4 05       		.byte	0x5
 4583 16b5 00       		.byte	0
 4584 16b6 21       		.uleb128 0x21
 4585 16b7 770B0000 		.4byte	0xb77
 4586 16bb 27       		.uleb128 0x27
 4587 16bc F4130000 		.4byte	.LASF280
 4588 16c0 01       		.byte	0x1
 4589 16c1 D2       		.byte	0xd2
 4590 16c2 CC160000 		.4byte	0x16cc
 4591 16c6 05       		.uleb128 0x5
 4592 16c7 03       		.byte	0x3
 4593 16c8 00000000 		.4byte	CapSense_idacGainTable
 4594 16cc 21       		.uleb128 0x21
 4595 16cd A6160000 		.4byte	0x16a6
 4596 16d1 28       		.uleb128 0x28
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 143


 4597 16d2 D9040000 		.4byte	.LASF281
 4598 16d6 D9040000 		.4byte	.LASF281
 4599 16da 09       		.byte	0x9
 4600 16db 8801     		.2byte	0x188
 4601 16dd 28       		.uleb128 0x28
 4602 16de 7B110000 		.4byte	.LASF282
 4603 16e2 7B110000 		.4byte	.LASF282
 4604 16e6 09       		.byte	0x9
 4605 16e7 8A01     		.2byte	0x18a
 4606 16e9 28       		.uleb128 0x28
 4607 16ea D4050000 		.4byte	.LASF283
 4608 16ee D4050000 		.4byte	.LASF283
 4609 16f2 09       		.byte	0x9
 4610 16f3 8901     		.2byte	0x189
 4611 16f5 28       		.uleb128 0x28
 4612 16f6 260F0000 		.4byte	.LASF284
 4613 16fa 260F0000 		.4byte	.LASF284
 4614 16fe 09       		.byte	0x9
 4615 16ff 8B01     		.2byte	0x18b
 4616 1701 29       		.uleb128 0x29
 4617 1702 11120000 		.4byte	.LASF285
 4618 1706 11120000 		.4byte	.LASF285
 4619 170a 0A       		.byte	0xa
 4620 170b F8       		.byte	0xf8
 4621 170c 29       		.uleb128 0x29
 4622 170d D7070000 		.4byte	.LASF286
 4623 1711 D7070000 		.4byte	.LASF286
 4624 1715 0A       		.byte	0xa
 4625 1716 F9       		.byte	0xf9
 4626 1717 28       		.uleb128 0x28
 4627 1718 6F0F0000 		.4byte	.LASF287
 4628 171c 6F0F0000 		.4byte	.LASF287
 4629 1720 09       		.byte	0x9
 4630 1721 9101     		.2byte	0x191
 4631 1723 29       		.uleb128 0x29
 4632 1724 3A100000 		.4byte	.LASF288
 4633 1728 3A100000 		.4byte	.LASF288
 4634 172c 0B       		.byte	0xb
 4635 172d 18       		.byte	0x18
 4636 172e 28       		.uleb128 0x28
 4637 172f 940E0000 		.4byte	.LASF289
 4638 1733 940E0000 		.4byte	.LASF289
 4639 1737 09       		.byte	0x9
 4640 1738 8E01     		.2byte	0x18e
 4641 173a 28       		.uleb128 0x28
 4642 173b 740C0000 		.4byte	.LASF290
 4643 173f 740C0000 		.4byte	.LASF290
 4644 1743 09       		.byte	0x9
 4645 1744 AE01     		.2byte	0x1ae
 4646 1746 29       		.uleb128 0x29
 4647 1747 2F0C0000 		.4byte	.LASF291
 4648 174b 2F0C0000 		.4byte	.LASF291
 4649 174f 0A       		.byte	0xa
 4650 1750 ED       		.byte	0xed
 4651 1751 29       		.uleb128 0x29
 4652 1752 0A020000 		.4byte	.LASF292
 4653 1756 0A020000 		.4byte	.LASF292
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 144


 4654 175a 0A       		.byte	0xa
 4655 175b FA       		.byte	0xfa
 4656 175c 28       		.uleb128 0x28
 4657 175d C50E0000 		.4byte	.LASF293
 4658 1761 C50E0000 		.4byte	.LASF293
 4659 1765 09       		.byte	0x9
 4660 1766 A501     		.2byte	0x1a5
 4661 1768 28       		.uleb128 0x28
 4662 1769 510C0000 		.4byte	.LASF294
 4663 176d 510C0000 		.4byte	.LASF294
 4664 1771 09       		.byte	0x9
 4665 1772 A101     		.2byte	0x1a1
 4666 1774 00       		.byte	0
 4667              		.section	.debug_abbrev,"",%progbits
 4668              	.Ldebug_abbrev0:
 4669 0000 01       		.uleb128 0x1
 4670 0001 11       		.uleb128 0x11
 4671 0002 01       		.byte	0x1
 4672 0003 25       		.uleb128 0x25
 4673 0004 0E       		.uleb128 0xe
 4674 0005 13       		.uleb128 0x13
 4675 0006 0B       		.uleb128 0xb
 4676 0007 03       		.uleb128 0x3
 4677 0008 0E       		.uleb128 0xe
 4678 0009 1B       		.uleb128 0x1b
 4679 000a 0E       		.uleb128 0xe
 4680 000b 55       		.uleb128 0x55
 4681 000c 17       		.uleb128 0x17
 4682 000d 11       		.uleb128 0x11
 4683 000e 01       		.uleb128 0x1
 4684 000f 10       		.uleb128 0x10
 4685 0010 17       		.uleb128 0x17
 4686 0011 00       		.byte	0
 4687 0012 00       		.byte	0
 4688 0013 02       		.uleb128 0x2
 4689 0014 24       		.uleb128 0x24
 4690 0015 00       		.byte	0
 4691 0016 0B       		.uleb128 0xb
 4692 0017 0B       		.uleb128 0xb
 4693 0018 3E       		.uleb128 0x3e
 4694 0019 0B       		.uleb128 0xb
 4695 001a 03       		.uleb128 0x3
 4696 001b 0E       		.uleb128 0xe
 4697 001c 00       		.byte	0
 4698 001d 00       		.byte	0
 4699 001e 03       		.uleb128 0x3
 4700 001f 16       		.uleb128 0x16
 4701 0020 00       		.byte	0
 4702 0021 03       		.uleb128 0x3
 4703 0022 0E       		.uleb128 0xe
 4704 0023 3A       		.uleb128 0x3a
 4705 0024 0B       		.uleb128 0xb
 4706 0025 3B       		.uleb128 0x3b
 4707 0026 0B       		.uleb128 0xb
 4708 0027 49       		.uleb128 0x49
 4709 0028 13       		.uleb128 0x13
 4710 0029 00       		.byte	0
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 145


 4711 002a 00       		.byte	0
 4712 002b 04       		.uleb128 0x4
 4713 002c 24       		.uleb128 0x24
 4714 002d 00       		.byte	0
 4715 002e 0B       		.uleb128 0xb
 4716 002f 0B       		.uleb128 0xb
 4717 0030 3E       		.uleb128 0x3e
 4718 0031 0B       		.uleb128 0xb
 4719 0032 03       		.uleb128 0x3
 4720 0033 08       		.uleb128 0x8
 4721 0034 00       		.byte	0
 4722 0035 00       		.byte	0
 4723 0036 05       		.uleb128 0x5
 4724 0037 16       		.uleb128 0x16
 4725 0038 00       		.byte	0
 4726 0039 03       		.uleb128 0x3
 4727 003a 0E       		.uleb128 0xe
 4728 003b 3A       		.uleb128 0x3a
 4729 003c 0B       		.uleb128 0xb
 4730 003d 3B       		.uleb128 0x3b
 4731 003e 05       		.uleb128 0x5
 4732 003f 49       		.uleb128 0x49
 4733 0040 13       		.uleb128 0x13
 4734 0041 00       		.byte	0
 4735 0042 00       		.byte	0
 4736 0043 06       		.uleb128 0x6
 4737 0044 35       		.uleb128 0x35
 4738 0045 00       		.byte	0
 4739 0046 49       		.uleb128 0x49
 4740 0047 13       		.uleb128 0x13
 4741 0048 00       		.byte	0
 4742 0049 00       		.byte	0
 4743 004a 07       		.uleb128 0x7
 4744 004b 0F       		.uleb128 0xf
 4745 004c 00       		.byte	0
 4746 004d 0B       		.uleb128 0xb
 4747 004e 0B       		.uleb128 0xb
 4748 004f 49       		.uleb128 0x49
 4749 0050 13       		.uleb128 0x13
 4750 0051 00       		.byte	0
 4751 0052 00       		.byte	0
 4752 0053 08       		.uleb128 0x8
 4753 0054 15       		.uleb128 0x15
 4754 0055 00       		.byte	0
 4755 0056 27       		.uleb128 0x27
 4756 0057 19       		.uleb128 0x19
 4757 0058 00       		.byte	0
 4758 0059 00       		.byte	0
 4759 005a 09       		.uleb128 0x9
 4760 005b 13       		.uleb128 0x13
 4761 005c 01       		.byte	0x1
 4762 005d 0B       		.uleb128 0xb
 4763 005e 0B       		.uleb128 0xb
 4764 005f 3A       		.uleb128 0x3a
 4765 0060 0B       		.uleb128 0xb
 4766 0061 3B       		.uleb128 0x3b
 4767 0062 0B       		.uleb128 0xb
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 146


 4768 0063 01       		.uleb128 0x1
 4769 0064 13       		.uleb128 0x13
 4770 0065 00       		.byte	0
 4771 0066 00       		.byte	0
 4772 0067 0A       		.uleb128 0xa
 4773 0068 0D       		.uleb128 0xd
 4774 0069 00       		.byte	0
 4775 006a 03       		.uleb128 0x3
 4776 006b 0E       		.uleb128 0xe
 4777 006c 3A       		.uleb128 0x3a
 4778 006d 0B       		.uleb128 0xb
 4779 006e 3B       		.uleb128 0x3b
 4780 006f 0B       		.uleb128 0xb
 4781 0070 49       		.uleb128 0x49
 4782 0071 13       		.uleb128 0x13
 4783 0072 38       		.uleb128 0x38
 4784 0073 0B       		.uleb128 0xb
 4785 0074 00       		.byte	0
 4786 0075 00       		.byte	0
 4787 0076 0B       		.uleb128 0xb
 4788 0077 0D       		.uleb128 0xd
 4789 0078 00       		.byte	0
 4790 0079 03       		.uleb128 0x3
 4791 007a 0E       		.uleb128 0xe
 4792 007b 3A       		.uleb128 0x3a
 4793 007c 0B       		.uleb128 0xb
 4794 007d 3B       		.uleb128 0x3b
 4795 007e 05       		.uleb128 0x5
 4796 007f 49       		.uleb128 0x49
 4797 0080 13       		.uleb128 0x13
 4798 0081 38       		.uleb128 0x38
 4799 0082 0B       		.uleb128 0xb
 4800 0083 00       		.byte	0
 4801 0084 00       		.byte	0
 4802 0085 0C       		.uleb128 0xc
 4803 0086 04       		.uleb128 0x4
 4804 0087 01       		.byte	0x1
 4805 0088 0B       		.uleb128 0xb
 4806 0089 0B       		.uleb128 0xb
 4807 008a 49       		.uleb128 0x49
 4808 008b 13       		.uleb128 0x13
 4809 008c 3A       		.uleb128 0x3a
 4810 008d 0B       		.uleb128 0xb
 4811 008e 3B       		.uleb128 0x3b
 4812 008f 0B       		.uleb128 0xb
 4813 0090 01       		.uleb128 0x1
 4814 0091 13       		.uleb128 0x13
 4815 0092 00       		.byte	0
 4816 0093 00       		.byte	0
 4817 0094 0D       		.uleb128 0xd
 4818 0095 28       		.uleb128 0x28
 4819 0096 00       		.byte	0
 4820 0097 03       		.uleb128 0x3
 4821 0098 0E       		.uleb128 0xe
 4822 0099 1C       		.uleb128 0x1c
 4823 009a 0B       		.uleb128 0xb
 4824 009b 00       		.byte	0
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 147


 4825 009c 00       		.byte	0
 4826 009d 0E       		.uleb128 0xe
 4827 009e 01       		.uleb128 0x1
 4828 009f 01       		.byte	0x1
 4829 00a0 49       		.uleb128 0x49
 4830 00a1 13       		.uleb128 0x13
 4831 00a2 01       		.uleb128 0x1
 4832 00a3 13       		.uleb128 0x13
 4833 00a4 00       		.byte	0
 4834 00a5 00       		.byte	0
 4835 00a6 0F       		.uleb128 0xf
 4836 00a7 21       		.uleb128 0x21
 4837 00a8 00       		.byte	0
 4838 00a9 49       		.uleb128 0x49
 4839 00aa 13       		.uleb128 0x13
 4840 00ab 2F       		.uleb128 0x2f
 4841 00ac 0B       		.uleb128 0xb
 4842 00ad 00       		.byte	0
 4843 00ae 00       		.byte	0
 4844 00af 10       		.uleb128 0x10
 4845 00b0 13       		.uleb128 0x13
 4846 00b1 01       		.byte	0x1
 4847 00b2 0B       		.uleb128 0xb
 4848 00b3 0B       		.uleb128 0xb
 4849 00b4 3A       		.uleb128 0x3a
 4850 00b5 0B       		.uleb128 0xb
 4851 00b6 3B       		.uleb128 0x3b
 4852 00b7 05       		.uleb128 0x5
 4853 00b8 01       		.uleb128 0x1
 4854 00b9 13       		.uleb128 0x13
 4855 00ba 00       		.byte	0
 4856 00bb 00       		.byte	0
 4857 00bc 11       		.uleb128 0x11
 4858 00bd 0D       		.uleb128 0xd
 4859 00be 00       		.byte	0
 4860 00bf 03       		.uleb128 0x3
 4861 00c0 08       		.uleb128 0x8
 4862 00c1 3A       		.uleb128 0x3a
 4863 00c2 0B       		.uleb128 0xb
 4864 00c3 3B       		.uleb128 0x3b
 4865 00c4 05       		.uleb128 0x5
 4866 00c5 49       		.uleb128 0x49
 4867 00c6 13       		.uleb128 0x13
 4868 00c7 38       		.uleb128 0x38
 4869 00c8 0B       		.uleb128 0xb
 4870 00c9 00       		.byte	0
 4871 00ca 00       		.byte	0
 4872 00cb 12       		.uleb128 0x12
 4873 00cc 13       		.uleb128 0x13
 4874 00cd 01       		.byte	0x1
 4875 00ce 0B       		.uleb128 0xb
 4876 00cf 05       		.uleb128 0x5
 4877 00d0 3A       		.uleb128 0x3a
 4878 00d1 0B       		.uleb128 0xb
 4879 00d2 3B       		.uleb128 0x3b
 4880 00d3 05       		.uleb128 0x5
 4881 00d4 01       		.uleb128 0x1
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 148


 4882 00d5 13       		.uleb128 0x13
 4883 00d6 00       		.byte	0
 4884 00d7 00       		.byte	0
 4885 00d8 13       		.uleb128 0x13
 4886 00d9 0D       		.uleb128 0xd
 4887 00da 00       		.byte	0
 4888 00db 03       		.uleb128 0x3
 4889 00dc 0E       		.uleb128 0xe
 4890 00dd 3A       		.uleb128 0x3a
 4891 00de 0B       		.uleb128 0xb
 4892 00df 3B       		.uleb128 0x3b
 4893 00e0 05       		.uleb128 0x5
 4894 00e1 49       		.uleb128 0x49
 4895 00e2 13       		.uleb128 0x13
 4896 00e3 38       		.uleb128 0x38
 4897 00e4 05       		.uleb128 0x5
 4898 00e5 00       		.byte	0
 4899 00e6 00       		.byte	0
 4900 00e7 14       		.uleb128 0x14
 4901 00e8 26       		.uleb128 0x26
 4902 00e9 00       		.byte	0
 4903 00ea 00       		.byte	0
 4904 00eb 00       		.byte	0
 4905 00ec 15       		.uleb128 0x15
 4906 00ed 0F       		.uleb128 0xf
 4907 00ee 00       		.byte	0
 4908 00ef 0B       		.uleb128 0xb
 4909 00f0 0B       		.uleb128 0xb
 4910 00f1 00       		.byte	0
 4911 00f2 00       		.byte	0
 4912 00f3 16       		.uleb128 0x16
 4913 00f4 2E       		.uleb128 0x2e
 4914 00f5 01       		.byte	0x1
 4915 00f6 03       		.uleb128 0x3
 4916 00f7 0E       		.uleb128 0xe
 4917 00f8 3A       		.uleb128 0x3a
 4918 00f9 0B       		.uleb128 0xb
 4919 00fa 3B       		.uleb128 0x3b
 4920 00fb 05       		.uleb128 0x5
 4921 00fc 27       		.uleb128 0x27
 4922 00fd 19       		.uleb128 0x19
 4923 00fe 49       		.uleb128 0x49
 4924 00ff 13       		.uleb128 0x13
 4925 0100 11       		.uleb128 0x11
 4926 0101 01       		.uleb128 0x1
 4927 0102 12       		.uleb128 0x12
 4928 0103 06       		.uleb128 0x6
 4929 0104 40       		.uleb128 0x40
 4930 0105 18       		.uleb128 0x18
 4931 0106 9642     		.uleb128 0x2116
 4932 0108 19       		.uleb128 0x19
 4933 0109 01       		.uleb128 0x1
 4934 010a 13       		.uleb128 0x13
 4935 010b 00       		.byte	0
 4936 010c 00       		.byte	0
 4937 010d 17       		.uleb128 0x17
 4938 010e 05       		.uleb128 0x5
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 149


 4939 010f 00       		.byte	0
 4940 0110 03       		.uleb128 0x3
 4941 0111 0E       		.uleb128 0xe
 4942 0112 3A       		.uleb128 0x3a
 4943 0113 0B       		.uleb128 0xb
 4944 0114 3B       		.uleb128 0x3b
 4945 0115 05       		.uleb128 0x5
 4946 0116 49       		.uleb128 0x49
 4947 0117 13       		.uleb128 0x13
 4948 0118 02       		.uleb128 0x2
 4949 0119 17       		.uleb128 0x17
 4950 011a 00       		.byte	0
 4951 011b 00       		.byte	0
 4952 011c 18       		.uleb128 0x18
 4953 011d 34       		.uleb128 0x34
 4954 011e 00       		.byte	0
 4955 011f 03       		.uleb128 0x3
 4956 0120 0E       		.uleb128 0xe
 4957 0121 3A       		.uleb128 0x3a
 4958 0122 0B       		.uleb128 0xb
 4959 0123 3B       		.uleb128 0x3b
 4960 0124 05       		.uleb128 0x5
 4961 0125 49       		.uleb128 0x49
 4962 0126 13       		.uleb128 0x13
 4963 0127 02       		.uleb128 0x2
 4964 0128 17       		.uleb128 0x17
 4965 0129 00       		.byte	0
 4966 012a 00       		.byte	0
 4967 012b 19       		.uleb128 0x19
 4968 012c 2E       		.uleb128 0x2e
 4969 012d 00       		.byte	0
 4970 012e 3F       		.uleb128 0x3f
 4971 012f 19       		.uleb128 0x19
 4972 0130 03       		.uleb128 0x3
 4973 0131 0E       		.uleb128 0xe
 4974 0132 3A       		.uleb128 0x3a
 4975 0133 0B       		.uleb128 0xb
 4976 0134 3B       		.uleb128 0x3b
 4977 0135 0B       		.uleb128 0xb
 4978 0136 27       		.uleb128 0x27
 4979 0137 19       		.uleb128 0x19
 4980 0138 49       		.uleb128 0x49
 4981 0139 13       		.uleb128 0x13
 4982 013a 11       		.uleb128 0x11
 4983 013b 01       		.uleb128 0x1
 4984 013c 12       		.uleb128 0x12
 4985 013d 06       		.uleb128 0x6
 4986 013e 40       		.uleb128 0x40
 4987 013f 18       		.uleb128 0x18
 4988 0140 9742     		.uleb128 0x2117
 4989 0142 19       		.uleb128 0x19
 4990 0143 00       		.byte	0
 4991 0144 00       		.byte	0
 4992 0145 1A       		.uleb128 0x1a
 4993 0146 2E       		.uleb128 0x2e
 4994 0147 01       		.byte	0x1
 4995 0148 3F       		.uleb128 0x3f
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 150


 4996 0149 19       		.uleb128 0x19
 4997 014a 03       		.uleb128 0x3
 4998 014b 0E       		.uleb128 0xe
 4999 014c 3A       		.uleb128 0x3a
 5000 014d 0B       		.uleb128 0xb
 5001 014e 3B       		.uleb128 0x3b
 5002 014f 05       		.uleb128 0x5
 5003 0150 27       		.uleb128 0x27
 5004 0151 19       		.uleb128 0x19
 5005 0152 49       		.uleb128 0x49
 5006 0153 13       		.uleb128 0x13
 5007 0154 11       		.uleb128 0x11
 5008 0155 01       		.uleb128 0x1
 5009 0156 12       		.uleb128 0x12
 5010 0157 06       		.uleb128 0x6
 5011 0158 40       		.uleb128 0x40
 5012 0159 18       		.uleb128 0x18
 5013 015a 9742     		.uleb128 0x2117
 5014 015c 19       		.uleb128 0x19
 5015 015d 01       		.uleb128 0x1
 5016 015e 13       		.uleb128 0x13
 5017 015f 00       		.byte	0
 5018 0160 00       		.byte	0
 5019 0161 1B       		.uleb128 0x1b
 5020 0162 898201   		.uleb128 0x4109
 5021 0165 00       		.byte	0
 5022 0166 11       		.uleb128 0x11
 5023 0167 01       		.uleb128 0x1
 5024 0168 31       		.uleb128 0x31
 5025 0169 13       		.uleb128 0x13
 5026 016a 00       		.byte	0
 5027 016b 00       		.byte	0
 5028 016c 1C       		.uleb128 0x1c
 5029 016d 898201   		.uleb128 0x4109
 5030 0170 01       		.byte	0x1
 5031 0171 11       		.uleb128 0x11
 5032 0172 01       		.uleb128 0x1
 5033 0173 31       		.uleb128 0x31
 5034 0174 13       		.uleb128 0x13
 5035 0175 01       		.uleb128 0x1
 5036 0176 13       		.uleb128 0x13
 5037 0177 00       		.byte	0
 5038 0178 00       		.byte	0
 5039 0179 1D       		.uleb128 0x1d
 5040 017a 8A8201   		.uleb128 0x410a
 5041 017d 00       		.byte	0
 5042 017e 02       		.uleb128 0x2
 5043 017f 18       		.uleb128 0x18
 5044 0180 9142     		.uleb128 0x2111
 5045 0182 18       		.uleb128 0x18
 5046 0183 00       		.byte	0
 5047 0184 00       		.byte	0
 5048 0185 1E       		.uleb128 0x1e
 5049 0186 2E       		.uleb128 0x2e
 5050 0187 01       		.byte	0x1
 5051 0188 3F       		.uleb128 0x3f
 5052 0189 19       		.uleb128 0x19
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 151


 5053 018a 03       		.uleb128 0x3
 5054 018b 0E       		.uleb128 0xe
 5055 018c 3A       		.uleb128 0x3a
 5056 018d 0B       		.uleb128 0xb
 5057 018e 3B       		.uleb128 0x3b
 5058 018f 05       		.uleb128 0x5
 5059 0190 27       		.uleb128 0x27
 5060 0191 19       		.uleb128 0x19
 5061 0192 11       		.uleb128 0x11
 5062 0193 01       		.uleb128 0x1
 5063 0194 12       		.uleb128 0x12
 5064 0195 06       		.uleb128 0x6
 5065 0196 40       		.uleb128 0x40
 5066 0197 18       		.uleb128 0x18
 5067 0198 9742     		.uleb128 0x2117
 5068 019a 19       		.uleb128 0x19
 5069 019b 01       		.uleb128 0x1
 5070 019c 13       		.uleb128 0x13
 5071 019d 00       		.byte	0
 5072 019e 00       		.byte	0
 5073 019f 1F       		.uleb128 0x1f
 5074 01a0 34       		.uleb128 0x34
 5075 01a1 00       		.byte	0
 5076 01a2 03       		.uleb128 0x3
 5077 01a3 0E       		.uleb128 0xe
 5078 01a4 3A       		.uleb128 0x3a
 5079 01a5 0B       		.uleb128 0xb
 5080 01a6 3B       		.uleb128 0x3b
 5081 01a7 05       		.uleb128 0x5
 5082 01a8 49       		.uleb128 0x49
 5083 01a9 13       		.uleb128 0x13
 5084 01aa 1C       		.uleb128 0x1c
 5085 01ab 0B       		.uleb128 0xb
 5086 01ac 00       		.byte	0
 5087 01ad 00       		.byte	0
 5088 01ae 20       		.uleb128 0x20
 5089 01af 898201   		.uleb128 0x4109
 5090 01b2 01       		.byte	0x1
 5091 01b3 11       		.uleb128 0x11
 5092 01b4 01       		.uleb128 0x1
 5093 01b5 31       		.uleb128 0x31
 5094 01b6 13       		.uleb128 0x13
 5095 01b7 00       		.byte	0
 5096 01b8 00       		.byte	0
 5097 01b9 21       		.uleb128 0x21
 5098 01ba 26       		.uleb128 0x26
 5099 01bb 00       		.byte	0
 5100 01bc 49       		.uleb128 0x49
 5101 01bd 13       		.uleb128 0x13
 5102 01be 00       		.byte	0
 5103 01bf 00       		.byte	0
 5104 01c0 22       		.uleb128 0x22
 5105 01c1 2E       		.uleb128 0x2e
 5106 01c2 00       		.byte	0
 5107 01c3 3F       		.uleb128 0x3f
 5108 01c4 19       		.uleb128 0x19
 5109 01c5 03       		.uleb128 0x3
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 152


 5110 01c6 0E       		.uleb128 0xe
 5111 01c7 3A       		.uleb128 0x3a
 5112 01c8 0B       		.uleb128 0xb
 5113 01c9 3B       		.uleb128 0x3b
 5114 01ca 05       		.uleb128 0x5
 5115 01cb 27       		.uleb128 0x27
 5116 01cc 19       		.uleb128 0x19
 5117 01cd 11       		.uleb128 0x11
 5118 01ce 01       		.uleb128 0x1
 5119 01cf 12       		.uleb128 0x12
 5120 01d0 06       		.uleb128 0x6
 5121 01d1 40       		.uleb128 0x40
 5122 01d2 18       		.uleb128 0x18
 5123 01d3 9742     		.uleb128 0x2117
 5124 01d5 19       		.uleb128 0x19
 5125 01d6 00       		.byte	0
 5126 01d7 00       		.byte	0
 5127 01d8 23       		.uleb128 0x23
 5128 01d9 34       		.uleb128 0x34
 5129 01da 00       		.byte	0
 5130 01db 03       		.uleb128 0x3
 5131 01dc 0E       		.uleb128 0xe
 5132 01dd 3A       		.uleb128 0x3a
 5133 01de 0B       		.uleb128 0xb
 5134 01df 3B       		.uleb128 0x3b
 5135 01e0 05       		.uleb128 0x5
 5136 01e1 49       		.uleb128 0x49
 5137 01e2 13       		.uleb128 0x13
 5138 01e3 02       		.uleb128 0x2
 5139 01e4 18       		.uleb128 0x18
 5140 01e5 00       		.byte	0
 5141 01e6 00       		.byte	0
 5142 01e7 24       		.uleb128 0x24
 5143 01e8 05       		.uleb128 0x5
 5144 01e9 00       		.byte	0
 5145 01ea 03       		.uleb128 0x3
 5146 01eb 0E       		.uleb128 0xe
 5147 01ec 3A       		.uleb128 0x3a
 5148 01ed 0B       		.uleb128 0xb
 5149 01ee 3B       		.uleb128 0x3b
 5150 01ef 05       		.uleb128 0x5
 5151 01f0 49       		.uleb128 0x49
 5152 01f1 13       		.uleb128 0x13
 5153 01f2 02       		.uleb128 0x2
 5154 01f3 18       		.uleb128 0x18
 5155 01f4 00       		.byte	0
 5156 01f5 00       		.byte	0
 5157 01f6 25       		.uleb128 0x25
 5158 01f7 2E       		.uleb128 0x2e
 5159 01f8 01       		.byte	0x1
 5160 01f9 03       		.uleb128 0x3
 5161 01fa 0E       		.uleb128 0xe
 5162 01fb 3A       		.uleb128 0x3a
 5163 01fc 0B       		.uleb128 0xb
 5164 01fd 3B       		.uleb128 0x3b
 5165 01fe 05       		.uleb128 0x5
 5166 01ff 27       		.uleb128 0x27
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 153


 5167 0200 19       		.uleb128 0x19
 5168 0201 11       		.uleb128 0x11
 5169 0202 01       		.uleb128 0x1
 5170 0203 12       		.uleb128 0x12
 5171 0204 06       		.uleb128 0x6
 5172 0205 40       		.uleb128 0x40
 5173 0206 18       		.uleb128 0x18
 5174 0207 9742     		.uleb128 0x2117
 5175 0209 19       		.uleb128 0x19
 5176 020a 01       		.uleb128 0x1
 5177 020b 13       		.uleb128 0x13
 5178 020c 00       		.byte	0
 5179 020d 00       		.byte	0
 5180 020e 26       		.uleb128 0x26
 5181 020f 34       		.uleb128 0x34
 5182 0210 00       		.byte	0
 5183 0211 03       		.uleb128 0x3
 5184 0212 0E       		.uleb128 0xe
 5185 0213 3A       		.uleb128 0x3a
 5186 0214 0B       		.uleb128 0xb
 5187 0215 3B       		.uleb128 0x3b
 5188 0216 05       		.uleb128 0x5
 5189 0217 49       		.uleb128 0x49
 5190 0218 13       		.uleb128 0x13
 5191 0219 3F       		.uleb128 0x3f
 5192 021a 19       		.uleb128 0x19
 5193 021b 3C       		.uleb128 0x3c
 5194 021c 19       		.uleb128 0x19
 5195 021d 00       		.byte	0
 5196 021e 00       		.byte	0
 5197 021f 27       		.uleb128 0x27
 5198 0220 34       		.uleb128 0x34
 5199 0221 00       		.byte	0
 5200 0222 03       		.uleb128 0x3
 5201 0223 0E       		.uleb128 0xe
 5202 0224 3A       		.uleb128 0x3a
 5203 0225 0B       		.uleb128 0xb
 5204 0226 3B       		.uleb128 0x3b
 5205 0227 0B       		.uleb128 0xb
 5206 0228 49       		.uleb128 0x49
 5207 0229 13       		.uleb128 0x13
 5208 022a 3F       		.uleb128 0x3f
 5209 022b 19       		.uleb128 0x19
 5210 022c 02       		.uleb128 0x2
 5211 022d 18       		.uleb128 0x18
 5212 022e 00       		.byte	0
 5213 022f 00       		.byte	0
 5214 0230 28       		.uleb128 0x28
 5215 0231 2E       		.uleb128 0x2e
 5216 0232 00       		.byte	0
 5217 0233 3F       		.uleb128 0x3f
 5218 0234 19       		.uleb128 0x19
 5219 0235 3C       		.uleb128 0x3c
 5220 0236 19       		.uleb128 0x19
 5221 0237 6E       		.uleb128 0x6e
 5222 0238 0E       		.uleb128 0xe
 5223 0239 03       		.uleb128 0x3
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 154


 5224 023a 0E       		.uleb128 0xe
 5225 023b 3A       		.uleb128 0x3a
 5226 023c 0B       		.uleb128 0xb
 5227 023d 3B       		.uleb128 0x3b
 5228 023e 05       		.uleb128 0x5
 5229 023f 00       		.byte	0
 5230 0240 00       		.byte	0
 5231 0241 29       		.uleb128 0x29
 5232 0242 2E       		.uleb128 0x2e
 5233 0243 00       		.byte	0
 5234 0244 3F       		.uleb128 0x3f
 5235 0245 19       		.uleb128 0x19
 5236 0246 3C       		.uleb128 0x3c
 5237 0247 19       		.uleb128 0x19
 5238 0248 6E       		.uleb128 0x6e
 5239 0249 0E       		.uleb128 0xe
 5240 024a 03       		.uleb128 0x3
 5241 024b 0E       		.uleb128 0xe
 5242 024c 3A       		.uleb128 0x3a
 5243 024d 0B       		.uleb128 0xb
 5244 024e 3B       		.uleb128 0x3b
 5245 024f 0B       		.uleb128 0xb
 5246 0250 00       		.byte	0
 5247 0251 00       		.byte	0
 5248 0252 00       		.byte	0
 5249              		.section	.debug_loc,"",%progbits
 5250              	.Ldebug_loc0:
 5251              	.LLST0:
 5252 0000 00000000 		.4byte	.LVL0
 5253 0004 14000000 		.4byte	.LVL3
 5254 0008 0100     		.2byte	0x1
 5255 000a 50       		.byte	0x50
 5256 000b 14000000 		.4byte	.LVL3
 5257 000f 76000000 		.4byte	.LVL9
 5258 0013 0100     		.2byte	0x1
 5259 0015 54       		.byte	0x54
 5260 0016 76000000 		.4byte	.LVL9
 5261 001a 84000000 		.4byte	.LFE21
 5262 001e 0400     		.2byte	0x4
 5263 0020 F3       		.byte	0xf3
 5264 0021 01       		.uleb128 0x1
 5265 0022 50       		.byte	0x50
 5266 0023 9F       		.byte	0x9f
 5267 0024 00000000 		.4byte	0
 5268 0028 00000000 		.4byte	0
 5269              	.LLST1:
 5270 002c 00000000 		.4byte	.LVL0
 5271 0030 12000000 		.4byte	.LVL2
 5272 0034 0100     		.2byte	0x1
 5273 0036 51       		.byte	0x51
 5274 0037 12000000 		.4byte	.LVL2
 5275 003b 76000000 		.4byte	.LVL10
 5276 003f 0100     		.2byte	0x1
 5277 0041 55       		.byte	0x55
 5278 0042 76000000 		.4byte	.LVL10
 5279 0046 84000000 		.4byte	.LFE21
 5280 004a 0400     		.2byte	0x4
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 155


 5281 004c F3       		.byte	0xf3
 5282 004d 01       		.uleb128 0x1
 5283 004e 51       		.byte	0x51
 5284 004f 9F       		.byte	0x9f
 5285 0050 00000000 		.4byte	0
 5286 0054 00000000 		.4byte	0
 5287              	.LLST2:
 5288 0058 06000000 		.4byte	.LVL1
 5289 005c 76000000 		.4byte	.LVL8
 5290 0060 0200     		.2byte	0x2
 5291 0062 30       		.byte	0x30
 5292 0063 9F       		.byte	0x9f
 5293 0064 76000000 		.4byte	.LVL8
 5294 0068 84000000 		.4byte	.LFE21
 5295 006c 0100     		.2byte	0x1
 5296 006e 50       		.byte	0x50
 5297 006f 00000000 		.4byte	0
 5298 0073 00000000 		.4byte	0
 5299              	.LLST3:
 5300 0077 00000000 		.4byte	.LVL11
 5301 007b 20000000 		.4byte	.LVL15
 5302 007f 0100     		.2byte	0x1
 5303 0081 50       		.byte	0x50
 5304 0082 20000000 		.4byte	.LVL15
 5305 0086 23000000 		.4byte	.LVL16-1
 5306 008a 0100     		.2byte	0x1
 5307 008c 51       		.byte	0x51
 5308 008d 23000000 		.4byte	.LVL16-1
 5309 0091 38000000 		.4byte	.LVL21
 5310 0095 0400     		.2byte	0x4
 5311 0097 F3       		.byte	0xf3
 5312 0098 01       		.uleb128 0x1
 5313 0099 50       		.byte	0x50
 5314 009a 9F       		.byte	0x9f
 5315 009b 38000000 		.4byte	.LVL21
 5316 009f 3E000000 		.4byte	.LVL24
 5317 00a3 0100     		.2byte	0x1
 5318 00a5 50       		.byte	0x50
 5319 00a6 3E000000 		.4byte	.LVL24
 5320 00aa 42000000 		.4byte	.LFE22
 5321 00ae 0400     		.2byte	0x4
 5322 00b0 F3       		.byte	0xf3
 5323 00b1 01       		.uleb128 0x1
 5324 00b2 50       		.byte	0x50
 5325 00b3 9F       		.byte	0x9f
 5326 00b4 00000000 		.4byte	0
 5327 00b8 00000000 		.4byte	0
 5328              	.LLST4:
 5329 00bc 00000000 		.4byte	.LVL11
 5330 00c0 1E000000 		.4byte	.LVL14
 5331 00c4 0100     		.2byte	0x1
 5332 00c6 51       		.byte	0x51
 5333 00c7 1E000000 		.4byte	.LVL14
 5334 00cb 38000000 		.4byte	.LVL21
 5335 00cf 0400     		.2byte	0x4
 5336 00d1 F3       		.byte	0xf3
 5337 00d2 01       		.uleb128 0x1
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 156


 5338 00d3 51       		.byte	0x51
 5339 00d4 9F       		.byte	0x9f
 5340 00d5 38000000 		.4byte	.LVL21
 5341 00d9 3E000000 		.4byte	.LVL24
 5342 00dd 0100     		.2byte	0x1
 5343 00df 51       		.byte	0x51
 5344 00e0 3E000000 		.4byte	.LVL24
 5345 00e4 42000000 		.4byte	.LFE22
 5346 00e8 0400     		.2byte	0x4
 5347 00ea F3       		.byte	0xf3
 5348 00eb 01       		.uleb128 0x1
 5349 00ec 51       		.byte	0x51
 5350 00ed 9F       		.byte	0x9f
 5351 00ee 00000000 		.4byte	0
 5352 00f2 00000000 		.4byte	0
 5353              	.LLST5:
 5354 00f6 24000000 		.4byte	.LVL16
 5355 00fa 28000000 		.4byte	.LVL17
 5356 00fe 0200     		.2byte	0x2
 5357 0100 30       		.byte	0x30
 5358 0101 9F       		.byte	0x9f
 5359 0102 28000000 		.4byte	.LVL17
 5360 0106 38000000 		.4byte	.LVL21
 5361 010a 0100     		.2byte	0x1
 5362 010c 53       		.byte	0x53
 5363 010d 3E000000 		.4byte	.LVL24
 5364 0111 42000000 		.4byte	.LFE22
 5365 0115 0100     		.2byte	0x1
 5366 0117 53       		.byte	0x53
 5367 0118 00000000 		.4byte	0
 5368 011c 00000000 		.4byte	0
 5369              	.LLST6:
 5370 0120 10000000 		.4byte	.LVL12
 5371 0124 1C000000 		.4byte	.LVL13
 5372 0128 0100     		.2byte	0x1
 5373 012a 53       		.byte	0x53
 5374 012b 38000000 		.4byte	.LVL21
 5375 012f 3A000000 		.4byte	.LVL22
 5376 0133 0100     		.2byte	0x1
 5377 0135 53       		.byte	0x53
 5378 0136 3C000000 		.4byte	.LVL23
 5379 013a 3E000000 		.4byte	.LVL24
 5380 013e 0100     		.2byte	0x1
 5381 0140 53       		.byte	0x53
 5382 0141 00000000 		.4byte	0
 5383 0145 00000000 		.4byte	0
 5384              	.LLST7:
 5385 0149 24000000 		.4byte	.LVL16
 5386 014d 38000000 		.4byte	.LVL21
 5387 0151 0100     		.2byte	0x1
 5388 0153 50       		.byte	0x50
 5389 0154 00000000 		.4byte	0
 5390 0158 00000000 		.4byte	0
 5391              	.LLST8:
 5392 015c 00000000 		.4byte	.LVL25
 5393 0160 37000000 		.4byte	.LVL27-1
 5394 0164 0100     		.2byte	0x1
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 157


 5395 0166 50       		.byte	0x50
 5396 0167 37000000 		.4byte	.LVL27-1
 5397 016b 40000000 		.4byte	.LFE2
 5398 016f 0400     		.2byte	0x4
 5399 0171 F3       		.byte	0xf3
 5400 0172 01       		.uleb128 0x1
 5401 0173 50       		.byte	0x50
 5402 0174 9F       		.byte	0x9f
 5403 0175 00000000 		.4byte	0
 5404 0179 00000000 		.4byte	0
 5405              	.LLST9:
 5406 017d 30000000 		.4byte	.LVL26
 5407 0181 3A000000 		.4byte	.LVL28
 5408 0185 0100     		.2byte	0x1
 5409 0187 54       		.byte	0x54
 5410 0188 3A000000 		.4byte	.LVL28
 5411 018c 40000000 		.4byte	.LFE2
 5412 0190 0100     		.2byte	0x1
 5413 0192 50       		.byte	0x50
 5414 0193 00000000 		.4byte	0
 5415 0197 00000000 		.4byte	0
 5416              	.LLST10:
 5417 019b 02000000 		.4byte	.LVL29
 5418 019f 22000000 		.4byte	.LVL31
 5419 01a3 0200     		.2byte	0x2
 5420 01a5 30       		.byte	0x30
 5421 01a6 9F       		.byte	0x9f
 5422 01a7 22000000 		.4byte	.LVL31
 5423 01ab 2C000000 		.4byte	.LFE3
 5424 01af 0100     		.2byte	0x1
 5425 01b1 50       		.byte	0x50
 5426 01b2 00000000 		.4byte	0
 5427 01b6 00000000 		.4byte	0
 5428              	.LLST11:
 5429 01ba 02000000 		.4byte	.LVL32
 5430 01be 12000000 		.4byte	.LVL33
 5431 01c2 0300     		.2byte	0x3
 5432 01c4 09       		.byte	0x9
 5433 01c5 FF       		.byte	0xff
 5434 01c6 9F       		.byte	0x9f
 5435 01c7 12000000 		.4byte	.LVL33
 5436 01cb 14000000 		.4byte	.LVL34
 5437 01cf 0100     		.2byte	0x1
 5438 01d1 50       		.byte	0x50
 5439 01d2 18000000 		.4byte	.LVL35
 5440 01d6 25000000 		.4byte	.LVL36-1
 5441 01da 0100     		.2byte	0x1
 5442 01dc 50       		.byte	0x50
 5443 01dd 26000000 		.4byte	.LVL36
 5444 01e1 30000000 		.4byte	.LVL38
 5445 01e5 0100     		.2byte	0x1
 5446 01e7 50       		.byte	0x50
 5447 01e8 30000000 		.4byte	.LVL38
 5448 01ec 32000000 		.4byte	.LVL39
 5449 01f0 0300     		.2byte	0x3
 5450 01f2 09       		.byte	0x9
 5451 01f3 FF       		.byte	0xff
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 158


 5452 01f4 9F       		.byte	0x9f
 5453 01f5 32000000 		.4byte	.LVL39
 5454 01f9 3C000000 		.4byte	.LFE4
 5455 01fd 0100     		.2byte	0x1
 5456 01ff 50       		.byte	0x50
 5457 0200 00000000 		.4byte	0
 5458 0204 00000000 		.4byte	0
 5459              	.LLST12:
 5460 0208 12000000 		.4byte	.LVL33
 5461 020c 30000000 		.4byte	.LVL38
 5462 0210 0100     		.2byte	0x1
 5463 0212 54       		.byte	0x54
 5464 0213 00000000 		.4byte	0
 5465 0217 00000000 		.4byte	0
 5466              	.LLST13:
 5467 021b 00000000 		.4byte	.LVL40
 5468 021f 49000000 		.4byte	.LVL42-1
 5469 0223 0100     		.2byte	0x1
 5470 0225 50       		.byte	0x50
 5471 0226 49000000 		.4byte	.LVL42-1
 5472 022a 58000000 		.4byte	.LFE5
 5473 022e 0400     		.2byte	0x4
 5474 0230 F3       		.byte	0xf3
 5475 0231 01       		.uleb128 0x1
 5476 0232 50       		.byte	0x50
 5477 0233 9F       		.byte	0x9f
 5478 0234 00000000 		.4byte	0
 5479 0238 00000000 		.4byte	0
 5480              	.LLST14:
 5481 023c 00000000 		.4byte	.LVL40
 5482 0240 49000000 		.4byte	.LVL42-1
 5483 0244 0100     		.2byte	0x1
 5484 0246 51       		.byte	0x51
 5485 0247 49000000 		.4byte	.LVL42-1
 5486 024b 58000000 		.4byte	.LFE5
 5487 024f 0400     		.2byte	0x4
 5488 0251 F3       		.byte	0xf3
 5489 0252 01       		.uleb128 0x1
 5490 0253 51       		.byte	0x51
 5491 0254 9F       		.byte	0x9f
 5492 0255 00000000 		.4byte	0
 5493 0259 00000000 		.4byte	0
 5494              	.LLST15:
 5495 025d 42000000 		.4byte	.LVL41
 5496 0261 4C000000 		.4byte	.LVL43
 5497 0265 0100     		.2byte	0x1
 5498 0267 54       		.byte	0x54
 5499 0268 4C000000 		.4byte	.LVL43
 5500 026c 58000000 		.4byte	.LFE5
 5501 0270 0100     		.2byte	0x1
 5502 0272 50       		.byte	0x50
 5503 0273 00000000 		.4byte	0
 5504 0277 00000000 		.4byte	0
 5505              	.LLST16:
 5506 027b 02000000 		.4byte	.LVL44
 5507 027f 22000000 		.4byte	.LVL46
 5508 0283 0200     		.2byte	0x2
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 159


 5509 0285 30       		.byte	0x30
 5510 0286 9F       		.byte	0x9f
 5511 0287 22000000 		.4byte	.LVL46
 5512 028b 2C000000 		.4byte	.LFE6
 5513 028f 0100     		.2byte	0x1
 5514 0291 50       		.byte	0x50
 5515 0292 00000000 		.4byte	0
 5516 0296 00000000 		.4byte	0
 5517              	.LLST17:
 5518 029a 00000000 		.4byte	.LVL47
 5519 029e 08000000 		.4byte	.LVL48
 5520 02a2 0100     		.2byte	0x1
 5521 02a4 50       		.byte	0x50
 5522 02a5 08000000 		.4byte	.LVL48
 5523 02a9 9C000000 		.4byte	.LFE8
 5524 02ad 0400     		.2byte	0x4
 5525 02af F3       		.byte	0xf3
 5526 02b0 01       		.uleb128 0x1
 5527 02b1 50       		.byte	0x50
 5528 02b2 9F       		.byte	0x9f
 5529 02b3 00000000 		.4byte	0
 5530 02b7 00000000 		.4byte	0
 5531              	.LLST18:
 5532 02bb 00000000 		.4byte	.LVL47
 5533 02bf 10000000 		.4byte	.LVL49
 5534 02c3 0100     		.2byte	0x1
 5535 02c5 51       		.byte	0x51
 5536 02c6 10000000 		.4byte	.LVL49
 5537 02ca 9C000000 		.4byte	.LFE8
 5538 02ce 0400     		.2byte	0x4
 5539 02d0 F3       		.byte	0xf3
 5540 02d1 01       		.uleb128 0x1
 5541 02d2 51       		.byte	0x51
 5542 02d3 9F       		.byte	0x9f
 5543 02d4 00000000 		.4byte	0
 5544 02d8 00000000 		.4byte	0
 5545              	.LLST19:
 5546 02dc 00000000 		.4byte	.LVL47
 5547 02e0 18000000 		.4byte	.LVL51
 5548 02e4 0100     		.2byte	0x1
 5549 02e6 52       		.byte	0x52
 5550 02e7 18000000 		.4byte	.LVL51
 5551 02eb 96000000 		.4byte	.LVL63
 5552 02ef 0100     		.2byte	0x1
 5553 02f1 56       		.byte	0x56
 5554 02f2 96000000 		.4byte	.LVL63
 5555 02f6 9C000000 		.4byte	.LFE8
 5556 02fa 0400     		.2byte	0x4
 5557 02fc F3       		.byte	0xf3
 5558 02fd 01       		.uleb128 0x1
 5559 02fe 52       		.byte	0x52
 5560 02ff 9F       		.byte	0x9f
 5561 0300 00000000 		.4byte	0
 5562 0304 00000000 		.4byte	0
 5563              	.LLST20:
 5564 0308 14000000 		.4byte	.LVL50
 5565 030c 18000000 		.4byte	.LVL51
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 160


 5566 0310 0200     		.2byte	0x2
 5567 0312 30       		.byte	0x30
 5568 0313 9F       		.byte	0x9f
 5569 0314 18000000 		.4byte	.LVL51
 5570 0318 96000000 		.4byte	.LVL62
 5571 031c 0100     		.2byte	0x1
 5572 031e 55       		.byte	0x55
 5573 031f 00000000 		.4byte	0
 5574 0323 00000000 		.4byte	0
 5575              	.LLST21:
 5576 0327 1C000000 		.4byte	.LVL52
 5577 032b 3B000000 		.4byte	.LVL53-1
 5578 032f 0100     		.2byte	0x1
 5579 0331 50       		.byte	0x50
 5580 0332 4E000000 		.4byte	.LVL54
 5581 0336 6D000000 		.4byte	.LVL55-1
 5582 033a 0100     		.2byte	0x1
 5583 033c 50       		.byte	0x50
 5584 033d 74000000 		.4byte	.LVL56
 5585 0341 85000000 		.4byte	.LVL57-1
 5586 0345 0100     		.2byte	0x1
 5587 0347 50       		.byte	0x50
 5588 0348 00000000 		.4byte	0
 5589 034c 00000000 		.4byte	0
 5590              	.LLST22:
 5591 0350 14000000 		.4byte	.LVL50
 5592 0354 96000000 		.4byte	.LVL61
 5593 0358 0100     		.2byte	0x1
 5594 035a 54       		.byte	0x54
 5595 035b 00000000 		.4byte	0
 5596 035f 00000000 		.4byte	0
 5597              	.LLST23:
 5598 0363 00000000 		.4byte	.LVL64
 5599 0367 30000000 		.4byte	.LVL68
 5600 036b 0100     		.2byte	0x1
 5601 036d 50       		.byte	0x50
 5602 036e 30000000 		.4byte	.LVL68
 5603 0372 80000000 		.4byte	.LFE11
 5604 0376 0400     		.2byte	0x4
 5605 0378 F3       		.byte	0xf3
 5606 0379 01       		.uleb128 0x1
 5607 037a 50       		.byte	0x50
 5608 037b 9F       		.byte	0x9f
 5609 037c 00000000 		.4byte	0
 5610 0380 00000000 		.4byte	0
 5611              	.LLST24:
 5612 0384 34000000 		.4byte	.LVL69
 5613 0388 6B000000 		.4byte	.LVL80-1
 5614 038c 0100     		.2byte	0x1
 5615 038e 50       		.byte	0x50
 5616 038f 00000000 		.4byte	0
 5617 0393 00000000 		.4byte	0
 5618              	.LLST25:
 5619 0397 2A000000 		.4byte	.LVL67
 5620 039b 30000000 		.4byte	.LVL68
 5621 039f 0200     		.2byte	0x2
 5622 03a1 30       		.byte	0x30
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 161


 5623 03a2 9F       		.byte	0x9f
 5624 03a3 30000000 		.4byte	.LVL68
 5625 03a7 74000000 		.4byte	.LVL84
 5626 03ab 0100     		.2byte	0x1
 5627 03ad 55       		.byte	0x55
 5628 03ae 00000000 		.4byte	0
 5629 03b2 00000000 		.4byte	0
 5630              	.LLST26:
 5631 03b6 1A000000 		.4byte	.LVL65
 5632 03ba 24000000 		.4byte	.LVL66
 5633 03be 0200     		.2byte	0x2
 5634 03c0 30       		.byte	0x30
 5635 03c1 9F       		.byte	0x9f
 5636 03c2 2A000000 		.4byte	.LVL67
 5637 03c6 74000000 		.4byte	.LVL85
 5638 03ca 0100     		.2byte	0x1
 5639 03cc 58       		.byte	0x58
 5640 03cd 00000000 		.4byte	0
 5641 03d1 00000000 		.4byte	0
 5642              	.LLST27:
 5643 03d5 1A000000 		.4byte	.LVL65
 5644 03d9 24000000 		.4byte	.LVL66
 5645 03dd 0200     		.2byte	0x2
 5646 03df 35       		.byte	0x35
 5647 03e0 9F       		.byte	0x9f
 5648 03e1 2A000000 		.4byte	.LVL67
 5649 03e5 74000000 		.4byte	.LVL86
 5650 03e9 0100     		.2byte	0x1
 5651 03eb 59       		.byte	0x59
 5652 03ec 00000000 		.4byte	0
 5653 03f0 00000000 		.4byte	0
 5654              	.LLST28:
 5655 03f4 42000000 		.4byte	.LVL72
 5656 03f8 54000000 		.4byte	.LVL75
 5657 03fc 0100     		.2byte	0x1
 5658 03fe 52       		.byte	0x52
 5659 03ff 54000000 		.4byte	.LVL75
 5660 0403 5E000000 		.4byte	.LVL77
 5661 0407 0200     		.2byte	0x2
 5662 0409 76       		.byte	0x76
 5663 040a 00       		.sleb128 0
 5664 040b 62000000 		.4byte	.LVL78
 5665 040f 6B000000 		.4byte	.LVL80-1
 5666 0413 0100     		.2byte	0x1
 5667 0415 53       		.byte	0x53
 5668 0416 00000000 		.4byte	0
 5669 041a 00000000 		.4byte	0
 5670              	.LLST29:
 5671 041e 38000000 		.4byte	.LVL70
 5672 0422 62000000 		.4byte	.LVL78
 5673 0426 0100     		.2byte	0x1
 5674 0428 53       		.byte	0x53
 5675 0429 00000000 		.4byte	0
 5676 042d 00000000 		.4byte	0
 5677              	.LLST30:
 5678 0431 30000000 		.4byte	.LVL68
 5679 0435 74000000 		.4byte	.LVL83
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 162


 5680 0439 0100     		.2byte	0x1
 5681 043b 54       		.byte	0x54
 5682 043c 00000000 		.4byte	0
 5683 0440 00000000 		.4byte	0
 5684              	.LLST31:
 5685 0444 00000000 		.4byte	.LVL87
 5686 0448 05000000 		.4byte	.LVL88-1
 5687 044c 0100     		.2byte	0x1
 5688 044e 50       		.byte	0x50
 5689 044f 05000000 		.4byte	.LVL88-1
 5690 0453 08000000 		.4byte	.LFE13
 5691 0457 0400     		.2byte	0x4
 5692 0459 F3       		.byte	0xf3
 5693 045a 01       		.uleb128 0x1
 5694 045b 50       		.byte	0x50
 5695 045c 9F       		.byte	0x9f
 5696 045d 00000000 		.4byte	0
 5697 0461 00000000 		.4byte	0
 5698              	.LLST32:
 5699 0465 00000000 		.4byte	.LVL89
 5700 0469 08000000 		.4byte	.LVL90
 5701 046d 0100     		.2byte	0x1
 5702 046f 50       		.byte	0x50
 5703 0470 08000000 		.4byte	.LVL90
 5704 0474 0A000000 		.4byte	.LVL91
 5705 0478 0300     		.2byte	0x3
 5706 047a 70       		.byte	0x70
 5707 047b 01       		.sleb128 1
 5708 047c 9F       		.byte	0x9f
 5709 047d 0A000000 		.4byte	.LVL91
 5710 0481 30000000 		.4byte	.LFE14
 5711 0485 0400     		.2byte	0x4
 5712 0487 F3       		.byte	0xf3
 5713 0488 01       		.uleb128 0x1
 5714 0489 50       		.byte	0x50
 5715 048a 9F       		.byte	0x9f
 5716 048b 00000000 		.4byte	0
 5717 048f 00000000 		.4byte	0
 5718              	.LLST33:
 5719 0493 00000000 		.4byte	.LVL92
 5720 0497 0A000000 		.4byte	.LVL96
 5721 049b 0100     		.2byte	0x1
 5722 049d 50       		.byte	0x50
 5723 049e 0A000000 		.4byte	.LVL96
 5724 04a2 0C000000 		.4byte	.LVL97
 5725 04a6 0300     		.2byte	0x3
 5726 04a8 70       		.byte	0x70
 5727 04a9 01       		.sleb128 1
 5728 04aa 9F       		.byte	0x9f
 5729 04ab 0C000000 		.4byte	.LVL97
 5730 04af 14000000 		.4byte	.LFE15
 5731 04b3 0400     		.2byte	0x4
 5732 04b5 F3       		.byte	0xf3
 5733 04b6 01       		.uleb128 0x1
 5734 04b7 50       		.byte	0x50
 5735 04b8 9F       		.byte	0x9f
 5736 04b9 00000000 		.4byte	0
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 163


 5737 04bd 00000000 		.4byte	0
 5738              	.LLST34:
 5739 04c1 04000000 		.4byte	.LVL93
 5740 04c5 06000000 		.4byte	.LVL94
 5741 04c9 0100     		.2byte	0x1
 5742 04cb 53       		.byte	0x53
 5743 04cc 08000000 		.4byte	.LVL95
 5744 04d0 0C000000 		.4byte	.LVL97
 5745 04d4 0100     		.2byte	0x1
 5746 04d6 53       		.byte	0x53
 5747 04d7 0C000000 		.4byte	.LVL97
 5748 04db 14000000 		.4byte	.LFE15
 5749 04df 0100     		.2byte	0x1
 5750 04e1 50       		.byte	0x50
 5751 04e2 00000000 		.4byte	0
 5752 04e6 00000000 		.4byte	0
 5753              	.LLST35:
 5754 04ea 00000000 		.4byte	.LVL98
 5755 04ee 06000000 		.4byte	.LVL99
 5756 04f2 0100     		.2byte	0x1
 5757 04f4 50       		.byte	0x50
 5758 04f5 06000000 		.4byte	.LVL99
 5759 04f9 10000000 		.4byte	.LVL102
 5760 04fd 0100     		.2byte	0x1
 5761 04ff 54       		.byte	0x54
 5762 0500 10000000 		.4byte	.LVL102
 5763 0504 12000000 		.4byte	.LFE16
 5764 0508 0400     		.2byte	0x4
 5765 050a F3       		.byte	0xf3
 5766 050b 01       		.uleb128 0x1
 5767 050c 50       		.byte	0x50
 5768 050d 9F       		.byte	0x9f
 5769 050e 00000000 		.4byte	0
 5770 0512 00000000 		.4byte	0
 5771              	.LLST36:
 5772 0516 00000000 		.4byte	.LVL98
 5773 051a 09000000 		.4byte	.LVL100-1
 5774 051e 0100     		.2byte	0x1
 5775 0520 51       		.byte	0x51
 5776 0521 09000000 		.4byte	.LVL100-1
 5777 0525 12000000 		.4byte	.LFE16
 5778 0529 0400     		.2byte	0x4
 5779 052b F3       		.byte	0xf3
 5780 052c 01       		.uleb128 0x1
 5781 052d 51       		.byte	0x51
 5782 052e 9F       		.byte	0x9f
 5783 052f 00000000 		.4byte	0
 5784 0533 00000000 		.4byte	0
 5785              	.LLST37:
 5786 0537 00000000 		.4byte	.LVL103
 5787 053b 08000000 		.4byte	.LVL105
 5788 053f 0100     		.2byte	0x1
 5789 0541 50       		.byte	0x50
 5790 0542 08000000 		.4byte	.LVL105
 5791 0546 0A000000 		.4byte	.LVL106
 5792 054a 0100     		.2byte	0x1
 5793 054c 53       		.byte	0x53
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 164


 5794 054d 0A000000 		.4byte	.LVL106
 5795 0551 0C000000 		.4byte	.LVL107
 5796 0555 0100     		.2byte	0x1
 5797 0557 50       		.byte	0x50
 5798 0558 0C000000 		.4byte	.LVL107
 5799 055c 17000000 		.4byte	.LVL109-1
 5800 0560 0100     		.2byte	0x1
 5801 0562 53       		.byte	0x53
 5802 0563 17000000 		.4byte	.LVL109-1
 5803 0567 1A000000 		.4byte	.LFE17
 5804 056b 0400     		.2byte	0x4
 5805 056d F3       		.byte	0xf3
 5806 056e 01       		.uleb128 0x1
 5807 056f 50       		.byte	0x50
 5808 0570 9F       		.byte	0x9f
 5809 0571 00000000 		.4byte	0
 5810 0575 00000000 		.4byte	0
 5811              	.LLST38:
 5812 0579 04000000 		.4byte	.LVL104
 5813 057d 0C000000 		.4byte	.LVL107
 5814 0581 0200     		.2byte	0x2
 5815 0583 30       		.byte	0x30
 5816 0584 9F       		.byte	0x9f
 5817 0585 0C000000 		.4byte	.LVL107
 5818 0589 14000000 		.4byte	.LVL108
 5819 058d 0100     		.2byte	0x1
 5820 058f 50       		.byte	0x50
 5821 0590 18000000 		.4byte	.LVL109
 5822 0594 1A000000 		.4byte	.LFE17
 5823 0598 0100     		.2byte	0x1
 5824 059a 50       		.byte	0x50
 5825 059b 00000000 		.4byte	0
 5826 059f 00000000 		.4byte	0
 5827              	.LLST39:
 5828 05a3 02000000 		.4byte	.LVL110
 5829 05a7 08000000 		.4byte	.LVL111
 5830 05ab 0200     		.2byte	0x2
 5831 05ad 30       		.byte	0x30
 5832 05ae 9F       		.byte	0x9f
 5833 05af 08000000 		.4byte	.LVL111
 5834 05b3 18000000 		.4byte	.LVL116
 5835 05b7 0100     		.2byte	0x1
 5836 05b9 55       		.byte	0x55
 5837 05ba 18000000 		.4byte	.LVL116
 5838 05be 1A000000 		.4byte	.LFE18
 5839 05c2 0100     		.2byte	0x1
 5840 05c4 50       		.byte	0x50
 5841 05c5 00000000 		.4byte	0
 5842 05c9 00000000 		.4byte	0
 5843              	.LLST40:
 5844 05cd 02000000 		.4byte	.LVL110
 5845 05d1 08000000 		.4byte	.LVL111
 5846 05d5 0200     		.2byte	0x2
 5847 05d7 30       		.byte	0x30
 5848 05d8 9F       		.byte	0x9f
 5849 05d9 08000000 		.4byte	.LVL111
 5850 05dd 18000000 		.4byte	.LVL115
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 165


 5851 05e1 0100     		.2byte	0x1
 5852 05e3 54       		.byte	0x54
 5853 05e4 00000000 		.4byte	0
 5854 05e8 00000000 		.4byte	0
 5855              	.LLST41:
 5856 05ec 00000000 		.4byte	.LVL117
 5857 05f0 04000000 		.4byte	.LVL118
 5858 05f4 0100     		.2byte	0x1
 5859 05f6 50       		.byte	0x50
 5860 05f7 04000000 		.4byte	.LVL118
 5861 05fb 14000000 		.4byte	.LFE23
 5862 05ff 0400     		.2byte	0x4
 5863 0601 F3       		.byte	0xf3
 5864 0602 01       		.uleb128 0x1
 5865 0603 50       		.byte	0x50
 5866 0604 9F       		.byte	0x9f
 5867 0605 00000000 		.4byte	0
 5868 0609 00000000 		.4byte	0
 5869              	.LLST42:
 5870 060d 00000000 		.4byte	.LVL121
 5871 0611 04000000 		.4byte	.LVL122
 5872 0615 0100     		.2byte	0x1
 5873 0617 50       		.byte	0x50
 5874 0618 04000000 		.4byte	.LVL122
 5875 061c 14000000 		.4byte	.LFE24
 5876 0620 0400     		.2byte	0x4
 5877 0622 F3       		.byte	0xf3
 5878 0623 01       		.uleb128 0x1
 5879 0624 50       		.byte	0x50
 5880 0625 9F       		.byte	0x9f
 5881 0626 00000000 		.4byte	0
 5882 062a 00000000 		.4byte	0
 5883              	.LLST43:
 5884 062e 00000000 		.4byte	.LVL125
 5885 0632 12000000 		.4byte	.LVL126
 5886 0636 0100     		.2byte	0x1
 5887 0638 50       		.byte	0x50
 5888 0639 12000000 		.4byte	.LVL126
 5889 063d 1A000000 		.4byte	.LVL127
 5890 0641 0400     		.2byte	0x4
 5891 0643 F3       		.byte	0xf3
 5892 0644 01       		.uleb128 0x1
 5893 0645 50       		.byte	0x50
 5894 0646 9F       		.byte	0x9f
 5895 0647 1A000000 		.4byte	.LVL127
 5896 064b 1C000000 		.4byte	.LVL128
 5897 064f 0100     		.2byte	0x1
 5898 0651 50       		.byte	0x50
 5899 0652 1C000000 		.4byte	.LVL128
 5900 0656 24000000 		.4byte	.LFE25
 5901 065a 0400     		.2byte	0x4
 5902 065c F3       		.byte	0xf3
 5903 065d 01       		.uleb128 0x1
 5904 065e 50       		.byte	0x50
 5905 065f 9F       		.byte	0x9f
 5906 0660 00000000 		.4byte	0
 5907 0664 00000000 		.4byte	0
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 166


 5908              	.LLST44:
 5909 0668 20000000 		.4byte	.LVL129
 5910 066c 22000000 		.4byte	.LVL130
 5911 0670 0100     		.2byte	0x1
 5912 0672 50       		.byte	0x50
 5913 0673 00000000 		.4byte	0
 5914 0677 00000000 		.4byte	0
 5915              	.LLST45:
 5916 067b 00000000 		.4byte	.LVL131
 5917 067f 0B000000 		.4byte	.LVL132-1
 5918 0683 0100     		.2byte	0x1
 5919 0685 50       		.byte	0x50
 5920 0686 0B000000 		.4byte	.LVL132-1
 5921 068a 60000000 		.4byte	.LVL147
 5922 068e 0100     		.2byte	0x1
 5923 0690 54       		.byte	0x54
 5924 0691 60000000 		.4byte	.LVL147
 5925 0695 84000000 		.4byte	.LFE20
 5926 0699 0400     		.2byte	0x4
 5927 069b F3       		.byte	0xf3
 5928 069c 01       		.uleb128 0x1
 5929 069d 50       		.byte	0x50
 5930 069e 9F       		.byte	0x9f
 5931 069f 00000000 		.4byte	0
 5932 06a3 00000000 		.4byte	0
 5933              	.LLST46:
 5934 06a7 00000000 		.4byte	.LVL131
 5935 06ab 0B000000 		.4byte	.LVL132-1
 5936 06af 0100     		.2byte	0x1
 5937 06b1 51       		.byte	0x51
 5938 06b2 0B000000 		.4byte	.LVL132-1
 5939 06b6 7E000000 		.4byte	.LVL155
 5940 06ba 0100     		.2byte	0x1
 5941 06bc 57       		.byte	0x57
 5942 06bd 7E000000 		.4byte	.LVL155
 5943 06c1 84000000 		.4byte	.LFE20
 5944 06c5 0400     		.2byte	0x4
 5945 06c7 F3       		.byte	0xf3
 5946 06c8 01       		.uleb128 0x1
 5947 06c9 51       		.byte	0x51
 5948 06ca 9F       		.byte	0x9f
 5949 06cb 00000000 		.4byte	0
 5950 06cf 00000000 		.4byte	0
 5951              	.LLST47:
 5952 06d3 22000000 		.4byte	.LVL138
 5953 06d7 26000000 		.4byte	.LVL139
 5954 06db 0100     		.2byte	0x1
 5955 06dd 50       		.byte	0x50
 5956 06de 26000000 		.4byte	.LVL139
 5957 06e2 60000000 		.4byte	.LVL147
 5958 06e6 0100     		.2byte	0x1
 5959 06e8 55       		.byte	0x55
 5960 06e9 60000000 		.4byte	.LVL147
 5961 06ed 64000000 		.4byte	.LVL148
 5962 06f1 0100     		.2byte	0x1
 5963 06f3 50       		.byte	0x50
 5964 06f4 64000000 		.4byte	.LVL148
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 167


 5965 06f8 7C000000 		.4byte	.LVL153
 5966 06fc 0100     		.2byte	0x1
 5967 06fe 54       		.byte	0x54
 5968 06ff 00000000 		.4byte	0
 5969 0703 00000000 		.4byte	0
 5970              	.LLST48:
 5971 0707 36000000 		.4byte	.LVL142
 5972 070b 38000000 		.4byte	.LVL143
 5973 070f 0100     		.2byte	0x1
 5974 0711 50       		.byte	0x50
 5975 0712 74000000 		.4byte	.LVL151
 5976 0716 76000000 		.4byte	.LVL152
 5977 071a 0100     		.2byte	0x1
 5978 071c 50       		.byte	0x50
 5979 071d 00000000 		.4byte	0
 5980 0721 00000000 		.4byte	0
 5981              	.LLST49:
 5982 0725 1A000000 		.4byte	.LVL135
 5983 0729 1C000000 		.4byte	.LVL136
 5984 072d 0100     		.2byte	0x1
 5985 072f 50       		.byte	0x50
 5986 0730 1C000000 		.4byte	.LVL136
 5987 0734 1F000000 		.4byte	.LVL137-1
 5988 0738 0100     		.2byte	0x1
 5989 073a 51       		.byte	0x51
 5990 073b 1F000000 		.4byte	.LVL137-1
 5991 073f 84000000 		.4byte	.LFE20
 5992 0743 0200     		.2byte	0x2
 5993 0745 91       		.byte	0x91
 5994 0746 64       		.sleb128 -28
 5995 0747 00000000 		.4byte	0
 5996 074b 00000000 		.4byte	0
 5997              	.LLST50:
 5998 074f 0E000000 		.4byte	.LVL133
 5999 0753 15000000 		.4byte	.LVL134-1
 6000 0757 0100     		.2byte	0x1
 6001 0759 50       		.byte	0x50
 6002 075a 15000000 		.4byte	.LVL134-1
 6003 075e 58000000 		.4byte	.LVL145
 6004 0762 0100     		.2byte	0x1
 6005 0764 56       		.byte	0x56
 6006 0765 58000000 		.4byte	.LVL145
 6007 0769 5D000000 		.4byte	.LVL146-1
 6008 076d 0100     		.2byte	0x1
 6009 076f 50       		.byte	0x50
 6010 0770 5D000000 		.4byte	.LVL146-1
 6011 0774 7E000000 		.4byte	.LVL154
 6012 0778 0100     		.2byte	0x1
 6013 077a 56       		.byte	0x56
 6014 077b 00000000 		.4byte	0
 6015 077f 00000000 		.4byte	0
 6016              	.LLST51:
 6017 0783 02000000 		.4byte	.LVL156
 6018 0787 06000000 		.4byte	.LVL157
 6019 078b 0200     		.2byte	0x2
 6020 078d 30       		.byte	0x30
 6021 078e 9F       		.byte	0x9f
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 168


 6022 078f 06000000 		.4byte	.LVL157
 6023 0793 1C000000 		.4byte	.LVL161
 6024 0797 0100     		.2byte	0x1
 6025 0799 54       		.byte	0x54
 6026 079a 00000000 		.4byte	0
 6027 079e 00000000 		.4byte	0
 6028              	.LLST52:
 6029 07a2 10000000 		.4byte	.LVL158
 6030 07a6 15000000 		.4byte	.LVL159-1
 6031 07aa 0100     		.2byte	0x1
 6032 07ac 51       		.byte	0x51
 6033 07ad 00000000 		.4byte	0
 6034 07b1 00000000 		.4byte	0
 6035              	.LLST53:
 6036 07b5 00000000 		.4byte	.LVL162
 6037 07b9 35000000 		.4byte	.LVL168-1
 6038 07bd 0100     		.2byte	0x1
 6039 07bf 50       		.byte	0x50
 6040 07c0 35000000 		.4byte	.LVL168-1
 6041 07c4 3C000000 		.4byte	.LVL171
 6042 07c8 0200     		.2byte	0x2
 6043 07ca 91       		.byte	0x91
 6044 07cb 54       		.sleb128 -44
 6045 07cc 3C000000 		.4byte	.LVL171
 6046 07d0 C0000000 		.4byte	.LFE26
 6047 07d4 0400     		.2byte	0x4
 6048 07d6 F3       		.byte	0xf3
 6049 07d7 01       		.uleb128 0x1
 6050 07d8 50       		.byte	0x50
 6051 07d9 9F       		.byte	0x9f
 6052 07da 00000000 		.4byte	0
 6053 07de 00000000 		.4byte	0
 6054              	.LLST54:
 6055 07e2 1A000000 		.4byte	.LVL163
 6056 07e6 1E000000 		.4byte	.LVL164
 6057 07ea 0100     		.2byte	0x1
 6058 07ec 53       		.byte	0x53
 6059 07ed 1E000000 		.4byte	.LVL164
 6060 07f1 3C000000 		.4byte	.LVL171
 6061 07f5 0200     		.2byte	0x2
 6062 07f7 7D       		.byte	0x7d
 6063 07f8 00       		.sleb128 0
 6064 07f9 00000000 		.4byte	0
 6065 07fd 00000000 		.4byte	0
 6066              	.LLST55:
 6067 0801 26000000 		.4byte	.LVL165
 6068 0805 2C000000 		.4byte	.LVL166
 6069 0809 0100     		.2byte	0x1
 6070 080b 51       		.byte	0x51
 6071 080c 2C000000 		.4byte	.LVL166
 6072 0810 A8000000 		.4byte	.LVL198
 6073 0814 0100     		.2byte	0x1
 6074 0816 58       		.byte	0x58
 6075 0817 00000000 		.4byte	0
 6076 081b 00000000 		.4byte	0
 6077              	.LLST56:
 6078 081f 32000000 		.4byte	.LVL167
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 169


 6079 0823 35000000 		.4byte	.LVL168-1
 6080 0827 0100     		.2byte	0x1
 6081 0829 51       		.byte	0x51
 6082 082a 35000000 		.4byte	.LVL168-1
 6083 082e A8000000 		.4byte	.LVL199
 6084 0832 0100     		.2byte	0x1
 6085 0834 5A       		.byte	0x5a
 6086 0835 00000000 		.4byte	0
 6087 0839 00000000 		.4byte	0
 6088              	.LLST57:
 6089 083d 38000000 		.4byte	.LVL169
 6090 0841 3F000000 		.4byte	.LVL172-1
 6091 0845 0100     		.2byte	0x1
 6092 0847 53       		.byte	0x53
 6093 0848 46000000 		.4byte	.LVL174
 6094 084c 4F000000 		.4byte	.LVL176-1
 6095 0850 0100     		.2byte	0x1
 6096 0852 53       		.byte	0x53
 6097 0853 56000000 		.4byte	.LVL178
 6098 0857 63000000 		.4byte	.LVL181-1
 6099 085b 0100     		.2byte	0x1
 6100 085d 53       		.byte	0x53
 6101 085e 72000000 		.4byte	.LVL184
 6102 0862 7F000000 		.4byte	.LVL187-1
 6103 0866 0100     		.2byte	0x1
 6104 0868 53       		.byte	0x53
 6105 0869 86000000 		.4byte	.LVL189
 6106 086d 93000000 		.4byte	.LVL192-1
 6107 0871 0100     		.2byte	0x1
 6108 0873 53       		.byte	0x53
 6109 0874 9A000000 		.4byte	.LVL194
 6110 0878 A5000000 		.4byte	.LVL197-1
 6111 087c 0100     		.2byte	0x1
 6112 087e 53       		.byte	0x53
 6113 087f 00000000 		.4byte	0
 6114 0883 00000000 		.4byte	0
 6115              	.LLST58:
 6116 0887 36000000 		.4byte	.LVL168
 6117 088b 3F000000 		.4byte	.LVL172-1
 6118 088f 0100     		.2byte	0x1
 6119 0891 50       		.byte	0x50
 6120 0892 44000000 		.4byte	.LVL173
 6121 0896 4F000000 		.4byte	.LVL176-1
 6122 089a 0100     		.2byte	0x1
 6123 089c 50       		.byte	0x50
 6124 089d 54000000 		.4byte	.LVL177
 6125 08a1 63000000 		.4byte	.LVL181-1
 6126 08a5 0100     		.2byte	0x1
 6127 08a7 50       		.byte	0x50
 6128 08a8 70000000 		.4byte	.LVL183
 6129 08ac 7F000000 		.4byte	.LVL187-1
 6130 08b0 0100     		.2byte	0x1
 6131 08b2 50       		.byte	0x50
 6132 08b3 84000000 		.4byte	.LVL188
 6133 08b7 93000000 		.4byte	.LVL192-1
 6134 08bb 0100     		.2byte	0x1
 6135 08bd 50       		.byte	0x50
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 170


 6136 08be 98000000 		.4byte	.LVL193
 6137 08c2 A5000000 		.4byte	.LVL197-1
 6138 08c6 0100     		.2byte	0x1
 6139 08c8 50       		.byte	0x50
 6140 08c9 00000000 		.4byte	0
 6141 08cd 00000000 		.4byte	0
 6142              	.LLST59:
 6143 08d1 00000000 		.4byte	.LVL200
 6144 08d5 12000000 		.4byte	.LVL202
 6145 08d9 0100     		.2byte	0x1
 6146 08db 50       		.byte	0x50
 6147 08dc 12000000 		.4byte	.LVL202
 6148 08e0 20000000 		.4byte	.LFE27
 6149 08e4 0400     		.2byte	0x4
 6150 08e6 F3       		.byte	0xf3
 6151 08e7 01       		.uleb128 0x1
 6152 08e8 50       		.byte	0x50
 6153 08e9 9F       		.byte	0x9f
 6154 08ea 00000000 		.4byte	0
 6155 08ee 00000000 		.4byte	0
 6156              	.LLST60:
 6157 08f2 00000000 		.4byte	.LVL200
 6158 08f6 15000000 		.4byte	.LVL203-1
 6159 08fa 0100     		.2byte	0x1
 6160 08fc 51       		.byte	0x51
 6161 08fd 15000000 		.4byte	.LVL203-1
 6162 0901 20000000 		.4byte	.LFE27
 6163 0905 0400     		.2byte	0x4
 6164 0907 F3       		.byte	0xf3
 6165 0908 01       		.uleb128 0x1
 6166 0909 51       		.byte	0x51
 6167 090a 9F       		.byte	0x9f
 6168 090b 00000000 		.4byte	0
 6169 090f 00000000 		.4byte	0
 6170              	.LLST61:
 6171 0913 02000000 		.4byte	.LVL201
 6172 0917 16000000 		.4byte	.LVL203
 6173 091b 0200     		.2byte	0x2
 6174 091d 30       		.byte	0x30
 6175 091e 9F       		.byte	0x9f
 6176 091f 16000000 		.4byte	.LVL203
 6177 0923 18000000 		.4byte	.LVL204
 6178 0927 0200     		.2byte	0x2
 6179 0929 31       		.byte	0x31
 6180 092a 9F       		.byte	0x9f
 6181 092b 18000000 		.4byte	.LVL204
 6182 092f 20000000 		.4byte	.LFE27
 6183 0933 0100     		.2byte	0x1
 6184 0935 50       		.byte	0x50
 6185 0936 00000000 		.4byte	0
 6186 093a 00000000 		.4byte	0
 6187              	.LLST62:
 6188 093e 00000000 		.4byte	.LVL205
 6189 0942 0B000000 		.4byte	.LVL206-1
 6190 0946 0100     		.2byte	0x1
 6191 0948 50       		.byte	0x50
 6192 0949 0B000000 		.4byte	.LVL206-1
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 171


 6193 094d 1A000000 		.4byte	.LVL209
 6194 0951 0100     		.2byte	0x1
 6195 0953 55       		.byte	0x55
 6196 0954 1A000000 		.4byte	.LVL209
 6197 0958 1C000000 		.4byte	.LFE28
 6198 095c 0400     		.2byte	0x4
 6199 095e F3       		.byte	0xf3
 6200 095f 01       		.uleb128 0x1
 6201 0960 50       		.byte	0x50
 6202 0961 9F       		.byte	0x9f
 6203 0962 00000000 		.4byte	0
 6204 0966 00000000 		.4byte	0
 6205              	.LLST63:
 6206 096a 00000000 		.4byte	.LVL205
 6207 096e 0B000000 		.4byte	.LVL206-1
 6208 0972 0100     		.2byte	0x1
 6209 0974 51       		.byte	0x51
 6210 0975 0B000000 		.4byte	.LVL206-1
 6211 0979 1A000000 		.4byte	.LVL210
 6212 097d 0100     		.2byte	0x1
 6213 097f 56       		.byte	0x56
 6214 0980 1A000000 		.4byte	.LVL210
 6215 0984 1C000000 		.4byte	.LFE28
 6216 0988 0400     		.2byte	0x4
 6217 098a F3       		.byte	0xf3
 6218 098b 01       		.uleb128 0x1
 6219 098c 51       		.byte	0x51
 6220 098d 9F       		.byte	0x9f
 6221 098e 00000000 		.4byte	0
 6222 0992 00000000 		.4byte	0
 6223              	.LLST64:
 6224 0996 00000000 		.4byte	.LVL205
 6225 099a 0B000000 		.4byte	.LVL206-1
 6226 099e 0100     		.2byte	0x1
 6227 09a0 52       		.byte	0x52
 6228 09a1 0B000000 		.4byte	.LVL206-1
 6229 09a5 10000000 		.4byte	.LVL207
 6230 09a9 0100     		.2byte	0x1
 6231 09ab 54       		.byte	0x54
 6232 09ac 10000000 		.4byte	.LVL207
 6233 09b0 1C000000 		.4byte	.LFE28
 6234 09b4 0400     		.2byte	0x4
 6235 09b6 F3       		.byte	0xf3
 6236 09b7 01       		.uleb128 0x1
 6237 09b8 52       		.byte	0x52
 6238 09b9 9F       		.byte	0x9f
 6239 09ba 00000000 		.4byte	0
 6240 09be 00000000 		.4byte	0
 6241              	.LLST65:
 6242 09c2 0C000000 		.4byte	.LVL206
 6243 09c6 19000000 		.4byte	.LVL208-1
 6244 09ca 0100     		.2byte	0x1
 6245 09cc 50       		.byte	0x50
 6246 09cd 00000000 		.4byte	0
 6247 09d1 00000000 		.4byte	0
 6248              	.LLST66:
 6249 09d5 06000000 		.4byte	.LVL211
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 172


 6250 09d9 15000000 		.4byte	.LVL213-1
 6251 09dd 0100     		.2byte	0x1
 6252 09df 53       		.byte	0x53
 6253 09e0 00000000 		.4byte	0
 6254 09e4 00000000 		.4byte	0
 6255              	.LLST67:
 6256 09e8 00000000 		.4byte	.LVL215
 6257 09ec 13000000 		.4byte	.LVL216-1
 6258 09f0 0100     		.2byte	0x1
 6259 09f2 50       		.byte	0x50
 6260 09f3 13000000 		.4byte	.LVL216-1
 6261 09f7 3C000000 		.4byte	.LFE10
 6262 09fb 0400     		.2byte	0x4
 6263 09fd F3       		.byte	0xf3
 6264 09fe 01       		.uleb128 0x1
 6265 09ff 50       		.byte	0x50
 6266 0a00 9F       		.byte	0x9f
 6267 0a01 00000000 		.4byte	0
 6268 0a05 00000000 		.4byte	0
 6269              		.section	.debug_aranges,"",%progbits
 6270 0000 F4000000 		.4byte	0xf4
 6271 0004 0200     		.2byte	0x2
 6272 0006 00000000 		.4byte	.Ldebug_info0
 6273 000a 04       		.byte	0x4
 6274 000b 00       		.byte	0
 6275 000c 0000     		.2byte	0
 6276 000e 0000     		.2byte	0
 6277 0010 00000000 		.4byte	.LFB21
 6278 0014 84000000 		.4byte	.LFE21-.LFB21
 6279 0018 00000000 		.4byte	.LFB22
 6280 001c 42000000 		.4byte	.LFE22-.LFB22
 6281 0020 00000000 		.4byte	.LFB1
 6282 0024 10000000 		.4byte	.LFE1-.LFB1
 6283 0028 00000000 		.4byte	.LFB2
 6284 002c 40000000 		.4byte	.LFE2-.LFB2
 6285 0030 00000000 		.4byte	.LFB3
 6286 0034 2C000000 		.4byte	.LFE3-.LFB3
 6287 0038 00000000 		.4byte	.LFB4
 6288 003c 3C000000 		.4byte	.LFE4-.LFB4
 6289 0040 00000000 		.4byte	.LFB5
 6290 0044 58000000 		.4byte	.LFE5-.LFB5
 6291 0048 00000000 		.4byte	.LFB6
 6292 004c 2C000000 		.4byte	.LFE6-.LFB6
 6293 0050 00000000 		.4byte	.LFB8
 6294 0054 9C000000 		.4byte	.LFE8-.LFB8
 6295 0058 00000000 		.4byte	.LFB11
 6296 005c 80000000 		.4byte	.LFE11-.LFB11
 6297 0060 00000000 		.4byte	.LFB12
 6298 0064 02000000 		.4byte	.LFE12-.LFB12
 6299 0068 00000000 		.4byte	.LFB13
 6300 006c 08000000 		.4byte	.LFE13-.LFB13
 6301 0070 00000000 		.4byte	.LFB14
 6302 0074 30000000 		.4byte	.LFE14-.LFB14
 6303 0078 00000000 		.4byte	.LFB15
 6304 007c 14000000 		.4byte	.LFE15-.LFB15
 6305 0080 00000000 		.4byte	.LFB16
 6306 0084 12000000 		.4byte	.LFE16-.LFB16
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 173


 6307 0088 00000000 		.4byte	.LFB17
 6308 008c 1A000000 		.4byte	.LFE17-.LFB17
 6309 0090 00000000 		.4byte	.LFB18
 6310 0094 1A000000 		.4byte	.LFE18-.LFB18
 6311 0098 00000000 		.4byte	.LFB23
 6312 009c 14000000 		.4byte	.LFE23-.LFB23
 6313 00a0 00000000 		.4byte	.LFB24
 6314 00a4 14000000 		.4byte	.LFE24-.LFB24
 6315 00a8 00000000 		.4byte	.LFB25
 6316 00ac 24000000 		.4byte	.LFE25-.LFB25
 6317 00b0 00000000 		.4byte	.LFB20
 6318 00b4 84000000 		.4byte	.LFE20-.LFB20
 6319 00b8 00000000 		.4byte	.LFB19
 6320 00bc 24000000 		.4byte	.LFE19-.LFB19
 6321 00c0 00000000 		.4byte	.LFB26
 6322 00c4 C0000000 		.4byte	.LFE26-.LFB26
 6323 00c8 00000000 		.4byte	.LFB27
 6324 00cc 20000000 		.4byte	.LFE27-.LFB27
 6325 00d0 00000000 		.4byte	.LFB28
 6326 00d4 1C000000 		.4byte	.LFE28-.LFB28
 6327 00d8 00000000 		.4byte	.LFB9
 6328 00dc 24000000 		.4byte	.LFE9-.LFB9
 6329 00e0 00000000 		.4byte	.LFB10
 6330 00e4 3C000000 		.4byte	.LFE10-.LFB10
 6331 00e8 00000000 		.4byte	.LFB7
 6332 00ec 2C000000 		.4byte	.LFE7-.LFB7
 6333 00f0 00000000 		.4byte	0
 6334 00f4 00000000 		.4byte	0
 6335              		.section	.debug_ranges,"",%progbits
 6336              	.Ldebug_ranges0:
 6337 0000 00000000 		.4byte	.LFB21
 6338 0004 84000000 		.4byte	.LFE21
 6339 0008 00000000 		.4byte	.LFB22
 6340 000c 42000000 		.4byte	.LFE22
 6341 0010 00000000 		.4byte	.LFB1
 6342 0014 10000000 		.4byte	.LFE1
 6343 0018 00000000 		.4byte	.LFB2
 6344 001c 40000000 		.4byte	.LFE2
 6345 0020 00000000 		.4byte	.LFB3
 6346 0024 2C000000 		.4byte	.LFE3
 6347 0028 00000000 		.4byte	.LFB4
 6348 002c 3C000000 		.4byte	.LFE4
 6349 0030 00000000 		.4byte	.LFB5
 6350 0034 58000000 		.4byte	.LFE5
 6351 0038 00000000 		.4byte	.LFB6
 6352 003c 2C000000 		.4byte	.LFE6
 6353 0040 00000000 		.4byte	.LFB8
 6354 0044 9C000000 		.4byte	.LFE8
 6355 0048 00000000 		.4byte	.LFB11
 6356 004c 80000000 		.4byte	.LFE11
 6357 0050 00000000 		.4byte	.LFB12
 6358 0054 02000000 		.4byte	.LFE12
 6359 0058 00000000 		.4byte	.LFB13
 6360 005c 08000000 		.4byte	.LFE13
 6361 0060 00000000 		.4byte	.LFB14
 6362 0064 30000000 		.4byte	.LFE14
 6363 0068 00000000 		.4byte	.LFB15
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 174


 6364 006c 14000000 		.4byte	.LFE15
 6365 0070 00000000 		.4byte	.LFB16
 6366 0074 12000000 		.4byte	.LFE16
 6367 0078 00000000 		.4byte	.LFB17
 6368 007c 1A000000 		.4byte	.LFE17
 6369 0080 00000000 		.4byte	.LFB18
 6370 0084 1A000000 		.4byte	.LFE18
 6371 0088 00000000 		.4byte	.LFB23
 6372 008c 14000000 		.4byte	.LFE23
 6373 0090 00000000 		.4byte	.LFB24
 6374 0094 14000000 		.4byte	.LFE24
 6375 0098 00000000 		.4byte	.LFB25
 6376 009c 24000000 		.4byte	.LFE25
 6377 00a0 00000000 		.4byte	.LFB20
 6378 00a4 84000000 		.4byte	.LFE20
 6379 00a8 00000000 		.4byte	.LFB19
 6380 00ac 24000000 		.4byte	.LFE19
 6381 00b0 00000000 		.4byte	.LFB26
 6382 00b4 C0000000 		.4byte	.LFE26
 6383 00b8 00000000 		.4byte	.LFB27
 6384 00bc 20000000 		.4byte	.LFE27
 6385 00c0 00000000 		.4byte	.LFB28
 6386 00c4 1C000000 		.4byte	.LFE28
 6387 00c8 00000000 		.4byte	.LFB9
 6388 00cc 24000000 		.4byte	.LFE9
 6389 00d0 00000000 		.4byte	.LFB10
 6390 00d4 3C000000 		.4byte	.LFE10
 6391 00d8 00000000 		.4byte	.LFB7
 6392 00dc 2C000000 		.4byte	.LFE7
 6393 00e0 00000000 		.4byte	0
 6394 00e4 00000000 		.4byte	0
 6395              		.section	.debug_line,"",%progbits
 6396              	.Ldebug_line0:
 6397 0000 D7050000 		.section	.debug_str,"MS",%progbits,1
 6397      0200DF01 
 6397      00000201 
 6397      FB0E0D00 
 6397      01010101 
 6398              	.LASF83:
 6399 0000 65646765 		.ascii	"edgeSwipeTimeout\000"
 6399      53776970 
 6399      6554696D 
 6399      656F7574 
 6399      00
 6400              	.LASF105:
 6401 0011 43617053 		.ascii	"CapSense_WD_PROXIMITY_E\000"
 6401      656E7365 
 6401      5F57445F 
 6401      50524F58 
 6401      494D4954 
 6402              	.LASF31:
 6403 0029 666C6963 		.ascii	"flickActiveDistanceX\000"
 6403      6B416374 
 6403      69766544 
 6403      69737461 
 6403      6E636558 
 6404              	.LASF32:
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 175


 6405 003e 666C6963 		.ascii	"flickActiveDistanceY\000"
 6405      6B416374 
 6405      69766544 
 6405      69737461 
 6405      6E636559 
 6406              	.LASF223:
 6407 0053 73656E73 		.ascii	"sensorElement\000"
 6407      6F72456C 
 6407      656D656E 
 6407      7400
 6408              	.LASF27:
 6409 0061 70616E41 		.ascii	"panActiveDistanceX\000"
 6409      63746976 
 6409      65446973 
 6409      74616E63 
 6409      655800
 6410              	.LASF28:
 6411 0074 70616E41 		.ascii	"panActiveDistanceY\000"
 6411      63746976 
 6411      65446973 
 6411      74616E63 
 6411      655900
 6412              	.LASF70:
 6413 0087 53545061 		.ascii	"STPanDebounce\000"
 6413      6E446562 
 6413      6F756E63 
 6413      6500
 6414              	.LASF217:
 6415 0095 7363616E 		.ascii	"scanStatus\000"
 6415      53746174 
 6415      757300
 6416              	.LASF266:
 6417 00a0 43617053 		.ascii	"CapSense_SsCSDDisableMode\000"
 6417      656E7365 
 6417      5F537343 
 6417      53444469 
 6417      7361626C 
 6418              	.LASF62:
 6419 00ba 7374496E 		.ascii	"stInScrCountLevel\000"
 6419      53637243 
 6419      6F756E74 
 6419      4C657665 
 6419      6C00
 6420              	.LASF220:
 6421 00cc 43617053 		.ascii	"CapSense_SetupWidgetExt\000"
 6421      656E7365 
 6421      5F536574 
 6421      75705769 
 6421      64676574 
 6422              	.LASF273:
 6423 00e4 43617053 		.ascii	"CapSense_widgetIndex\000"
 6423      656E7365 
 6423      5F776964 
 6423      67657449 
 6423      6E646578 
 6424              	.LASF159:
 6425 00f9 736E7254 		.ascii	"snrTestWidgetId\000"
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 176


 6425      65737457 
 6425      69646765 
 6425      74496400 
 6426              	.LASF63:
 6427 0109 6474496E 		.ascii	"dtInScrActiveDistanceX\000"
 6427      53637241 
 6427      63746976 
 6427      65446973 
 6427      74616E63 
 6428              	.LASF64:
 6429 0120 6474496E 		.ascii	"dtInScrActiveDistanceY\000"
 6429      53637241 
 6429      63746976 
 6429      65446973 
 6429      74616E63 
 6430              	.LASF108:
 6431 0137 43617053 		.ascii	"CapSense_UNDEFINED_E\000"
 6431      656E7365 
 6431      5F554E44 
 6431      4546494E 
 6431      45445F45 
 6432              	.LASF35:
 6433 014c 73745363 		.ascii	"stScrollThreshold3X\000"
 6433      726F6C6C 
 6433      54687265 
 6433      73686F6C 
 6433      64335800 
 6434              	.LASF39:
 6435 0160 73745363 		.ascii	"stScrollThreshold3Y\000"
 6435      726F6C6C 
 6435      54687265 
 6435      73686F6C 
 6435      64335900 
 6436              	.LASF79:
 6437 0174 73657474 		.ascii	"settlingTimeout\000"
 6437      6C696E67 
 6437      54696D65 
 6437      6F757400 
 6438              	.LASF11:
 6439 0184 756E7369 		.ascii	"unsigned int\000"
 6439      676E6564 
 6439      20696E74 
 6439      00
 6440              	.LASF147:
 6441 0191 7363616E 		.ascii	"scanCounter\000"
 6441      436F756E 
 6441      74657200 
 6442              	.LASF145:
 6443 019d 6877436C 		.ascii	"hwClock\000"
 6443      6F636B00 
 6444              	.LASF41:
 6445 01a5 73745363 		.ascii	"stScrollStep1\000"
 6445      726F6C6C 
 6445      53746570 
 6445      3100
 6446              	.LASF42:
 6447 01b3 73745363 		.ascii	"stScrollStep2\000"
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 177


 6447      726F6C6C 
 6447      53746570 
 6447      3200
 6448              	.LASF43:
 6449 01c1 73745363 		.ascii	"stScrollStep3\000"
 6449      726F6C6C 
 6449      53746570 
 6449      3300
 6450              	.LASF44:
 6451 01cf 73745363 		.ascii	"stScrollStep4\000"
 6451      726F6C6C 
 6451      53746570 
 6451      3400
 6452              	.LASF247:
 6453 01dd 43617053 		.ascii	"CapSense_SsCSDGetColSnsClkDivider\000"
 6453      656E7365 
 6453      5F537343 
 6453      53444765 
 6453      74436F6C 
 6454              	.LASF269:
 6455 01ff 696E6974 		.ascii	"initStatus\000"
 6455      53746174 
 6455      757300
 6456              	.LASF292:
 6457 020a 43794861 		.ascii	"CyHalt\000"
 6457      6C7400
 6458              	.LASF200:
 6459 0211 43617053 		.ascii	"CapSense_BIST_CSD_SH_CAP_E\000"
 6459      656E7365 
 6459      5F424953 
 6459      545F4353 
 6459      445F5348 
 6460              	.LASF46:
 6461 022c 64745363 		.ascii	"dtScrollThreshold1X\000"
 6461      726F6C6C 
 6461      54687265 
 6461      73686F6C 
 6461      64315800 
 6462              	.LASF50:
 6463 0240 64745363 		.ascii	"dtScrollThreshold1Y\000"
 6463      726F6C6C 
 6463      54687265 
 6463      73686F6C 
 6463      64315900 
 6464              	.LASF93:
 6465 0254 67726F75 		.ascii	"group2Start\000"
 6465      70325374 
 6465      61727400 
 6466              	.LASF258:
 6467 0260 64725265 		.ascii	"drReg\000"
 6467      6700
 6468              	.LASF36:
 6469 0266 73745363 		.ascii	"stScrollThreshold4X\000"
 6469      726F6C6C 
 6469      54687265 
 6469      73686F6C 
 6469      64345800 
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 178


 6470              	.LASF40:
 6471 027a 73745363 		.ascii	"stScrollThreshold4Y\000"
 6471      726F6C6C 
 6471      54687265 
 6471      73686F6C 
 6471      64345900 
 6472              	.LASF84:
 6473 028e 4454436C 		.ascii	"DTClickTimeoutMax\000"
 6473      69636B54 
 6473      696D656F 
 6473      75744D61 
 6473      7800
 6474              	.LASF211:
 6475 02a0 6C667372 		.ascii	"lfsrRange\000"
 6475      52616E67 
 6475      6500
 6476              	.LASF246:
 6477 02aa 43617053 		.ascii	"CapSense_CalibrateAllWidgets\000"
 6477      656E7365 
 6477      5F43616C 
 6477      69627261 
 6477      7465416C 
 6478              	.LASF210:
 6479 02c7 6C667372 		.ascii	"lfsrScale\000"
 6479      5363616C 
 6479      6500
 6480              	.LASF298:
 6481 02d1 43617053 		.ascii	"CapSense_IsBusy\000"
 6481      656E7365 
 6481      5F497342 
 6481      75737900 
 6482              	.LASF257:
 6483 02e1 6873696F 		.ascii	"hsiomReg\000"
 6483      6D526567 
 6483      00
 6484              	.LASF239:
 6485 02ea 43617053 		.ascii	"CapSense_SsSetModClkClockDivider\000"
 6485      656E7365 
 6485      5F537353 
 6485      65744D6F 
 6485      64436C6B 
 6486              	.LASF58:
 6487 030b 64745363 		.ascii	"dtScrollDebounce\000"
 6487      726F6C6C 
 6487      4465626F 
 6487      756E6365 
 6487      00
 6488              	.LASF263:
 6489 031c 72656750 		.ascii	"regPtr\000"
 6489      747200
 6490              	.LASF47:
 6491 0323 64745363 		.ascii	"dtScrollThreshold2X\000"
 6491      726F6C6C 
 6491      54687265 
 6491      73686F6C 
 6491      64325800 
 6492              	.LASF51:
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 179


 6493 0337 64745363 		.ascii	"dtScrollThreshold2Y\000"
 6493      726F6C6C 
 6493      54687265 
 6493      73686F6C 
 6493      64325900 
 6494              	.LASF94:
 6495 034b 67726F75 		.ascii	"group2End\000"
 6495      7032456E 
 6495      6400
 6496              	.LASF191:
 6497 0355 69697246 		.ascii	"iirFilterCoeff\000"
 6497      696C7465 
 6497      72436F65 
 6497      666600
 6498              	.LASF76:
 6499 0364 646F7562 		.ascii	"doubleClickRadius\000"
 6499      6C65436C 
 6499      69636B52 
 6499      61646975 
 6499      7300
 6500              	.LASF221:
 6501 0376 73656E73 		.ascii	"sensorId\000"
 6501      6F724964 
 6501      00
 6502              	.LASF90:
 6503 037f 67726F75 		.ascii	"groupMask\000"
 6503      704D6173 
 6503      6B00
 6504              	.LASF29:
 6505 0389 7A6F6F6D 		.ascii	"zoomActiveDistanceX\000"
 6505      41637469 
 6505      76654469 
 6505      7374616E 
 6505      63655800 
 6506              	.LASF30:
 6507 039d 7A6F6F6D 		.ascii	"zoomActiveDistanceY\000"
 6507      41637469 
 6507      76654469 
 6507      7374616E 
 6507      63655900 
 6508              	.LASF157:
 6509 03b1 74696D65 		.ascii	"timestampInterval\000"
 6509      7374616D 
 6509      70496E74 
 6509      65727661 
 6509      6C00
 6510              	.LASF249:
 6511 03c3 70747257 		.ascii	"ptrWdgt\000"
 6511      64677400 
 6512              	.LASF14:
 6513 03cb 75696E74 		.ascii	"uint32_t\000"
 6513      33325F74 
 6513      00
 6514              	.LASF265:
 6515 03d4 43617053 		.ascii	"CapSense_SsSetWidgetSenseClkSrc\000"
 6515      656E7365 
 6515      5F537353 
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 180


 6515      65745769 
 6515      64676574 
 6516              	.LASF73:
 6517 03f4 44545061 		.ascii	"DTPanToZoomDebounce\000"
 6517      6E546F5A 
 6517      6F6F6D44 
 6517      65626F75 
 6517      6E636500 
 6518              	.LASF82:
 6519 0408 666C6963 		.ascii	"flickSampleTime\000"
 6519      6B53616D 
 6519      706C6554 
 6519      696D6500 
 6520              	.LASF231:
 6521 0418 6C6F6F70 		.ascii	"loopIndex\000"
 6521      496E6465 
 6521      7800
 6522              	.LASF208:
 6523 0422 43617053 		.ascii	"CapSense_SsCalcLfsrScale\000"
 6523      656E7365 
 6523      5F537343 
 6523      616C634C 
 6523      66737253 
 6524              	.LASF18:
 6525 043b 666C6F61 		.ascii	"float\000"
 6525      7400
 6526              	.LASF174:
 6527 0441 73686966 		.ascii	"shift\000"
 6527      7400
 6528              	.LASF295:
 6529 0447 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 6529      43313120 
 6529      352E342E 
 6529      31203230 
 6529      31363036 
 6530 047a 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 6530      20726576 
 6530      6973696F 
 6530      6E203233 
 6530      37373135 
 6531 04ad 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 6531      67202D66 
 6531      66756E63 
 6531      74696F6E 
 6531      2D736563 
 6532              	.LASF281:
 6533 04d9 43617053 		.ascii	"CapSense_CSDSetupWidget\000"
 6533      656E7365 
 6533      5F435344 
 6533      53657475 
 6533      70576964 
 6534              	.LASF48:
 6535 04f1 64745363 		.ascii	"dtScrollThreshold3X\000"
 6535      726F6C6C 
 6535      54687265 
 6535      73686F6C 
 6535      64335800 
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 181


 6536              	.LASF52:
 6537 0505 64745363 		.ascii	"dtScrollThreshold3Y\000"
 6537      726F6C6C 
 6537      54687265 
 6537      73686F6C 
 6537      64335900 
 6538              	.LASF236:
 6539 0519 736E7349 		.ascii	"snsIoPtr\000"
 6539      6F507472 
 6539      00
 6540              	.LASF155:
 6541 0522 736E734C 		.ascii	"snsList\000"
 6541      69737400 
 6542              	.LASF10:
 6543 052a 6C6F6E67 		.ascii	"long long unsigned int\000"
 6543      206C6F6E 
 6543      6720756E 
 6543      7369676E 
 6543      65642069 
 6544              	.LASF274:
 6545 0541 43617053 		.ascii	"CapSense_sensorIndex\000"
 6545      656E7365 
 6545      5F73656E 
 6545      736F7249 
 6545      6E646578 
 6546              	.LASF65:
 6547 0556 6474496E 		.ascii	"dtInScrCountLevel\000"
 6547      53637243 
 6547      6F756E74 
 6547      4C657665 
 6547      6C00
 6548              	.LASF103:
 6549 0568 43617053 		.ascii	"CapSense_WD_MATRIX_BUTTON_E\000"
 6549      656E7365 
 6549      5F57445F 
 6549      4D415452 
 6549      49585F42 
 6550              	.LASF134:
 6551 0584 746F7563 		.ascii	"touchpad0\000"
 6551      68706164 
 6551      3000
 6552              	.LASF175:
 6553 058e 43617053 		.ascii	"CapSense_FLASH_IO_STRUCT\000"
 6553      656E7365 
 6553      5F464C41 
 6553      53485F49 
 6553      4F5F5354 
 6554              	.LASF160:
 6555 05a7 736E7254 		.ascii	"snrTestSensorId\000"
 6555      65737453 
 6555      656E736F 
 6555      72496400 
 6556              	.LASF4:
 6557 05b7 5F5F7569 		.ascii	"__uint16_t\000"
 6557      6E743136 
 6557      5F7400
 6558              	.LASF183:
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 182


 6559 05c2 77646774 		.ascii	"wdgtType\000"
 6559      54797065 
 6559      00
 6560              	.LASF209:
 6561 05cb 6C667372 		.ascii	"lfsrSize\000"
 6561      53697A65 
 6561      00
 6562              	.LASF283:
 6563 05d4 43617053 		.ascii	"CapSense_CSDSetupWidgetExt\000"
 6563      656E7365 
 6563      5F435344 
 6563      53657475 
 6563      70576964 
 6564              	.LASF259:
 6565 05ef 70635265 		.ascii	"pcReg\000"
 6565      6700
 6566              	.LASF264:
 6567 05f5 76616C75 		.ascii	"value\000"
 6567      6500
 6568              	.LASF233:
 6569 05fb 6E657750 		.ascii	"newPinHsiomVal\000"
 6569      696E4873 
 6569      696F6D56 
 6569      616C00
 6570              	.LASF49:
 6571 060a 64745363 		.ascii	"dtScrollThreshold4X\000"
 6571      726F6C6C 
 6571      54687265 
 6571      73686F6C 
 6571      64345800 
 6572              	.LASF53:
 6573 061e 64745363 		.ascii	"dtScrollThreshold4Y\000"
 6573      726F6C6C 
 6573      54687265 
 6573      73686F6C 
 6573      64345900 
 6574              	.LASF153:
 6575 0632 6D6F6443 		.ascii	"modCsdClk\000"
 6575      7364436C 
 6575      6B00
 6576              	.LASF141:
 6577 063c 43617053 		.ascii	"CapSense_RAM_SNS_STRUCT\000"
 6577      656E7365 
 6577      5F52414D 
 6577      5F534E53 
 6577      5F535452 
 6578              	.LASF251:
 6579 0654 43617053 		.ascii	"CapSense_SsCSDCalcPrsSize\000"
 6579      656E7365 
 6579      5F537343 
 6579      53444361 
 6579      6C635072 
 6580              	.LASF98:
 6581 066e 67726F75 		.ascii	"group4End\000"
 6581      7034456E 
 6581      6400
 6582              	.LASF168:
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 183


 6583 0678 64725074 		.ascii	"drPtr\000"
 6583      7200
 6584              	.LASF204:
 6585 067e 43617053 		.ascii	"CapSense_IDAC_GAIN_TABLE_STRUCT\000"
 6585      656E7365 
 6585      5F494441 
 6585      435F4741 
 6585      494E5F54 
 6586              	.LASF261:
 6587 069e 6D6F6465 		.ascii	"mode\000"
 6587      00
 6588              	.LASF87:
 6589 06a3 5354436C 		.ascii	"STClickTimeoutMin\000"
 6589      69636B54 
 6589      696D656F 
 6589      75744D69 
 6589      6E00
 6590              	.LASF240:
 6591 06b5 6D6F6443 		.ascii	"modClk\000"
 6591      6C6B00
 6592              	.LASF232:
 6593 06bc 6E657750 		.ascii	"newPinPcVal\000"
 6593      696E5063 
 6593      56616C00 
 6594              	.LASF118:
 6595 06c8 68797374 		.ascii	"hysteresis\000"
 6595      65726573 
 6595      697300
 6596              	.LASF102:
 6597 06d3 43617053 		.ascii	"CapSense_WD_RADIAL_SLIDER_E\000"
 6597      656E7365 
 6597      5F57445F 
 6597      52414449 
 6597      414C5F53 
 6598              	.LASF256:
 6599 06ef 64697363 		.ascii	"dischargeTime\000"
 6599      68617267 
 6599      6554696D 
 6599      6500
 6600              	.LASF192:
 6601 06fd 43617053 		.ascii	"CapSense_FLASH_WD_STRUCT\000"
 6601      656E7365 
 6601      5F464C41 
 6601      53485F57 
 6601      445F5354 
 6602              	.LASF225:
 6603 0716 656C7464 		.ascii	"eltdNum\000"
 6603      4E756D00 
 6604              	.LASF89:
 6605 071e 5354446F 		.ascii	"STDoubleClickTimeoutMin\000"
 6605      75626C65 
 6605      436C6963 
 6605      6B54696D 
 6605      656F7574 
 6606              	.LASF120:
 6607 0736 6C6F7742 		.ascii	"lowBslnRst\000"
 6607      736C6E52 
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 184


 6607      737400
 6608              	.LASF75:
 6609 0741 636F6D70 		.ascii	"completedDebounce\000"
 6609      6C657465 
 6609      64446562 
 6609      6F756E63 
 6609      6500
 6610              	.LASF207:
 6611 0753 43617053 		.ascii	"CapSense_SsCalcLfsrSize\000"
 6611      656E7365 
 6611      5F537343 
 6611      616C634C 
 6611      66737253 
 6612              	.LASF123:
 6613 076b 69646163 		.ascii	"idacGainIndex\000"
 6613      4761696E 
 6613      496E6465 
 6613      7800
 6614              	.LASF59:
 6615 0779 64745363 		.ascii	"dtScrollToZoomDebounce\000"
 6615      726F6C6C 
 6615      546F5A6F 
 6615      6F6D4465 
 6615      626F756E 
 6616              	.LASF182:
 6617 0790 746F7461 		.ascii	"totalNumSns\000"
 6617      6C4E756D 
 6617      536E7300 
 6618              	.LASF60:
 6619 079c 7374496E 		.ascii	"stInScrActiveDistanceX\000"
 6619      53637241 
 6619      63746976 
 6619      65446973 
 6619      74616E63 
 6620              	.LASF61:
 6621 07b3 7374496E 		.ascii	"stInScrActiveDistanceY\000"
 6621      53637241 
 6621      63746976 
 6621      65446973 
 6621      74616E63 
 6622              	.LASF116:
 6623 07ca 6E6F6973 		.ascii	"noiseTh\000"
 6623      65546800 
 6624              	.LASF20:
 6625 07d2 63686172 		.ascii	"char\000"
 6625      00
 6626              	.LASF286:
 6627 07d7 43794578 		.ascii	"CyExitCriticalSection\000"
 6627      69744372 
 6627      69746963 
 6627      616C5365 
 6627      6374696F 
 6628              	.LASF127:
 6629 07ed 726F7753 		.ascii	"rowSnsClkSource\000"
 6629      6E73436C 
 6629      6B536F75 
 6629      72636500 
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 185


 6630              	.LASF255:
 6631 07fd 43617053 		.ascii	"CapSense_DischargeExtCapacitors\000"
 6631      656E7365 
 6631      5F446973 
 6631      63686172 
 6631      67654578 
 6632              	.LASF234:
 6633 081d 746D7050 		.ascii	"tmpPcDrRegValue\000"
 6633      63447252 
 6633      65675661 
 6633      6C756500 
 6634              	.LASF198:
 6635 082d 43617053 		.ascii	"CapSense_BIST_CSD_SNS_CAP_E\000"
 6635      656E7365 
 6635      5F424953 
 6635      545F4353 
 6635      445F534E 
 6636              	.LASF97:
 6637 0849 67726F75 		.ascii	"group4Start\000"
 6637      70345374 
 6637      61727400 
 6638              	.LASF172:
 6639 0855 6873696F 		.ascii	"hsiomShift\000"
 6639      6D536869 
 6639      667400
 6640              	.LASF250:
 6641 0860 43617053 		.ascii	"CapSense_SsCSDGetRowSnsClkDivider\000"
 6641      656E7365 
 6641      5F537343 
 6641      53444765 
 6641      74526F77 
 6642              	.LASF16:
 6643 0882 75696E74 		.ascii	"uint16\000"
 6643      313600
 6644              	.LASF125:
 6645 0889 726F7753 		.ascii	"rowSnsClk\000"
 6645      6E73436C 
 6645      6B00
 6646              	.LASF114:
 6647 0893 7265736F 		.ascii	"resolution\000"
 6647      6C757469 
 6647      6F6E00
 6648              	.LASF12:
 6649 089e 75696E74 		.ascii	"uint8_t\000"
 6649      385F7400 
 6650              	.LASF148:
 6651 08a6 73746174 		.ascii	"status\000"
 6651      757300
 6652              	.LASF244:
 6653 08ad 43617053 		.ascii	"CapSense_CalibrateWidget\000"
 6653      656E7365 
 6653      5F43616C 
 6653      69627261 
 6653      74655769 
 6654              	.LASF197:
 6655 08c6 43617053 		.ascii	"CapSense_SCAN_CSX_E\000"
 6655      656E7365 
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 186


 6655      5F534341 
 6655      4E5F4353 
 6655      585F4500 
 6656              	.LASF25:
 6657 08da 43617053 		.ascii	"CapSense_LOW_BSLN_RST_TYPE\000"
 6657      656E7365 
 6657      5F4C4F57 
 6657      5F42534C 
 6657      4E5F5253 
 6658              	.LASF241:
 6659 08f5 43617053 		.ascii	"CapSense_SsSetSnsClockDivider\000"
 6659      656E7365 
 6659      5F537353 
 6659      6574536E 
 6659      73436C6F 
 6660              	.LASF113:
 6661 0913 43617053 		.ascii	"CapSense_SENSE_METHOD_ENUM\000"
 6661      656E7365 
 6661      5F53454E 
 6661      53455F4D 
 6661      4554484F 
 6662              	.LASF260:
 6663 092e 43617053 		.ascii	"CapSense_SetInactiveElectrodeState\000"
 6663      656E7365 
 6663      5F536574 
 6663      496E6163 
 6663      74697665 
 6664              	.LASF68:
 6665 0951 626F7474 		.ascii	"bottomAngleThreshold\000"
 6665      6F6D416E 
 6665      676C6554 
 6665      68726573 
 6665      686F6C64 
 6666              	.LASF140:
 6667 0966 69646163 		.ascii	"idacComp\000"
 6667      436F6D70 
 6667      00
 6668              	.LASF167:
 6669 096f 70635074 		.ascii	"pcPtr\000"
 6669      7200
 6670              	.LASF69:
 6671 0975 77696474 		.ascii	"widthOfDisambiguation\000"
 6671      684F6644 
 6671      6973616D 
 6671      62696775 
 6671      6174696F 
 6672              	.LASF9:
 6673 098b 6C6F6E67 		.ascii	"long long int\000"
 6673      206C6F6E 
 6673      6720696E 
 6673      7400
 6674              	.LASF184:
 6675 0999 6E756D43 		.ascii	"numCols\000"
 6675      6F6C7300 
 6676              	.LASF297:
 6677 09a1 433A5C55 		.ascii	"C:\\Users\\inspiron\\Documents\\PSoC Creator\\Proje"
 6677      73657273 
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 187


 6677      5C696E73 
 6677      7069726F 
 6677      6E5C446F 
 6678 09cf 6374735C 		.ascii	"cts\\CE224821_PSoC4_Capsense_Touchpad_Gestures_CSD0"
 6678      43453232 
 6678      34383231 
 6678      5F50536F 
 6678      43345F43 
 6679 0a01 315C4345 		.ascii	"1\\CE224821_PSoC4_Capsense_Touchpad_Gestures_CSD01."
 6679      32323438 
 6679      32315F50 
 6679      536F4334 
 6679      5F436170 
 6680 0a33 63796473 		.ascii	"cydsn\000"
 6680      6E00
 6681              	.LASF119:
 6682 0a39 6F6E4465 		.ascii	"onDebounce\000"
 6682      626F756E 
 6682      636500
 6683              	.LASF206:
 6684 0a44 636F6E76 		.ascii	"conversionsNum\000"
 6684      65727369 
 6684      6F6E734E 
 6684      756D00
 6685              	.LASF245:
 6686 0a53 63616C69 		.ascii	"calibrateStatus\000"
 6686      62726174 
 6686      65537461 
 6686      74757300 
 6687              	.LASF154:
 6688 0a63 77646774 		.ascii	"wdgtList\000"
 6688      4C697374 
 6688      00
 6689              	.LASF196:
 6690 0a6c 43617053 		.ascii	"CapSense_SCAN_CSD_E\000"
 6690      656E7365 
 6690      5F534341 
 6690      4E5F4353 
 6690      445F4500 
 6691              	.LASF176:
 6692 0a80 70747232 		.ascii	"ptr2SnsFlash\000"
 6692      536E7346 
 6692      6C617368 
 6692      00
 6693              	.LASF194:
 6694 0a8d 43617053 		.ascii	"CapSense_FLASH_STRUCT\000"
 6694      656E7365 
 6694      5F464C41 
 6694      53485F53 
 6694      54525543 
 6695              	.LASF216:
 6696 0aa3 43617053 		.ascii	"CapSense_Scan\000"
 6696      656E7365 
 6696      5F536361 
 6696      6E00
 6697              	.LASF262:
 6698 0ab1 43617053 		.ascii	"CapSense_WriteBitsSafe\000"
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 188


 6698      656E7365 
 6698      5F577269 
 6698      74654269 
 6698      74735361 
 6699              	.LASF235:
 6700 0ac8 746D7048 		.ascii	"tmpHsiomRegValue\000"
 6700      73696F6D 
 6700      52656756 
 6700      616C7565 
 6700      00
 6701              	.LASF270:
 6702 0ad9 43617053 		.ascii	"CapSense_dsRam\000"
 6702      656E7365 
 6702      5F647352 
 6702      616D00
 6703              	.LASF162:
 6704 0ae8 736E7254 		.ascii	"snrTestRawCount\000"
 6704      65737452 
 6704      6177436F 
 6704      756E7400 
 6705              	.LASF117:
 6706 0af8 6E4E6F69 		.ascii	"nNoiseTh\000"
 6706      73655468 
 6706      00
 6707              	.LASF152:
 6708 0b01 63736430 		.ascii	"csd0Config\000"
 6708      436F6E66 
 6708      696700
 6709              	.LASF23:
 6710 0b0c 63796973 		.ascii	"cyisraddress\000"
 6710      72616464 
 6710      72657373 
 6710      00
 6711              	.LASF77:
 6712 0b19 636C6963 		.ascii	"clickRadiusX\000"
 6712      6B526164 
 6712      69757358 
 6712      00
 6713              	.LASF78:
 6714 0b26 636C6963 		.ascii	"clickRadiusY\000"
 6714      6B526164 
 6714      69757359 
 6714      00
 6715              	.LASF222:
 6716 0b33 43617053 		.ascii	"CapSense_ScanExt\000"
 6716      656E7365 
 6716      5F536361 
 6716      6E457874 
 6716      00
 6717              	.LASF130:
 6718 0b44 43617053 		.ascii	"CapSense_RAM_WD_BASE_STRUCT\000"
 6718      656E7365 
 6718      5F52414D 
 6718      5F57445F 
 6718      42415345 
 6719              	.LASF107:
 6720 0b60 43617053 		.ascii	"CapSense_WD_TYPE_ENUM\000"
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 189


 6720      656E7365 
 6720      5F57445F 
 6720      54595045 
 6720      5F454E55 
 6721              	.LASF136:
 6722 0b76 62736C6E 		.ascii	"bsln\000"
 6722      00
 6723              	.LASF26:
 6724 0b7b 73697A65 		.ascii	"size\000"
 6724      00
 6725              	.LASF128:
 6726 0b80 67657374 		.ascii	"gestureId\000"
 6726      75726549 
 6726      6400
 6727              	.LASF166:
 6728 0b8a 6873696F 		.ascii	"hsiomPtr\000"
 6728      6D507472 
 6728      00
 6729              	.LASF17:
 6730 0b93 75696E74 		.ascii	"uint32\000"
 6730      333200
 6731              	.LASF179:
 6732 0b9a 70747232 		.ascii	"ptr2FltrHistory\000"
 6732      466C7472 
 6732      48697374 
 6732      6F727900 
 6733              	.LASF203:
 6734 0baa 6761696E 		.ascii	"gainValue\000"
 6734      56616C75 
 6734      6500
 6735              	.LASF279:
 6736 0bb4 43617053 		.ascii	"CapSense_curSnsIOPtr\000"
 6736      656E7365 
 6736      5F637572 
 6736      536E7349 
 6736      4F507472 
 6737              	.LASF171:
 6738 0bc9 6D61736B 		.ascii	"mask\000"
 6738      00
 6739              	.LASF101:
 6740 0bce 43617053 		.ascii	"CapSense_WD_LINEAR_SLIDER_E\000"
 6740      656E7365 
 6740      5F57445F 
 6740      4C494E45 
 6740      41525F53 
 6741              	.LASF91:
 6742 0bea 67726F75 		.ascii	"group1Start\000"
 6742      70315374 
 6742      61727400 
 6743              	.LASF243:
 6744 0bf6 43617053 		.ascii	"CapSense_SsSetClockDividers\000"
 6744      656E7365 
 6744      5F537353 
 6744      6574436C 
 6744      6F636B44 
 6745              	.LASF201:
 6746 0c12 43617053 		.ascii	"CapSense_OPERATION_MODE_ENUM\000"
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 190


 6746      656E7365 
 6746      5F4F5045 
 6746      52415449 
 6746      4F4E5F4D 
 6747              	.LASF291:
 6748 0c2f 43794465 		.ascii	"CyDelayUs\000"
 6748      6C617955 
 6748      7300
 6749              	.LASF92:
 6750 0c39 67726F75 		.ascii	"group1End\000"
 6750      7031456E 
 6750      6400
 6751              	.LASF71:
 6752 0c43 44545061 		.ascii	"DTPanDebounce\000"
 6752      6E446562 
 6752      6F756E63 
 6752      6500
 6753              	.LASF294:
 6754 0c51 43617053 		.ascii	"CapSense_SsCSDInitialize\000"
 6754      656E7365 
 6754      5F537343 
 6754      5344496E 
 6754      69746961 
 6755              	.LASF219:
 6756 0c6a 77646774 		.ascii	"wdgtIndex\000"
 6756      496E6465 
 6756      7800
 6757              	.LASF290:
 6758 0c74 43617053 		.ascii	"CapSense_SsCSDGetNumberOfConversions\000"
 6758      656E7365 
 6758      5F537343 
 6758      53444765 
 6758      744E756D 
 6759              	.LASF112:
 6760 0c99 43617053 		.ascii	"CapSense_SENSE_METHOD_ISX_E\000"
 6760      656E7365 
 6760      5F53454E 
 6760      53455F4D 
 6760      4554484F 
 6761              	.LASF195:
 6762 0cb5 6C6F6E67 		.ascii	"long double\000"
 6762      20646F75 
 6762      626C6500 
 6763              	.LASF13:
 6764 0cc1 75696E74 		.ascii	"uint16_t\000"
 6764      31365F74 
 6764      00
 6765              	.LASF22:
 6766 0cca 72656733 		.ascii	"reg32\000"
 6766      3200
 6767              	.LASF161:
 6768 0cd0 736E7254 		.ascii	"snrTestScanCounter\000"
 6768      65737453 
 6768      63616E43 
 6768      6F756E74 
 6768      657200
 6769              	.LASF143:
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 191


 6770 0ce3 636F6E66 		.ascii	"configId\000"
 6770      69674964 
 6770      00
 6771              	.LASF178:
 6772 0cec 70747232 		.ascii	"ptr2SnsRam\000"
 6772      536E7352 
 6772      616D00
 6773              	.LASF85:
 6774 0cf7 4454436C 		.ascii	"DTClickTimeoutMin\000"
 6774      69636B54 
 6774      696D656F 
 6774      75744D69 
 6774      6E00
 6775              	.LASF227:
 6776 0d09 696E7465 		.ascii	"interruptState\000"
 6776      72727570 
 6776      74537461 
 6776      746500
 6777              	.LASF151:
 6778 0d18 736E7353 		.ascii	"snsStatus\000"
 6778      74617475 
 6778      7300
 6779              	.LASF106:
 6780 0d22 43617053 		.ascii	"CapSense_WD_ENCODERDIAL_E\000"
 6780      656E7365 
 6780      5F57445F 
 6780      454E434F 
 6780      44455244 
 6781              	.LASF126:
 6782 0d3c 736E7343 		.ascii	"snsClkSource\000"
 6782      6C6B536F 
 6782      75726365 
 6782      00
 6783              	.LASF189:
 6784 0d49 7943656E 		.ascii	"yCentroidMultiplier\000"
 6784      74726F69 
 6784      644D756C 
 6784      7469706C 
 6784      69657200 
 6785              	.LASF129:
 6786 0d5d 73697A65 		.ascii	"sizetype\000"
 6786      74797065 
 6786      00
 6787              	.LASF186:
 6788 0d66 78526573 		.ascii	"xResolution\000"
 6788      6F6C7574 
 6788      696F6E00 
 6789              	.LASF237:
 6790 0d72 43617053 		.ascii	"CapSense_SsIsrInitialize\000"
 6790      656E7365 
 6790      5F537349 
 6790      7372496E 
 6790      69746961 
 6791              	.LASF54:
 6792 0d8b 64745363 		.ascii	"dtScrollStep1\000"
 6792      726F6C6C 
 6792      53746570 
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 192


 6792      3100
 6793              	.LASF55:
 6794 0d99 64745363 		.ascii	"dtScrollStep2\000"
 6794      726F6C6C 
 6794      53746570 
 6794      3200
 6795              	.LASF56:
 6796 0da7 64745363 		.ascii	"dtScrollStep3\000"
 6796      726F6C6C 
 6796      53746570 
 6796      3300
 6797              	.LASF57:
 6798 0db5 64745363 		.ascii	"dtScrollStep4\000"
 6798      726F6C6C 
 6798      53746570 
 6798      3400
 6799              	.LASF2:
 6800 0dc3 73686F72 		.ascii	"short int\000"
 6800      7420696E 
 6800      7400
 6801              	.LASF165:
 6802 0dcd 43617053 		.ascii	"CapSense_RAM_STRUCT\000"
 6802      656E7365 
 6802      5F52414D 
 6802      5F535452 
 6802      55435400 
 6803              	.LASF230:
 6804 0de1 43617053 		.ascii	"CapSense_SsSetAllIOsState\000"
 6804      656E7365 
 6804      5F537353 
 6804      6574416C 
 6804      6C494F73 
 6805              	.LASF6:
 6806 0dfb 6C6F6E67 		.ascii	"long int\000"
 6806      20696E74 
 6806      00
 6807              	.LASF149:
 6808 0e04 77646774 		.ascii	"wdgtEnable\000"
 6808      456E6162 
 6808      6C6500
 6809              	.LASF138:
 6810 0e0f 64696666 		.ascii	"diff\000"
 6810      00
 6811              	.LASF133:
 6812 0e14 43617053 		.ascii	"CapSense_RAM_WD_CSD_TOUCHPAD_STRUCT\000"
 6812      656E7365 
 6812      5F52414D 
 6812      5F57445F 
 6812      4353445F 
 6813              	.LASF146:
 6814 0e38 74756E65 		.ascii	"tunerCmd\000"
 6814      72436D64 
 6814      00
 6815              	.LASF110:
 6816 0e41 43617053 		.ascii	"CapSense_SENSE_METHOD_CSX_E\000"
 6816      656E7365 
 6816      5F53454E 
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 193


 6816      53455F4D 
 6816      4554484F 
 6817              	.LASF169:
 6818 0e5d 70735074 		.ascii	"psPtr\000"
 6818      7200
 6819              	.LASF215:
 6820 0e63 43617053 		.ascii	"CapSense_SetupWidget\000"
 6820      656E7365 
 6820      5F536574 
 6820      75705769 
 6820      64676574 
 6821              	.LASF135:
 6822 0e78 43617053 		.ascii	"CapSense_RAM_WD_LIST_STRUCT\000"
 6822      656E7365 
 6822      5F52414D 
 6822      5F57445F 
 6822      4C495354 
 6823              	.LASF289:
 6824 0e94 43617053 		.ascii	"CapSense_CSDCalibrateWidget\000"
 6824      656E7365 
 6824      5F435344 
 6824      43616C69 
 6824      62726174 
 6825              	.LASF100:
 6826 0eb0 43617053 		.ascii	"CapSense_WD_BUTTON_E\000"
 6826      656E7365 
 6826      5F57445F 
 6826      42555454 
 6826      4F4E5F45 
 6827              	.LASF293:
 6828 0ec5 43617053 		.ascii	"CapSense_SsCSDElectrodeCheck\000"
 6828      656E7365 
 6828      5F537343 
 6828      5344456C 
 6828      65637472 
 6829              	.LASF202:
 6830 0ee2 6761696E 		.ascii	"gainReg\000"
 6830      52656700 
 6831              	.LASF96:
 6832 0eea 67726F75 		.ascii	"group3End\000"
 6832      7033456E 
 6832      6400
 6833              	.LASF3:
 6834 0ef4 5F5F7569 		.ascii	"__uint8_t\000"
 6834      6E74385F 
 6834      7400
 6835              	.LASF122:
 6836 0efe 726F7749 		.ascii	"rowIdacMod\000"
 6836      6461634D 
 6836      6F6400
 6837              	.LASF95:
 6838 0f09 67726F75 		.ascii	"group3Start\000"
 6838      70335374 
 6838      61727400 
 6839              	.LASF271:
 6840 0f15 43617053 		.ascii	"CapSense_dsFlash\000"
 6840      656E7365 
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 194


 6840      5F647346 
 6840      6C617368 
 6840      00
 6841              	.LASF284:
 6842 0f26 43617053 		.ascii	"CapSense_CSDScanExt\000"
 6842      656E7365 
 6842      5F435344 
 6842      5363616E 
 6842      45787400 
 6843              	.LASF150:
 6844 0f3a 77646774 		.ascii	"wdgtStatus\000"
 6844      53746174 
 6844      757300
 6845              	.LASF296:
 6846 0f45 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_Sensing.c\000"
 6846      72617465 
 6846      645F536F 
 6846      75726365 
 6846      5C50536F 
 6847              	.LASF287:
 6848 0f6f 43617053 		.ascii	"CapSense_CSDConnectSns\000"
 6848      656E7365 
 6848      5F435344 
 6848      436F6E6E 
 6848      65637453 
 6849              	.LASF109:
 6850 0f86 43617053 		.ascii	"CapSense_SENSE_METHOD_CSD_E\000"
 6850      656E7365 
 6850      5F53454E 
 6850      53455F4D 
 6850      4554484F 
 6851              	.LASF277:
 6852 0fa2 43617053 		.ascii	"CapSense_currentSenseMethod\000"
 6852      656E7365 
 6852      5F637572 
 6852      72656E74 
 6852      53656E73 
 6853              	.LASF99:
 6854 0fbe 43617053 		.ascii	"CapSense_TMG_CONFIG_STRUCT\000"
 6854      656E7365 
 6854      5F544D47 
 6854      5F434F4E 
 6854      4649475F 
 6855              	.LASF252:
 6856 0fd9 70727353 		.ascii	"prsSize\000"
 6856      697A6500 
 6857              	.LASF45:
 6858 0fe1 73745363 		.ascii	"stScrollDebounce\000"
 6858      726F6C6C 
 6858      4465626F 
 6858      756E6365 
 6858      00
 6859              	.LASF173:
 6860 0ff2 64725368 		.ascii	"drShift\000"
 6860      69667400 
 6861              	.LASF8:
 6862 0ffa 6C6F6E67 		.ascii	"long unsigned int\000"
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 195


 6862      20756E73 
 6862      69676E65 
 6862      6420696E 
 6862      7400
 6863              	.LASF248:
 6864 100c 72657456 		.ascii	"retVal\000"
 6864      616C00
 6865              	.LASF238:
 6866 1013 61646472 		.ascii	"address\000"
 6866      65737300 
 6867              	.LASF121:
 6868 101b 69646163 		.ascii	"idacMod\000"
 6868      4D6F6400 
 6869              	.LASF104:
 6870 1023 43617053 		.ascii	"CapSense_WD_TOUCHPAD_E\000"
 6870      656E7365 
 6870      5F57445F 
 6870      544F5543 
 6870      48504144 
 6871              	.LASF288:
 6872 103a 43617053 		.ascii	"CapSense_ISR_StartEx\000"
 6872      656E7365 
 6872      5F495352 
 6872      5F537461 
 6872      72744578 
 6873              	.LASF180:
 6874 104f 70747232 		.ascii	"ptr2DebounceArr\000"
 6874      4465626F 
 6874      756E6365 
 6874      41727200 
 6875              	.LASF80:
 6876 105f 7265736F 		.ascii	"resolutionX\000"
 6876      6C757469 
 6876      6F6E5800 
 6877              	.LASF81:
 6878 106b 7265736F 		.ascii	"resolutionY\000"
 6878      6C757469 
 6878      6F6E5900 
 6879              	.LASF212:
 6880 1077 6C667372 		.ascii	"lfsrDither\000"
 6880      44697468 
 6880      657200
 6881              	.LASF188:
 6882 1082 7843656E 		.ascii	"xCentroidMultiplier\000"
 6882      74726F69 
 6882      644D756C 
 6882      7469706C 
 6882      69657200 
 6883              	.LASF115:
 6884 1096 66696E67 		.ascii	"fingerTh\000"
 6884      65725468 
 6884      00
 6885              	.LASF137:
 6886 109f 62736C6E 		.ascii	"bslnExt\000"
 6886      45787400 
 6887              	.LASF190:
 6888 10a7 70747232 		.ascii	"ptr2PosHistory\000"
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 196


 6888      506F7348 
 6888      6973746F 
 6888      727900
 6889              	.LASF163:
 6890 10b6 7363616E 		.ascii	"scanCsdISC\000"
 6890      43736449 
 6890      534300
 6891              	.LASF86:
 6892 10c1 5354436C 		.ascii	"STClickTimeoutMax\000"
 6892      69636B54 
 6892      696D656F 
 6892      75744D61 
 6892      7800
 6893              	.LASF21:
 6894 10d3 63797374 		.ascii	"cystatus\000"
 6894      61747573 
 6894      00
 6895              	.LASF1:
 6896 10dc 756E7369 		.ascii	"unsigned char\000"
 6896      676E6564 
 6896      20636861 
 6896      7200
 6897              	.LASF7:
 6898 10ea 5F5F7569 		.ascii	"__uint32_t\000"
 6898      6E743332 
 6898      5F7400
 6899              	.LASF229:
 6900 10f5 43617053 		.ascii	"CapSense_SetPinState\000"
 6900      656E7365 
 6900      5F536574 
 6900      50696E53 
 6900      74617465 
 6901              	.LASF156:
 6902 110a 67657374 		.ascii	"gestures\000"
 6902      75726573 
 6902      00
 6903              	.LASF181:
 6904 1113 73746174 		.ascii	"staticConfig\000"
 6904      6963436F 
 6904      6E666967 
 6904      00
 6905              	.LASF131:
 6906 1120 706F7358 		.ascii	"posX\000"
 6906      00
 6907              	.LASF132:
 6908 1125 706F7359 		.ascii	"posY\000"
 6908      00
 6909              	.LASF88:
 6910 112a 5354446F 		.ascii	"STDoubleClickTimeoutMax\000"
 6910      75626C65 
 6910      436C6963 
 6910      6B54696D 
 6910      656F7574 
 6911              	.LASF228:
 6912 1142 696F5074 		.ascii	"ioPtr\000"
 6912      7200
 6913              	.LASF164:
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 197


 6914 1148 7363616E 		.ascii	"scanCurrentISC\000"
 6914      43757272 
 6914      656E7449 
 6914      534300
 6915              	.LASF177:
 6916 1157 70747232 		.ascii	"ptr2WdgtRam\000"
 6916      57646774 
 6916      52616D00 
 6917              	.LASF24:
 6918 1163 43617053 		.ascii	"CapSense_THRESHOLD_TYPE\000"
 6918      656E7365 
 6918      5F544852 
 6918      4553484F 
 6918      4C445F54 
 6919              	.LASF282:
 6920 117b 43617053 		.ascii	"CapSense_CSDScan\000"
 6920      656E7365 
 6920      5F435344 
 6920      5363616E 
 6920      00
 6921              	.LASF111:
 6922 118c 43617053 		.ascii	"CapSense_SENSE_METHOD_BIST_E\000"
 6922      656E7365 
 6922      5F53454E 
 6922      53455F4D 
 6922      4554484F 
 6923              	.LASF185:
 6924 11a9 6E756D52 		.ascii	"numRows\000"
 6924      6F777300 
 6925              	.LASF224:
 6926 11b1 73746174 		.ascii	"state\000"
 6926      6500
 6927              	.LASF226:
 6928 11b7 656C7464 		.ascii	"eltdIndex\000"
 6928      496E6465 
 6928      7800
 6929              	.LASF218:
 6930 11c1 43617053 		.ascii	"CapSense_ScanAllWidgets\000"
 6930      656E7365 
 6930      5F536361 
 6930      6E416C6C 
 6930      57696467 
 6931              	.LASF170:
 6932 11d9 6873696F 		.ascii	"hsiomMask\000"
 6932      6D4D6173 
 6932      6B00
 6933              	.LASF158:
 6934 11e3 74696D65 		.ascii	"timestamp\000"
 6934      7374616D 
 6934      7000
 6935              	.LASF124:
 6936 11ed 736E7343 		.ascii	"snsClk\000"
 6936      6C6B00
 6937              	.LASF267:
 6938 11f4 43617053 		.ascii	"CapSense_SsSwitchSensingMode\000"
 6938      656E7365 
 6938      5F537353 
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 198


 6938      77697463 
 6938      6853656E 
 6939              	.LASF285:
 6940 1211 4379456E 		.ascii	"CyEnterCriticalSection\000"
 6940      74657243 
 6940      72697469 
 6940      63616C53 
 6940      65637469 
 6941              	.LASF276:
 6942 1228 43617053 		.ascii	"CapSense_curRamSnsPtr\000"
 6942      656E7365 
 6942      5F637572 
 6942      52616D53 
 6942      6E735074 
 6943              	.LASF0:
 6944 123e 7369676E 		.ascii	"signed char\000"
 6944      65642063 
 6944      68617200 
 6945              	.LASF278:
 6946 124a 43617053 		.ascii	"CapSense_scanFreqIndex\000"
 6946      656E7365 
 6946      5F736361 
 6946      6E467265 
 6946      71496E64 
 6947              	.LASF66:
 6948 1261 65646765 		.ascii	"edgeSwipeActiveDistance\000"
 6948      53776970 
 6948      65416374 
 6948      69766544 
 6948      69737461 
 6949              	.LASF67:
 6950 1279 746F7041 		.ascii	"topAngleThreshold\000"
 6950      6E676C65 
 6950      54687265 
 6950      73686F6C 
 6950      6400
 6951              	.LASF5:
 6952 128b 73686F72 		.ascii	"short unsigned int\000"
 6952      7420756E 
 6952      7369676E 
 6952      65642069 
 6952      6E7400
 6953              	.LASF72:
 6954 129e 44545A6F 		.ascii	"DTZoomDebounce\000"
 6954      6F6D4465 
 6954      626F756E 
 6954      636500
 6955              	.LASF272:
 6956 12ad 43617053 		.ascii	"CapSense_ioList\000"
 6956      656E7365 
 6956      5F696F4C 
 6956      69737400 
 6957              	.LASF299:
 6958 12bd 43617053 		.ascii	"CapSense_SsPostAllWidgetsScan\000"
 6958      656E7365 
 6958      5F537350 
 6958      6F737441 
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 199


 6958      6C6C5769 
 6959              	.LASF33:
 6960 12db 73745363 		.ascii	"stScrollThreshold1X\000"
 6960      726F6C6C 
 6960      54687265 
 6960      73686F6C 
 6960      64315800 
 6961              	.LASF37:
 6962 12ef 73745363 		.ascii	"stScrollThreshold1Y\000"
 6962      726F6C6C 
 6962      54687265 
 6962      73686F6C 
 6962      64315900 
 6963              	.LASF242:
 6964 1303 6E657752 		.ascii	"newRegValue\000"
 6964      65675661 
 6964      6C756500 
 6965              	.LASF15:
 6966 130f 75696E74 		.ascii	"uint8\000"
 6966      3800
 6967              	.LASF19:
 6968 1315 646F7562 		.ascii	"double\000"
 6968      6C6500
 6969              	.LASF74:
 6970 131c 726F7461 		.ascii	"rotateDebounce\000"
 6970      74654465 
 6970      626F756E 
 6970      636500
 6971              	.LASF139:
 6972 132b 6E656742 		.ascii	"negBslnRstCnt\000"
 6972      736C6E52 
 6972      7374436E 
 6972      7400
 6973              	.LASF268:
 6974 1339 43617053 		.ascii	"CapSense_SsInitialize\000"
 6974      656E7365 
 6974      5F537349 
 6974      6E697469 
 6974      616C697A 
 6975              	.LASF205:
 6976 134f 736E7343 		.ascii	"snsClkDivider\000"
 6976      6C6B4469 
 6976      76696465 
 6976      7200
 6977              	.LASF253:
 6978 135d 6D6F6443 		.ascii	"modClkDivider\000"
 6978      6C6B4469 
 6978      76696465 
 6978      7200
 6979              	.LASF144:
 6980 136b 64657669 		.ascii	"deviceId\000"
 6980      63654964 
 6980      00
 6981              	.LASF187:
 6982 1374 79526573 		.ascii	"yResolution\000"
 6982      6F6C7574 
 6982      696F6E00 
ARM GAS  C:\Users\inspiron\AppData\Local\Temp\cctivNHr.s 			page 200


 6983              	.LASF214:
 6984 1380 77696467 		.ascii	"widgetStatus\000"
 6984      65745374 
 6984      61747573 
 6984      00
 6985              	.LASF199:
 6986 138d 43617053 		.ascii	"CapSense_BIST_CSX_SNS_CAP_E\000"
 6986      656E7365 
 6986      5F424953 
 6986      545F4353 
 6986      585F534E 
 6987              	.LASF213:
 6988 13a9 77696467 		.ascii	"widgetId\000"
 6988      65744964 
 6988      00
 6989              	.LASF275:
 6990 13b2 43617053 		.ascii	"CapSense_requestScanAllWidget\000"
 6990      656E7365 
 6990      5F726571 
 6990      75657374 
 6990      5363616E 
 6991              	.LASF254:
 6992 13d0 43617053 		.ascii	"CapSense_SsInitializeSourceSenseClk\000"
 6992      656E7365 
 6992      5F537349 
 6992      6E697469 
 6992      616C697A 
 6993              	.LASF280:
 6994 13f4 43617053 		.ascii	"CapSense_idacGainTable\000"
 6994      656E7365 
 6994      5F696461 
 6994      63476169 
 6994      6E546162 
 6995              	.LASF142:
 6996 140b 43617053 		.ascii	"CapSense_RAM_SNS_LIST_STRUCT\000"
 6996      656E7365 
 6996      5F52414D 
 6996      5F534E53 
 6996      5F4C4953 
 6997              	.LASF34:
 6998 1428 73745363 		.ascii	"stScrollThreshold2X\000"
 6998      726F6C6C 
 6998      54687265 
 6998      73686F6C 
 6998      64325800 
 6999              	.LASF38:
 7000 143c 73745363 		.ascii	"stScrollThreshold2Y\000"
 7000      726F6C6C 
 7000      54687265 
 7000      73686F6C 
 7000      64325900 
 7001              	.LASF193:
 7002 1450 77646774 		.ascii	"wdgtArray\000"
 7002      41727261 
 7002      7900
 7003              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
